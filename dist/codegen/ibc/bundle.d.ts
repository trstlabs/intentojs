import * as _61 from "./applications/transfer/v1/genesis";
import * as _62 from "./applications/transfer/v1/query";
import * as _63 from "./applications/transfer/v1/transfer";
import * as _64 from "./applications/transfer/v1/tx";
import * as _65 from "./applications/transfer/v2/packet";
import * as _66 from "./core/channel/v1/channel";
import * as _67 from "./core/channel/v1/genesis";
import * as _68 from "./core/channel/v1/query";
import * as _69 from "./core/channel/v1/tx";
import * as _70 from "./core/client/v1/client";
import * as _71 from "./core/client/v1/genesis";
import * as _72 from "./core/client/v1/query";
import * as _73 from "./core/client/v1/tx";
import * as _74 from "./core/commitment/v1/commitment";
import * as _75 from "./core/connection/v1/connection";
import * as _76 from "./core/connection/v1/genesis";
import * as _77 from "./core/connection/v1/query";
import * as _78 from "./core/connection/v1/tx";
import * as _79 from "./lightclients/localhost/v1/localhost";
import * as _80 from "./lightclients/solomachine/v1/solomachine";
import * as _81 from "./lightclients/solomachine/v2/solomachine";
import * as _82 from "./lightclients/tendermint/v1/tendermint";
import * as _156 from "./applications/transfer/v1/query.rpc.Query";
import * as _157 from "./core/channel/v1/query.rpc.Query";
import * as _158 from "./core/client/v1/query.rpc.Query";
import * as _159 from "./core/connection/v1/query.rpc.Query";
import * as _160 from "./applications/transfer/v1/tx.rpc.msg";
import * as _161 from "./core/channel/v1/tx.rpc.msg";
import * as _162 from "./core/client/v1/tx.rpc.msg";
import * as _163 from "./core/connection/v1/tx.rpc.msg";
export declare namespace ibc {
    namespace applications {
        namespace transfer {
            const v1: {
                MsgClientImpl: typeof _160.MsgClientImpl;
                QueryClientImpl: typeof _156.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    denomTrace(request: _62.QueryDenomTraceRequest): Promise<_62.QueryDenomTraceResponse>;
                    denomTraces(request?: _62.QueryDenomTracesRequest): Promise<_62.QueryDenomTracesResponse>;
                    params(request?: _62.QueryParamsRequest): Promise<_62.QueryParamsResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        transfer(value: _64.MsgTransfer): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        transfer(value: _64.MsgTransfer): {
                            typeUrl: string;
                            value: _64.MsgTransfer;
                        };
                    };
                    toJSON: {
                        transfer(value: _64.MsgTransfer): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        transfer(value: any): {
                            typeUrl: string;
                            value: _64.MsgTransfer;
                        };
                    };
                    fromPartial: {
                        transfer(value: _64.MsgTransfer): {
                            typeUrl: string;
                            value: _64.MsgTransfer;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.applications.transfer.v1.MsgTransfer": {
                        aminoType: string;
                        toAmino: (message: _64.MsgTransfer) => _64.MsgTransferAmino;
                        fromAmino: (object: _64.MsgTransferAmino) => _64.MsgTransfer;
                    };
                };
                MsgTransfer: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _64.MsgTransfer;
                    isSDK(o: any): o is _64.MsgTransferSDKType;
                    isAmino(o: any): o is _64.MsgTransferAmino;
                    encode(message: _64.MsgTransfer, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _64.MsgTransfer;
                    fromJSON(object: any): _64.MsgTransfer;
                    toJSON(message: _64.MsgTransfer): unknown;
                    fromPartial(object: Partial<_64.MsgTransfer>): _64.MsgTransfer;
                    fromAmino(object: _64.MsgTransferAmino): _64.MsgTransfer;
                    toAmino(message: _64.MsgTransfer): _64.MsgTransferAmino;
                    fromAminoMsg(object: _64.MsgTransferAminoMsg): _64.MsgTransfer;
                    toAminoMsg(message: _64.MsgTransfer): _64.MsgTransferAminoMsg;
                    fromProtoMsg(message: _64.MsgTransferProtoMsg): _64.MsgTransfer;
                    toProto(message: _64.MsgTransfer): Uint8Array;
                    toProtoMsg(message: _64.MsgTransfer): _64.MsgTransferProtoMsg;
                };
                MsgTransferResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _64.MsgTransferResponse;
                    isSDK(o: any): o is _64.MsgTransferResponseSDKType;
                    isAmino(o: any): o is _64.MsgTransferResponseAmino;
                    encode(_: _64.MsgTransferResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _64.MsgTransferResponse;
                    fromJSON(_: any): _64.MsgTransferResponse;
                    toJSON(_: _64.MsgTransferResponse): unknown;
                    fromPartial(_: Partial<_64.MsgTransferResponse>): _64.MsgTransferResponse;
                    fromAmino(_: _64.MsgTransferResponseAmino): _64.MsgTransferResponse;
                    toAmino(_: _64.MsgTransferResponse): _64.MsgTransferResponseAmino;
                    fromAminoMsg(object: _64.MsgTransferResponseAminoMsg): _64.MsgTransferResponse;
                    toAminoMsg(message: _64.MsgTransferResponse): _64.MsgTransferResponseAminoMsg;
                    fromProtoMsg(message: _64.MsgTransferResponseProtoMsg): _64.MsgTransferResponse;
                    toProto(message: _64.MsgTransferResponse): Uint8Array;
                    toProtoMsg(message: _64.MsgTransferResponse): _64.MsgTransferResponseProtoMsg;
                };
                DenomTrace: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _63.DenomTrace;
                    isSDK(o: any): o is _63.DenomTraceSDKType;
                    isAmino(o: any): o is _63.DenomTraceAmino;
                    encode(message: _63.DenomTrace, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.DenomTrace;
                    fromJSON(object: any): _63.DenomTrace;
                    toJSON(message: _63.DenomTrace): unknown;
                    fromPartial(object: Partial<_63.DenomTrace>): _63.DenomTrace;
                    fromAmino(object: _63.DenomTraceAmino): _63.DenomTrace;
                    toAmino(message: _63.DenomTrace): _63.DenomTraceAmino;
                    fromAminoMsg(object: _63.DenomTraceAminoMsg): _63.DenomTrace;
                    toAminoMsg(message: _63.DenomTrace): _63.DenomTraceAminoMsg;
                    fromProtoMsg(message: _63.DenomTraceProtoMsg): _63.DenomTrace;
                    toProto(message: _63.DenomTrace): Uint8Array;
                    toProtoMsg(message: _63.DenomTrace): _63.DenomTraceProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _63.Params;
                    isSDK(o: any): o is _63.ParamsSDKType;
                    isAmino(o: any): o is _63.ParamsAmino;
                    encode(message: _63.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.Params;
                    fromJSON(object: any): _63.Params;
                    toJSON(message: _63.Params): unknown;
                    fromPartial(object: Partial<_63.Params>): _63.Params;
                    fromAmino(object: _63.ParamsAmino): _63.Params;
                    toAmino(message: _63.Params): _63.ParamsAmino;
                    fromAminoMsg(object: _63.ParamsAminoMsg): _63.Params;
                    toAminoMsg(message: _63.Params): _63.ParamsAminoMsg;
                    fromProtoMsg(message: _63.ParamsProtoMsg): _63.Params;
                    toProto(message: _63.Params): Uint8Array;
                    toProtoMsg(message: _63.Params): _63.ParamsProtoMsg;
                };
                QueryDenomTraceRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryDenomTraceRequest;
                    isSDK(o: any): o is _62.QueryDenomTraceRequestSDKType;
                    isAmino(o: any): o is _62.QueryDenomTraceRequestAmino;
                    encode(message: _62.QueryDenomTraceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryDenomTraceRequest;
                    fromJSON(object: any): _62.QueryDenomTraceRequest;
                    toJSON(message: _62.QueryDenomTraceRequest): unknown;
                    fromPartial(object: Partial<_62.QueryDenomTraceRequest>): _62.QueryDenomTraceRequest;
                    fromAmino(object: _62.QueryDenomTraceRequestAmino): _62.QueryDenomTraceRequest;
                    toAmino(message: _62.QueryDenomTraceRequest): _62.QueryDenomTraceRequestAmino;
                    fromAminoMsg(object: _62.QueryDenomTraceRequestAminoMsg): _62.QueryDenomTraceRequest;
                    toAminoMsg(message: _62.QueryDenomTraceRequest): _62.QueryDenomTraceRequestAminoMsg;
                    fromProtoMsg(message: _62.QueryDenomTraceRequestProtoMsg): _62.QueryDenomTraceRequest;
                    toProto(message: _62.QueryDenomTraceRequest): Uint8Array;
                    toProtoMsg(message: _62.QueryDenomTraceRequest): _62.QueryDenomTraceRequestProtoMsg;
                };
                QueryDenomTraceResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryDenomTraceResponse;
                    isSDK(o: any): o is _62.QueryDenomTraceResponseSDKType;
                    isAmino(o: any): o is _62.QueryDenomTraceResponseAmino;
                    encode(message: _62.QueryDenomTraceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryDenomTraceResponse;
                    fromJSON(object: any): _62.QueryDenomTraceResponse;
                    toJSON(message: _62.QueryDenomTraceResponse): unknown;
                    fromPartial(object: Partial<_62.QueryDenomTraceResponse>): _62.QueryDenomTraceResponse;
                    fromAmino(object: _62.QueryDenomTraceResponseAmino): _62.QueryDenomTraceResponse;
                    toAmino(message: _62.QueryDenomTraceResponse): _62.QueryDenomTraceResponseAmino;
                    fromAminoMsg(object: _62.QueryDenomTraceResponseAminoMsg): _62.QueryDenomTraceResponse;
                    toAminoMsg(message: _62.QueryDenomTraceResponse): _62.QueryDenomTraceResponseAminoMsg;
                    fromProtoMsg(message: _62.QueryDenomTraceResponseProtoMsg): _62.QueryDenomTraceResponse;
                    toProto(message: _62.QueryDenomTraceResponse): Uint8Array;
                    toProtoMsg(message: _62.QueryDenomTraceResponse): _62.QueryDenomTraceResponseProtoMsg;
                };
                QueryDenomTracesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryDenomTracesRequest;
                    isSDK(o: any): o is _62.QueryDenomTracesRequestSDKType;
                    isAmino(o: any): o is _62.QueryDenomTracesRequestAmino;
                    encode(message: _62.QueryDenomTracesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryDenomTracesRequest;
                    fromJSON(object: any): _62.QueryDenomTracesRequest;
                    toJSON(message: _62.QueryDenomTracesRequest): unknown;
                    fromPartial(object: Partial<_62.QueryDenomTracesRequest>): _62.QueryDenomTracesRequest;
                    fromAmino(object: _62.QueryDenomTracesRequestAmino): _62.QueryDenomTracesRequest;
                    toAmino(message: _62.QueryDenomTracesRequest): _62.QueryDenomTracesRequestAmino;
                    fromAminoMsg(object: _62.QueryDenomTracesRequestAminoMsg): _62.QueryDenomTracesRequest;
                    toAminoMsg(message: _62.QueryDenomTracesRequest): _62.QueryDenomTracesRequestAminoMsg;
                    fromProtoMsg(message: _62.QueryDenomTracesRequestProtoMsg): _62.QueryDenomTracesRequest;
                    toProto(message: _62.QueryDenomTracesRequest): Uint8Array;
                    toProtoMsg(message: _62.QueryDenomTracesRequest): _62.QueryDenomTracesRequestProtoMsg;
                };
                QueryDenomTracesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryDenomTracesResponse;
                    isSDK(o: any): o is _62.QueryDenomTracesResponseSDKType;
                    isAmino(o: any): o is _62.QueryDenomTracesResponseAmino;
                    encode(message: _62.QueryDenomTracesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryDenomTracesResponse;
                    fromJSON(object: any): _62.QueryDenomTracesResponse;
                    toJSON(message: _62.QueryDenomTracesResponse): unknown;
                    fromPartial(object: Partial<_62.QueryDenomTracesResponse>): _62.QueryDenomTracesResponse;
                    fromAmino(object: _62.QueryDenomTracesResponseAmino): _62.QueryDenomTracesResponse;
                    toAmino(message: _62.QueryDenomTracesResponse): _62.QueryDenomTracesResponseAmino;
                    fromAminoMsg(object: _62.QueryDenomTracesResponseAminoMsg): _62.QueryDenomTracesResponse;
                    toAminoMsg(message: _62.QueryDenomTracesResponse): _62.QueryDenomTracesResponseAminoMsg;
                    fromProtoMsg(message: _62.QueryDenomTracesResponseProtoMsg): _62.QueryDenomTracesResponse;
                    toProto(message: _62.QueryDenomTracesResponse): Uint8Array;
                    toProtoMsg(message: _62.QueryDenomTracesResponse): _62.QueryDenomTracesResponseProtoMsg;
                };
                QueryParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryParamsRequest;
                    isSDK(o: any): o is _62.QueryParamsRequestSDKType;
                    isAmino(o: any): o is _62.QueryParamsRequestAmino;
                    encode(_: _62.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryParamsRequest;
                    fromJSON(_: any): _62.QueryParamsRequest;
                    toJSON(_: _62.QueryParamsRequest): unknown;
                    fromPartial(_: Partial<_62.QueryParamsRequest>): _62.QueryParamsRequest;
                    fromAmino(_: _62.QueryParamsRequestAmino): _62.QueryParamsRequest;
                    toAmino(_: _62.QueryParamsRequest): _62.QueryParamsRequestAmino;
                    fromAminoMsg(object: _62.QueryParamsRequestAminoMsg): _62.QueryParamsRequest;
                    toAminoMsg(message: _62.QueryParamsRequest): _62.QueryParamsRequestAminoMsg;
                    fromProtoMsg(message: _62.QueryParamsRequestProtoMsg): _62.QueryParamsRequest;
                    toProto(message: _62.QueryParamsRequest): Uint8Array;
                    toProtoMsg(message: _62.QueryParamsRequest): _62.QueryParamsRequestProtoMsg;
                };
                QueryParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _62.QueryParamsResponse;
                    isSDK(o: any): o is _62.QueryParamsResponseSDKType;
                    isAmino(o: any): o is _62.QueryParamsResponseAmino;
                    encode(message: _62.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryParamsResponse;
                    fromJSON(object: any): _62.QueryParamsResponse;
                    toJSON(message: _62.QueryParamsResponse): unknown;
                    fromPartial(object: Partial<_62.QueryParamsResponse>): _62.QueryParamsResponse;
                    fromAmino(object: _62.QueryParamsResponseAmino): _62.QueryParamsResponse;
                    toAmino(message: _62.QueryParamsResponse): _62.QueryParamsResponseAmino;
                    fromAminoMsg(object: _62.QueryParamsResponseAminoMsg): _62.QueryParamsResponse;
                    toAminoMsg(message: _62.QueryParamsResponse): _62.QueryParamsResponseAminoMsg;
                    fromProtoMsg(message: _62.QueryParamsResponseProtoMsg): _62.QueryParamsResponse;
                    toProto(message: _62.QueryParamsResponse): Uint8Array;
                    toProtoMsg(message: _62.QueryParamsResponse): _62.QueryParamsResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _61.GenesisState;
                    isSDK(o: any): o is _61.GenesisStateSDKType;
                    isAmino(o: any): o is _61.GenesisStateAmino;
                    encode(message: _61.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.GenesisState;
                    fromJSON(object: any): _61.GenesisState;
                    toJSON(message: _61.GenesisState): unknown;
                    fromPartial(object: Partial<_61.GenesisState>): _61.GenesisState;
                    fromAmino(object: _61.GenesisStateAmino): _61.GenesisState;
                    toAmino(message: _61.GenesisState): _61.GenesisStateAmino;
                    fromAminoMsg(object: _61.GenesisStateAminoMsg): _61.GenesisState;
                    toAminoMsg(message: _61.GenesisState): _61.GenesisStateAminoMsg;
                    fromProtoMsg(message: _61.GenesisStateProtoMsg): _61.GenesisState;
                    toProto(message: _61.GenesisState): Uint8Array;
                    toProtoMsg(message: _61.GenesisState): _61.GenesisStateProtoMsg;
                };
            };
            const v2: {
                FungibleTokenPacketData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _65.FungibleTokenPacketData;
                    isSDK(o: any): o is _65.FungibleTokenPacketDataSDKType;
                    isAmino(o: any): o is _65.FungibleTokenPacketDataAmino;
                    encode(message: _65.FungibleTokenPacketData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.FungibleTokenPacketData;
                    fromJSON(object: any): _65.FungibleTokenPacketData;
                    toJSON(message: _65.FungibleTokenPacketData): unknown;
                    fromPartial(object: Partial<_65.FungibleTokenPacketData>): _65.FungibleTokenPacketData;
                    fromAmino(object: _65.FungibleTokenPacketDataAmino): _65.FungibleTokenPacketData;
                    toAmino(message: _65.FungibleTokenPacketData): _65.FungibleTokenPacketDataAmino;
                    fromAminoMsg(object: _65.FungibleTokenPacketDataAminoMsg): _65.FungibleTokenPacketData;
                    toAminoMsg(message: _65.FungibleTokenPacketData): _65.FungibleTokenPacketDataAminoMsg;
                    fromProtoMsg(message: _65.FungibleTokenPacketDataProtoMsg): _65.FungibleTokenPacketData;
                    toProto(message: _65.FungibleTokenPacketData): Uint8Array;
                    toProtoMsg(message: _65.FungibleTokenPacketData): _65.FungibleTokenPacketDataProtoMsg;
                };
            };
        }
    }
    namespace core {
        namespace channel {
            const v1: {
                MsgClientImpl: typeof _161.MsgClientImpl;
                QueryClientImpl: typeof _157.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    channel(request: _68.QueryChannelRequest): Promise<_68.QueryChannelResponse>;
                    channels(request?: _68.QueryChannelsRequest): Promise<_68.QueryChannelsResponse>;
                    connectionChannels(request: _68.QueryConnectionChannelsRequest): Promise<_68.QueryConnectionChannelsResponse>;
                    channelClientState(request: _68.QueryChannelClientStateRequest): Promise<_68.QueryChannelClientStateResponse>;
                    channelConsensusState(request: _68.QueryChannelConsensusStateRequest): Promise<_68.QueryChannelConsensusStateResponse>;
                    packetCommitment(request: _68.QueryPacketCommitmentRequest): Promise<_68.QueryPacketCommitmentResponse>;
                    packetCommitments(request: _68.QueryPacketCommitmentsRequest): Promise<_68.QueryPacketCommitmentsResponse>;
                    packetReceipt(request: _68.QueryPacketReceiptRequest): Promise<_68.QueryPacketReceiptResponse>;
                    packetAcknowledgement(request: _68.QueryPacketAcknowledgementRequest): Promise<_68.QueryPacketAcknowledgementResponse>;
                    packetAcknowledgements(request: _68.QueryPacketAcknowledgementsRequest): Promise<_68.QueryPacketAcknowledgementsResponse>;
                    unreceivedPackets(request: _68.QueryUnreceivedPacketsRequest): Promise<_68.QueryUnreceivedPacketsResponse>;
                    unreceivedAcks(request: _68.QueryUnreceivedAcksRequest): Promise<_68.QueryUnreceivedAcksResponse>;
                    nextSequenceReceive(request: _68.QueryNextSequenceReceiveRequest): Promise<_68.QueryNextSequenceReceiveResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        channelOpenInit(value: _69.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenTry(value: _69.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenAck(value: _69.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenConfirm(value: _69.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseInit(value: _69.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseConfirm(value: _69.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recvPacket(value: _69.MsgRecvPacket): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeout(value: _69.MsgTimeout): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeoutOnClose(value: _69.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        acknowledgement(value: _69.MsgAcknowledgement): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        channelOpenInit(value: _69.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _69.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _69.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _69.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _69.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _69.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _69.MsgRecvPacket): {
                            typeUrl: string;
                            value: _69.MsgRecvPacket;
                        };
                        timeout(value: _69.MsgTimeout): {
                            typeUrl: string;
                            value: _69.MsgTimeout;
                        };
                        timeoutOnClose(value: _69.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _69.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _69.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _69.MsgAcknowledgement;
                        };
                    };
                    toJSON: {
                        channelOpenInit(value: _69.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenTry(value: _69.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenAck(value: _69.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenConfirm(value: _69.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseInit(value: _69.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseConfirm(value: _69.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        recvPacket(value: _69.MsgRecvPacket): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeout(value: _69.MsgTimeout): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeoutOnClose(value: _69.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: unknown;
                        };
                        acknowledgement(value: _69.MsgAcknowledgement): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        channelOpenInit(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: any): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: any): {
                            typeUrl: string;
                            value: _69.MsgRecvPacket;
                        };
                        timeout(value: any): {
                            typeUrl: string;
                            value: _69.MsgTimeout;
                        };
                        timeoutOnClose(value: any): {
                            typeUrl: string;
                            value: _69.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: any): {
                            typeUrl: string;
                            value: _69.MsgAcknowledgement;
                        };
                    };
                    fromPartial: {
                        channelOpenInit(value: _69.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _69.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _69.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _69.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _69.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _69.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _69.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _69.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _69.MsgRecvPacket): {
                            typeUrl: string;
                            value: _69.MsgRecvPacket;
                        };
                        timeout(value: _69.MsgTimeout): {
                            typeUrl: string;
                            value: _69.MsgTimeout;
                        };
                        timeoutOnClose(value: _69.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _69.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _69.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _69.MsgAcknowledgement;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.channel.v1.MsgChannelOpenInit": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelOpenInit) => _69.MsgChannelOpenInitAmino;
                        fromAmino: (object: _69.MsgChannelOpenInitAmino) => _69.MsgChannelOpenInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenTry": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelOpenTry) => _69.MsgChannelOpenTryAmino;
                        fromAmino: (object: _69.MsgChannelOpenTryAmino) => _69.MsgChannelOpenTry;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenAck": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelOpenAck) => _69.MsgChannelOpenAckAmino;
                        fromAmino: (object: _69.MsgChannelOpenAckAmino) => _69.MsgChannelOpenAck;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelOpenConfirm) => _69.MsgChannelOpenConfirmAmino;
                        fromAmino: (object: _69.MsgChannelOpenConfirmAmino) => _69.MsgChannelOpenConfirm;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseInit": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelCloseInit) => _69.MsgChannelCloseInitAmino;
                        fromAmino: (object: _69.MsgChannelCloseInitAmino) => _69.MsgChannelCloseInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseConfirm": {
                        aminoType: string;
                        toAmino: (message: _69.MsgChannelCloseConfirm) => _69.MsgChannelCloseConfirmAmino;
                        fromAmino: (object: _69.MsgChannelCloseConfirmAmino) => _69.MsgChannelCloseConfirm;
                    };
                    "/ibc.core.channel.v1.MsgRecvPacket": {
                        aminoType: string;
                        toAmino: (message: _69.MsgRecvPacket) => _69.MsgRecvPacketAmino;
                        fromAmino: (object: _69.MsgRecvPacketAmino) => _69.MsgRecvPacket;
                    };
                    "/ibc.core.channel.v1.MsgTimeout": {
                        aminoType: string;
                        toAmino: (message: _69.MsgTimeout) => _69.MsgTimeoutAmino;
                        fromAmino: (object: _69.MsgTimeoutAmino) => _69.MsgTimeout;
                    };
                    "/ibc.core.channel.v1.MsgTimeoutOnClose": {
                        aminoType: string;
                        toAmino: (message: _69.MsgTimeoutOnClose) => _69.MsgTimeoutOnCloseAmino;
                        fromAmino: (object: _69.MsgTimeoutOnCloseAmino) => _69.MsgTimeoutOnClose;
                    };
                    "/ibc.core.channel.v1.MsgAcknowledgement": {
                        aminoType: string;
                        toAmino: (message: _69.MsgAcknowledgement) => _69.MsgAcknowledgementAmino;
                        fromAmino: (object: _69.MsgAcknowledgementAmino) => _69.MsgAcknowledgement;
                    };
                };
                MsgChannelOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenInit;
                    isSDK(o: any): o is _69.MsgChannelOpenInitSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenInitAmino;
                    encode(message: _69.MsgChannelOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenInit;
                    fromJSON(object: any): _69.MsgChannelOpenInit;
                    toJSON(message: _69.MsgChannelOpenInit): unknown;
                    fromPartial(object: Partial<_69.MsgChannelOpenInit>): _69.MsgChannelOpenInit;
                    fromAmino(object: _69.MsgChannelOpenInitAmino): _69.MsgChannelOpenInit;
                    toAmino(message: _69.MsgChannelOpenInit): _69.MsgChannelOpenInitAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenInitAminoMsg): _69.MsgChannelOpenInit;
                    toAminoMsg(message: _69.MsgChannelOpenInit): _69.MsgChannelOpenInitAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenInitProtoMsg): _69.MsgChannelOpenInit;
                    toProto(message: _69.MsgChannelOpenInit): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenInit): _69.MsgChannelOpenInitProtoMsg;
                };
                MsgChannelOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenInitResponse;
                    isSDK(o: any): o is _69.MsgChannelOpenInitResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenInitResponseAmino;
                    encode(_: _69.MsgChannelOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenInitResponse;
                    fromJSON(_: any): _69.MsgChannelOpenInitResponse;
                    toJSON(_: _69.MsgChannelOpenInitResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelOpenInitResponse>): _69.MsgChannelOpenInitResponse;
                    fromAmino(_: _69.MsgChannelOpenInitResponseAmino): _69.MsgChannelOpenInitResponse;
                    toAmino(_: _69.MsgChannelOpenInitResponse): _69.MsgChannelOpenInitResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenInitResponseAminoMsg): _69.MsgChannelOpenInitResponse;
                    toAminoMsg(message: _69.MsgChannelOpenInitResponse): _69.MsgChannelOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenInitResponseProtoMsg): _69.MsgChannelOpenInitResponse;
                    toProto(message: _69.MsgChannelOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenInitResponse): _69.MsgChannelOpenInitResponseProtoMsg;
                };
                MsgChannelOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenTry;
                    isSDK(o: any): o is _69.MsgChannelOpenTrySDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenTryAmino;
                    encode(message: _69.MsgChannelOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenTry;
                    fromJSON(object: any): _69.MsgChannelOpenTry;
                    toJSON(message: _69.MsgChannelOpenTry): unknown;
                    fromPartial(object: Partial<_69.MsgChannelOpenTry>): _69.MsgChannelOpenTry;
                    fromAmino(object: _69.MsgChannelOpenTryAmino): _69.MsgChannelOpenTry;
                    toAmino(message: _69.MsgChannelOpenTry): _69.MsgChannelOpenTryAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenTryAminoMsg): _69.MsgChannelOpenTry;
                    toAminoMsg(message: _69.MsgChannelOpenTry): _69.MsgChannelOpenTryAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenTryProtoMsg): _69.MsgChannelOpenTry;
                    toProto(message: _69.MsgChannelOpenTry): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenTry): _69.MsgChannelOpenTryProtoMsg;
                };
                MsgChannelOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenTryResponse;
                    isSDK(o: any): o is _69.MsgChannelOpenTryResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenTryResponseAmino;
                    encode(_: _69.MsgChannelOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenTryResponse;
                    fromJSON(_: any): _69.MsgChannelOpenTryResponse;
                    toJSON(_: _69.MsgChannelOpenTryResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelOpenTryResponse>): _69.MsgChannelOpenTryResponse;
                    fromAmino(_: _69.MsgChannelOpenTryResponseAmino): _69.MsgChannelOpenTryResponse;
                    toAmino(_: _69.MsgChannelOpenTryResponse): _69.MsgChannelOpenTryResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenTryResponseAminoMsg): _69.MsgChannelOpenTryResponse;
                    toAminoMsg(message: _69.MsgChannelOpenTryResponse): _69.MsgChannelOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenTryResponseProtoMsg): _69.MsgChannelOpenTryResponse;
                    toProto(message: _69.MsgChannelOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenTryResponse): _69.MsgChannelOpenTryResponseProtoMsg;
                };
                MsgChannelOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenAck;
                    isSDK(o: any): o is _69.MsgChannelOpenAckSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenAckAmino;
                    encode(message: _69.MsgChannelOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenAck;
                    fromJSON(object: any): _69.MsgChannelOpenAck;
                    toJSON(message: _69.MsgChannelOpenAck): unknown;
                    fromPartial(object: Partial<_69.MsgChannelOpenAck>): _69.MsgChannelOpenAck;
                    fromAmino(object: _69.MsgChannelOpenAckAmino): _69.MsgChannelOpenAck;
                    toAmino(message: _69.MsgChannelOpenAck): _69.MsgChannelOpenAckAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenAckAminoMsg): _69.MsgChannelOpenAck;
                    toAminoMsg(message: _69.MsgChannelOpenAck): _69.MsgChannelOpenAckAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenAckProtoMsg): _69.MsgChannelOpenAck;
                    toProto(message: _69.MsgChannelOpenAck): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenAck): _69.MsgChannelOpenAckProtoMsg;
                };
                MsgChannelOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenAckResponse;
                    isSDK(o: any): o is _69.MsgChannelOpenAckResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenAckResponseAmino;
                    encode(_: _69.MsgChannelOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenAckResponse;
                    fromJSON(_: any): _69.MsgChannelOpenAckResponse;
                    toJSON(_: _69.MsgChannelOpenAckResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelOpenAckResponse>): _69.MsgChannelOpenAckResponse;
                    fromAmino(_: _69.MsgChannelOpenAckResponseAmino): _69.MsgChannelOpenAckResponse;
                    toAmino(_: _69.MsgChannelOpenAckResponse): _69.MsgChannelOpenAckResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenAckResponseAminoMsg): _69.MsgChannelOpenAckResponse;
                    toAminoMsg(message: _69.MsgChannelOpenAckResponse): _69.MsgChannelOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenAckResponseProtoMsg): _69.MsgChannelOpenAckResponse;
                    toProto(message: _69.MsgChannelOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenAckResponse): _69.MsgChannelOpenAckResponseProtoMsg;
                };
                MsgChannelOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenConfirm;
                    isSDK(o: any): o is _69.MsgChannelOpenConfirmSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenConfirmAmino;
                    encode(message: _69.MsgChannelOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenConfirm;
                    fromJSON(object: any): _69.MsgChannelOpenConfirm;
                    toJSON(message: _69.MsgChannelOpenConfirm): unknown;
                    fromPartial(object: Partial<_69.MsgChannelOpenConfirm>): _69.MsgChannelOpenConfirm;
                    fromAmino(object: _69.MsgChannelOpenConfirmAmino): _69.MsgChannelOpenConfirm;
                    toAmino(message: _69.MsgChannelOpenConfirm): _69.MsgChannelOpenConfirmAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenConfirmAminoMsg): _69.MsgChannelOpenConfirm;
                    toAminoMsg(message: _69.MsgChannelOpenConfirm): _69.MsgChannelOpenConfirmAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenConfirmProtoMsg): _69.MsgChannelOpenConfirm;
                    toProto(message: _69.MsgChannelOpenConfirm): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenConfirm): _69.MsgChannelOpenConfirmProtoMsg;
                };
                MsgChannelOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelOpenConfirmResponse;
                    isSDK(o: any): o is _69.MsgChannelOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelOpenConfirmResponseAmino;
                    encode(_: _69.MsgChannelOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelOpenConfirmResponse;
                    fromJSON(_: any): _69.MsgChannelOpenConfirmResponse;
                    toJSON(_: _69.MsgChannelOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelOpenConfirmResponse>): _69.MsgChannelOpenConfirmResponse;
                    fromAmino(_: _69.MsgChannelOpenConfirmResponseAmino): _69.MsgChannelOpenConfirmResponse;
                    toAmino(_: _69.MsgChannelOpenConfirmResponse): _69.MsgChannelOpenConfirmResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelOpenConfirmResponseAminoMsg): _69.MsgChannelOpenConfirmResponse;
                    toAminoMsg(message: _69.MsgChannelOpenConfirmResponse): _69.MsgChannelOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelOpenConfirmResponseProtoMsg): _69.MsgChannelOpenConfirmResponse;
                    toProto(message: _69.MsgChannelOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelOpenConfirmResponse): _69.MsgChannelOpenConfirmResponseProtoMsg;
                };
                MsgChannelCloseInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelCloseInit;
                    isSDK(o: any): o is _69.MsgChannelCloseInitSDKType;
                    isAmino(o: any): o is _69.MsgChannelCloseInitAmino;
                    encode(message: _69.MsgChannelCloseInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelCloseInit;
                    fromJSON(object: any): _69.MsgChannelCloseInit;
                    toJSON(message: _69.MsgChannelCloseInit): unknown;
                    fromPartial(object: Partial<_69.MsgChannelCloseInit>): _69.MsgChannelCloseInit;
                    fromAmino(object: _69.MsgChannelCloseInitAmino): _69.MsgChannelCloseInit;
                    toAmino(message: _69.MsgChannelCloseInit): _69.MsgChannelCloseInitAmino;
                    fromAminoMsg(object: _69.MsgChannelCloseInitAminoMsg): _69.MsgChannelCloseInit;
                    toAminoMsg(message: _69.MsgChannelCloseInit): _69.MsgChannelCloseInitAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelCloseInitProtoMsg): _69.MsgChannelCloseInit;
                    toProto(message: _69.MsgChannelCloseInit): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelCloseInit): _69.MsgChannelCloseInitProtoMsg;
                };
                MsgChannelCloseInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelCloseInitResponse;
                    isSDK(o: any): o is _69.MsgChannelCloseInitResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelCloseInitResponseAmino;
                    encode(_: _69.MsgChannelCloseInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelCloseInitResponse;
                    fromJSON(_: any): _69.MsgChannelCloseInitResponse;
                    toJSON(_: _69.MsgChannelCloseInitResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelCloseInitResponse>): _69.MsgChannelCloseInitResponse;
                    fromAmino(_: _69.MsgChannelCloseInitResponseAmino): _69.MsgChannelCloseInitResponse;
                    toAmino(_: _69.MsgChannelCloseInitResponse): _69.MsgChannelCloseInitResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelCloseInitResponseAminoMsg): _69.MsgChannelCloseInitResponse;
                    toAminoMsg(message: _69.MsgChannelCloseInitResponse): _69.MsgChannelCloseInitResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelCloseInitResponseProtoMsg): _69.MsgChannelCloseInitResponse;
                    toProto(message: _69.MsgChannelCloseInitResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelCloseInitResponse): _69.MsgChannelCloseInitResponseProtoMsg;
                };
                MsgChannelCloseConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelCloseConfirm;
                    isSDK(o: any): o is _69.MsgChannelCloseConfirmSDKType;
                    isAmino(o: any): o is _69.MsgChannelCloseConfirmAmino;
                    encode(message: _69.MsgChannelCloseConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelCloseConfirm;
                    fromJSON(object: any): _69.MsgChannelCloseConfirm;
                    toJSON(message: _69.MsgChannelCloseConfirm): unknown;
                    fromPartial(object: Partial<_69.MsgChannelCloseConfirm>): _69.MsgChannelCloseConfirm;
                    fromAmino(object: _69.MsgChannelCloseConfirmAmino): _69.MsgChannelCloseConfirm;
                    toAmino(message: _69.MsgChannelCloseConfirm): _69.MsgChannelCloseConfirmAmino;
                    fromAminoMsg(object: _69.MsgChannelCloseConfirmAminoMsg): _69.MsgChannelCloseConfirm;
                    toAminoMsg(message: _69.MsgChannelCloseConfirm): _69.MsgChannelCloseConfirmAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelCloseConfirmProtoMsg): _69.MsgChannelCloseConfirm;
                    toProto(message: _69.MsgChannelCloseConfirm): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelCloseConfirm): _69.MsgChannelCloseConfirmProtoMsg;
                };
                MsgChannelCloseConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgChannelCloseConfirmResponse;
                    isSDK(o: any): o is _69.MsgChannelCloseConfirmResponseSDKType;
                    isAmino(o: any): o is _69.MsgChannelCloseConfirmResponseAmino;
                    encode(_: _69.MsgChannelCloseConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgChannelCloseConfirmResponse;
                    fromJSON(_: any): _69.MsgChannelCloseConfirmResponse;
                    toJSON(_: _69.MsgChannelCloseConfirmResponse): unknown;
                    fromPartial(_: Partial<_69.MsgChannelCloseConfirmResponse>): _69.MsgChannelCloseConfirmResponse;
                    fromAmino(_: _69.MsgChannelCloseConfirmResponseAmino): _69.MsgChannelCloseConfirmResponse;
                    toAmino(_: _69.MsgChannelCloseConfirmResponse): _69.MsgChannelCloseConfirmResponseAmino;
                    fromAminoMsg(object: _69.MsgChannelCloseConfirmResponseAminoMsg): _69.MsgChannelCloseConfirmResponse;
                    toAminoMsg(message: _69.MsgChannelCloseConfirmResponse): _69.MsgChannelCloseConfirmResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgChannelCloseConfirmResponseProtoMsg): _69.MsgChannelCloseConfirmResponse;
                    toProto(message: _69.MsgChannelCloseConfirmResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgChannelCloseConfirmResponse): _69.MsgChannelCloseConfirmResponseProtoMsg;
                };
                MsgRecvPacket: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgRecvPacket;
                    isSDK(o: any): o is _69.MsgRecvPacketSDKType;
                    isAmino(o: any): o is _69.MsgRecvPacketAmino;
                    encode(message: _69.MsgRecvPacket, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgRecvPacket;
                    fromJSON(object: any): _69.MsgRecvPacket;
                    toJSON(message: _69.MsgRecvPacket): unknown;
                    fromPartial(object: Partial<_69.MsgRecvPacket>): _69.MsgRecvPacket;
                    fromAmino(object: _69.MsgRecvPacketAmino): _69.MsgRecvPacket;
                    toAmino(message: _69.MsgRecvPacket): _69.MsgRecvPacketAmino;
                    fromAminoMsg(object: _69.MsgRecvPacketAminoMsg): _69.MsgRecvPacket;
                    toAminoMsg(message: _69.MsgRecvPacket): _69.MsgRecvPacketAminoMsg;
                    fromProtoMsg(message: _69.MsgRecvPacketProtoMsg): _69.MsgRecvPacket;
                    toProto(message: _69.MsgRecvPacket): Uint8Array;
                    toProtoMsg(message: _69.MsgRecvPacket): _69.MsgRecvPacketProtoMsg;
                };
                MsgRecvPacketResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgRecvPacketResponse;
                    isSDK(o: any): o is _69.MsgRecvPacketResponseSDKType;
                    isAmino(o: any): o is _69.MsgRecvPacketResponseAmino;
                    encode(_: _69.MsgRecvPacketResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgRecvPacketResponse;
                    fromJSON(_: any): _69.MsgRecvPacketResponse;
                    toJSON(_: _69.MsgRecvPacketResponse): unknown;
                    fromPartial(_: Partial<_69.MsgRecvPacketResponse>): _69.MsgRecvPacketResponse;
                    fromAmino(_: _69.MsgRecvPacketResponseAmino): _69.MsgRecvPacketResponse;
                    toAmino(_: _69.MsgRecvPacketResponse): _69.MsgRecvPacketResponseAmino;
                    fromAminoMsg(object: _69.MsgRecvPacketResponseAminoMsg): _69.MsgRecvPacketResponse;
                    toAminoMsg(message: _69.MsgRecvPacketResponse): _69.MsgRecvPacketResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgRecvPacketResponseProtoMsg): _69.MsgRecvPacketResponse;
                    toProto(message: _69.MsgRecvPacketResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgRecvPacketResponse): _69.MsgRecvPacketResponseProtoMsg;
                };
                MsgTimeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgTimeout;
                    isSDK(o: any): o is _69.MsgTimeoutSDKType;
                    isAmino(o: any): o is _69.MsgTimeoutAmino;
                    encode(message: _69.MsgTimeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgTimeout;
                    fromJSON(object: any): _69.MsgTimeout;
                    toJSON(message: _69.MsgTimeout): unknown;
                    fromPartial(object: Partial<_69.MsgTimeout>): _69.MsgTimeout;
                    fromAmino(object: _69.MsgTimeoutAmino): _69.MsgTimeout;
                    toAmino(message: _69.MsgTimeout): _69.MsgTimeoutAmino;
                    fromAminoMsg(object: _69.MsgTimeoutAminoMsg): _69.MsgTimeout;
                    toAminoMsg(message: _69.MsgTimeout): _69.MsgTimeoutAminoMsg;
                    fromProtoMsg(message: _69.MsgTimeoutProtoMsg): _69.MsgTimeout;
                    toProto(message: _69.MsgTimeout): Uint8Array;
                    toProtoMsg(message: _69.MsgTimeout): _69.MsgTimeoutProtoMsg;
                };
                MsgTimeoutResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgTimeoutResponse;
                    isSDK(o: any): o is _69.MsgTimeoutResponseSDKType;
                    isAmino(o: any): o is _69.MsgTimeoutResponseAmino;
                    encode(_: _69.MsgTimeoutResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgTimeoutResponse;
                    fromJSON(_: any): _69.MsgTimeoutResponse;
                    toJSON(_: _69.MsgTimeoutResponse): unknown;
                    fromPartial(_: Partial<_69.MsgTimeoutResponse>): _69.MsgTimeoutResponse;
                    fromAmino(_: _69.MsgTimeoutResponseAmino): _69.MsgTimeoutResponse;
                    toAmino(_: _69.MsgTimeoutResponse): _69.MsgTimeoutResponseAmino;
                    fromAminoMsg(object: _69.MsgTimeoutResponseAminoMsg): _69.MsgTimeoutResponse;
                    toAminoMsg(message: _69.MsgTimeoutResponse): _69.MsgTimeoutResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgTimeoutResponseProtoMsg): _69.MsgTimeoutResponse;
                    toProto(message: _69.MsgTimeoutResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgTimeoutResponse): _69.MsgTimeoutResponseProtoMsg;
                };
                MsgTimeoutOnClose: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgTimeoutOnClose;
                    isSDK(o: any): o is _69.MsgTimeoutOnCloseSDKType;
                    isAmino(o: any): o is _69.MsgTimeoutOnCloseAmino;
                    encode(message: _69.MsgTimeoutOnClose, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgTimeoutOnClose;
                    fromJSON(object: any): _69.MsgTimeoutOnClose;
                    toJSON(message: _69.MsgTimeoutOnClose): unknown;
                    fromPartial(object: Partial<_69.MsgTimeoutOnClose>): _69.MsgTimeoutOnClose;
                    fromAmino(object: _69.MsgTimeoutOnCloseAmino): _69.MsgTimeoutOnClose;
                    toAmino(message: _69.MsgTimeoutOnClose): _69.MsgTimeoutOnCloseAmino;
                    fromAminoMsg(object: _69.MsgTimeoutOnCloseAminoMsg): _69.MsgTimeoutOnClose;
                    toAminoMsg(message: _69.MsgTimeoutOnClose): _69.MsgTimeoutOnCloseAminoMsg;
                    fromProtoMsg(message: _69.MsgTimeoutOnCloseProtoMsg): _69.MsgTimeoutOnClose;
                    toProto(message: _69.MsgTimeoutOnClose): Uint8Array;
                    toProtoMsg(message: _69.MsgTimeoutOnClose): _69.MsgTimeoutOnCloseProtoMsg;
                };
                MsgTimeoutOnCloseResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgTimeoutOnCloseResponse;
                    isSDK(o: any): o is _69.MsgTimeoutOnCloseResponseSDKType;
                    isAmino(o: any): o is _69.MsgTimeoutOnCloseResponseAmino;
                    encode(_: _69.MsgTimeoutOnCloseResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgTimeoutOnCloseResponse;
                    fromJSON(_: any): _69.MsgTimeoutOnCloseResponse;
                    toJSON(_: _69.MsgTimeoutOnCloseResponse): unknown;
                    fromPartial(_: Partial<_69.MsgTimeoutOnCloseResponse>): _69.MsgTimeoutOnCloseResponse;
                    fromAmino(_: _69.MsgTimeoutOnCloseResponseAmino): _69.MsgTimeoutOnCloseResponse;
                    toAmino(_: _69.MsgTimeoutOnCloseResponse): _69.MsgTimeoutOnCloseResponseAmino;
                    fromAminoMsg(object: _69.MsgTimeoutOnCloseResponseAminoMsg): _69.MsgTimeoutOnCloseResponse;
                    toAminoMsg(message: _69.MsgTimeoutOnCloseResponse): _69.MsgTimeoutOnCloseResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgTimeoutOnCloseResponseProtoMsg): _69.MsgTimeoutOnCloseResponse;
                    toProto(message: _69.MsgTimeoutOnCloseResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgTimeoutOnCloseResponse): _69.MsgTimeoutOnCloseResponseProtoMsg;
                };
                MsgAcknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgAcknowledgement;
                    isSDK(o: any): o is _69.MsgAcknowledgementSDKType;
                    isAmino(o: any): o is _69.MsgAcknowledgementAmino;
                    encode(message: _69.MsgAcknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgAcknowledgement;
                    fromJSON(object: any): _69.MsgAcknowledgement;
                    toJSON(message: _69.MsgAcknowledgement): unknown;
                    fromPartial(object: Partial<_69.MsgAcknowledgement>): _69.MsgAcknowledgement;
                    fromAmino(object: _69.MsgAcknowledgementAmino): _69.MsgAcknowledgement;
                    toAmino(message: _69.MsgAcknowledgement): _69.MsgAcknowledgementAmino;
                    fromAminoMsg(object: _69.MsgAcknowledgementAminoMsg): _69.MsgAcknowledgement;
                    toAminoMsg(message: _69.MsgAcknowledgement): _69.MsgAcknowledgementAminoMsg;
                    fromProtoMsg(message: _69.MsgAcknowledgementProtoMsg): _69.MsgAcknowledgement;
                    toProto(message: _69.MsgAcknowledgement): Uint8Array;
                    toProtoMsg(message: _69.MsgAcknowledgement): _69.MsgAcknowledgementProtoMsg;
                };
                MsgAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _69.MsgAcknowledgementResponse;
                    isSDK(o: any): o is _69.MsgAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _69.MsgAcknowledgementResponseAmino;
                    encode(_: _69.MsgAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgAcknowledgementResponse;
                    fromJSON(_: any): _69.MsgAcknowledgementResponse;
                    toJSON(_: _69.MsgAcknowledgementResponse): unknown;
                    fromPartial(_: Partial<_69.MsgAcknowledgementResponse>): _69.MsgAcknowledgementResponse;
                    fromAmino(_: _69.MsgAcknowledgementResponseAmino): _69.MsgAcknowledgementResponse;
                    toAmino(_: _69.MsgAcknowledgementResponse): _69.MsgAcknowledgementResponseAmino;
                    fromAminoMsg(object: _69.MsgAcknowledgementResponseAminoMsg): _69.MsgAcknowledgementResponse;
                    toAminoMsg(message: _69.MsgAcknowledgementResponse): _69.MsgAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _69.MsgAcknowledgementResponseProtoMsg): _69.MsgAcknowledgementResponse;
                    toProto(message: _69.MsgAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _69.MsgAcknowledgementResponse): _69.MsgAcknowledgementResponseProtoMsg;
                };
                QueryChannelRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelRequest;
                    isSDK(o: any): o is _68.QueryChannelRequestSDKType;
                    isAmino(o: any): o is _68.QueryChannelRequestAmino;
                    encode(message: _68.QueryChannelRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelRequest;
                    fromJSON(object: any): _68.QueryChannelRequest;
                    toJSON(message: _68.QueryChannelRequest): unknown;
                    fromPartial(object: Partial<_68.QueryChannelRequest>): _68.QueryChannelRequest;
                    fromAmino(object: _68.QueryChannelRequestAmino): _68.QueryChannelRequest;
                    toAmino(message: _68.QueryChannelRequest): _68.QueryChannelRequestAmino;
                    fromAminoMsg(object: _68.QueryChannelRequestAminoMsg): _68.QueryChannelRequest;
                    toAminoMsg(message: _68.QueryChannelRequest): _68.QueryChannelRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelRequestProtoMsg): _68.QueryChannelRequest;
                    toProto(message: _68.QueryChannelRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelRequest): _68.QueryChannelRequestProtoMsg;
                };
                QueryChannelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelResponse;
                    isSDK(o: any): o is _68.QueryChannelResponseSDKType;
                    isAmino(o: any): o is _68.QueryChannelResponseAmino;
                    encode(message: _68.QueryChannelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelResponse;
                    fromJSON(object: any): _68.QueryChannelResponse;
                    toJSON(message: _68.QueryChannelResponse): unknown;
                    fromPartial(object: Partial<_68.QueryChannelResponse>): _68.QueryChannelResponse;
                    fromAmino(object: _68.QueryChannelResponseAmino): _68.QueryChannelResponse;
                    toAmino(message: _68.QueryChannelResponse): _68.QueryChannelResponseAmino;
                    fromAminoMsg(object: _68.QueryChannelResponseAminoMsg): _68.QueryChannelResponse;
                    toAminoMsg(message: _68.QueryChannelResponse): _68.QueryChannelResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelResponseProtoMsg): _68.QueryChannelResponse;
                    toProto(message: _68.QueryChannelResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelResponse): _68.QueryChannelResponseProtoMsg;
                };
                QueryChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelsRequest;
                    isSDK(o: any): o is _68.QueryChannelsRequestSDKType;
                    isAmino(o: any): o is _68.QueryChannelsRequestAmino;
                    encode(message: _68.QueryChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelsRequest;
                    fromJSON(object: any): _68.QueryChannelsRequest;
                    toJSON(message: _68.QueryChannelsRequest): unknown;
                    fromPartial(object: Partial<_68.QueryChannelsRequest>): _68.QueryChannelsRequest;
                    fromAmino(object: _68.QueryChannelsRequestAmino): _68.QueryChannelsRequest;
                    toAmino(message: _68.QueryChannelsRequest): _68.QueryChannelsRequestAmino;
                    fromAminoMsg(object: _68.QueryChannelsRequestAminoMsg): _68.QueryChannelsRequest;
                    toAminoMsg(message: _68.QueryChannelsRequest): _68.QueryChannelsRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelsRequestProtoMsg): _68.QueryChannelsRequest;
                    toProto(message: _68.QueryChannelsRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelsRequest): _68.QueryChannelsRequestProtoMsg;
                };
                QueryChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelsResponse;
                    isSDK(o: any): o is _68.QueryChannelsResponseSDKType;
                    isAmino(o: any): o is _68.QueryChannelsResponseAmino;
                    encode(message: _68.QueryChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelsResponse;
                    fromJSON(object: any): _68.QueryChannelsResponse;
                    toJSON(message: _68.QueryChannelsResponse): unknown;
                    fromPartial(object: Partial<_68.QueryChannelsResponse>): _68.QueryChannelsResponse;
                    fromAmino(object: _68.QueryChannelsResponseAmino): _68.QueryChannelsResponse;
                    toAmino(message: _68.QueryChannelsResponse): _68.QueryChannelsResponseAmino;
                    fromAminoMsg(object: _68.QueryChannelsResponseAminoMsg): _68.QueryChannelsResponse;
                    toAminoMsg(message: _68.QueryChannelsResponse): _68.QueryChannelsResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelsResponseProtoMsg): _68.QueryChannelsResponse;
                    toProto(message: _68.QueryChannelsResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelsResponse): _68.QueryChannelsResponseProtoMsg;
                };
                QueryConnectionChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryConnectionChannelsRequest;
                    isSDK(o: any): o is _68.QueryConnectionChannelsRequestSDKType;
                    isAmino(o: any): o is _68.QueryConnectionChannelsRequestAmino;
                    encode(message: _68.QueryConnectionChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryConnectionChannelsRequest;
                    fromJSON(object: any): _68.QueryConnectionChannelsRequest;
                    toJSON(message: _68.QueryConnectionChannelsRequest): unknown;
                    fromPartial(object: Partial<_68.QueryConnectionChannelsRequest>): _68.QueryConnectionChannelsRequest;
                    fromAmino(object: _68.QueryConnectionChannelsRequestAmino): _68.QueryConnectionChannelsRequest;
                    toAmino(message: _68.QueryConnectionChannelsRequest): _68.QueryConnectionChannelsRequestAmino;
                    fromAminoMsg(object: _68.QueryConnectionChannelsRequestAminoMsg): _68.QueryConnectionChannelsRequest;
                    toAminoMsg(message: _68.QueryConnectionChannelsRequest): _68.QueryConnectionChannelsRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryConnectionChannelsRequestProtoMsg): _68.QueryConnectionChannelsRequest;
                    toProto(message: _68.QueryConnectionChannelsRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryConnectionChannelsRequest): _68.QueryConnectionChannelsRequestProtoMsg;
                };
                QueryConnectionChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryConnectionChannelsResponse;
                    isSDK(o: any): o is _68.QueryConnectionChannelsResponseSDKType;
                    isAmino(o: any): o is _68.QueryConnectionChannelsResponseAmino;
                    encode(message: _68.QueryConnectionChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryConnectionChannelsResponse;
                    fromJSON(object: any): _68.QueryConnectionChannelsResponse;
                    toJSON(message: _68.QueryConnectionChannelsResponse): unknown;
                    fromPartial(object: Partial<_68.QueryConnectionChannelsResponse>): _68.QueryConnectionChannelsResponse;
                    fromAmino(object: _68.QueryConnectionChannelsResponseAmino): _68.QueryConnectionChannelsResponse;
                    toAmino(message: _68.QueryConnectionChannelsResponse): _68.QueryConnectionChannelsResponseAmino;
                    fromAminoMsg(object: _68.QueryConnectionChannelsResponseAminoMsg): _68.QueryConnectionChannelsResponse;
                    toAminoMsg(message: _68.QueryConnectionChannelsResponse): _68.QueryConnectionChannelsResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryConnectionChannelsResponseProtoMsg): _68.QueryConnectionChannelsResponse;
                    toProto(message: _68.QueryConnectionChannelsResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryConnectionChannelsResponse): _68.QueryConnectionChannelsResponseProtoMsg;
                };
                QueryChannelClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelClientStateRequest;
                    isSDK(o: any): o is _68.QueryChannelClientStateRequestSDKType;
                    isAmino(o: any): o is _68.QueryChannelClientStateRequestAmino;
                    encode(message: _68.QueryChannelClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelClientStateRequest;
                    fromJSON(object: any): _68.QueryChannelClientStateRequest;
                    toJSON(message: _68.QueryChannelClientStateRequest): unknown;
                    fromPartial(object: Partial<_68.QueryChannelClientStateRequest>): _68.QueryChannelClientStateRequest;
                    fromAmino(object: _68.QueryChannelClientStateRequestAmino): _68.QueryChannelClientStateRequest;
                    toAmino(message: _68.QueryChannelClientStateRequest): _68.QueryChannelClientStateRequestAmino;
                    fromAminoMsg(object: _68.QueryChannelClientStateRequestAminoMsg): _68.QueryChannelClientStateRequest;
                    toAminoMsg(message: _68.QueryChannelClientStateRequest): _68.QueryChannelClientStateRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelClientStateRequestProtoMsg): _68.QueryChannelClientStateRequest;
                    toProto(message: _68.QueryChannelClientStateRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelClientStateRequest): _68.QueryChannelClientStateRequestProtoMsg;
                };
                QueryChannelClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelClientStateResponse;
                    isSDK(o: any): o is _68.QueryChannelClientStateResponseSDKType;
                    isAmino(o: any): o is _68.QueryChannelClientStateResponseAmino;
                    encode(message: _68.QueryChannelClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelClientStateResponse;
                    fromJSON(object: any): _68.QueryChannelClientStateResponse;
                    toJSON(message: _68.QueryChannelClientStateResponse): unknown;
                    fromPartial(object: Partial<_68.QueryChannelClientStateResponse>): _68.QueryChannelClientStateResponse;
                    fromAmino(object: _68.QueryChannelClientStateResponseAmino): _68.QueryChannelClientStateResponse;
                    toAmino(message: _68.QueryChannelClientStateResponse): _68.QueryChannelClientStateResponseAmino;
                    fromAminoMsg(object: _68.QueryChannelClientStateResponseAminoMsg): _68.QueryChannelClientStateResponse;
                    toAminoMsg(message: _68.QueryChannelClientStateResponse): _68.QueryChannelClientStateResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelClientStateResponseProtoMsg): _68.QueryChannelClientStateResponse;
                    toProto(message: _68.QueryChannelClientStateResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelClientStateResponse): _68.QueryChannelClientStateResponseProtoMsg;
                };
                QueryChannelConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelConsensusStateRequest;
                    isSDK(o: any): o is _68.QueryChannelConsensusStateRequestSDKType;
                    isAmino(o: any): o is _68.QueryChannelConsensusStateRequestAmino;
                    encode(message: _68.QueryChannelConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelConsensusStateRequest;
                    fromJSON(object: any): _68.QueryChannelConsensusStateRequest;
                    toJSON(message: _68.QueryChannelConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_68.QueryChannelConsensusStateRequest>): _68.QueryChannelConsensusStateRequest;
                    fromAmino(object: _68.QueryChannelConsensusStateRequestAmino): _68.QueryChannelConsensusStateRequest;
                    toAmino(message: _68.QueryChannelConsensusStateRequest): _68.QueryChannelConsensusStateRequestAmino;
                    fromAminoMsg(object: _68.QueryChannelConsensusStateRequestAminoMsg): _68.QueryChannelConsensusStateRequest;
                    toAminoMsg(message: _68.QueryChannelConsensusStateRequest): _68.QueryChannelConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelConsensusStateRequestProtoMsg): _68.QueryChannelConsensusStateRequest;
                    toProto(message: _68.QueryChannelConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelConsensusStateRequest): _68.QueryChannelConsensusStateRequestProtoMsg;
                };
                QueryChannelConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryChannelConsensusStateResponse;
                    isSDK(o: any): o is _68.QueryChannelConsensusStateResponseSDKType;
                    isAmino(o: any): o is _68.QueryChannelConsensusStateResponseAmino;
                    encode(message: _68.QueryChannelConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryChannelConsensusStateResponse;
                    fromJSON(object: any): _68.QueryChannelConsensusStateResponse;
                    toJSON(message: _68.QueryChannelConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_68.QueryChannelConsensusStateResponse>): _68.QueryChannelConsensusStateResponse;
                    fromAmino(object: _68.QueryChannelConsensusStateResponseAmino): _68.QueryChannelConsensusStateResponse;
                    toAmino(message: _68.QueryChannelConsensusStateResponse): _68.QueryChannelConsensusStateResponseAmino;
                    fromAminoMsg(object: _68.QueryChannelConsensusStateResponseAminoMsg): _68.QueryChannelConsensusStateResponse;
                    toAminoMsg(message: _68.QueryChannelConsensusStateResponse): _68.QueryChannelConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryChannelConsensusStateResponseProtoMsg): _68.QueryChannelConsensusStateResponse;
                    toProto(message: _68.QueryChannelConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryChannelConsensusStateResponse): _68.QueryChannelConsensusStateResponseProtoMsg;
                };
                QueryPacketCommitmentRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketCommitmentRequest;
                    isSDK(o: any): o is _68.QueryPacketCommitmentRequestSDKType;
                    isAmino(o: any): o is _68.QueryPacketCommitmentRequestAmino;
                    encode(message: _68.QueryPacketCommitmentRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketCommitmentRequest;
                    fromJSON(object: any): _68.QueryPacketCommitmentRequest;
                    toJSON(message: _68.QueryPacketCommitmentRequest): unknown;
                    fromPartial(object: Partial<_68.QueryPacketCommitmentRequest>): _68.QueryPacketCommitmentRequest;
                    fromAmino(object: _68.QueryPacketCommitmentRequestAmino): _68.QueryPacketCommitmentRequest;
                    toAmino(message: _68.QueryPacketCommitmentRequest): _68.QueryPacketCommitmentRequestAmino;
                    fromAminoMsg(object: _68.QueryPacketCommitmentRequestAminoMsg): _68.QueryPacketCommitmentRequest;
                    toAminoMsg(message: _68.QueryPacketCommitmentRequest): _68.QueryPacketCommitmentRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketCommitmentRequestProtoMsg): _68.QueryPacketCommitmentRequest;
                    toProto(message: _68.QueryPacketCommitmentRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketCommitmentRequest): _68.QueryPacketCommitmentRequestProtoMsg;
                };
                QueryPacketCommitmentResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketCommitmentResponse;
                    isSDK(o: any): o is _68.QueryPacketCommitmentResponseSDKType;
                    isAmino(o: any): o is _68.QueryPacketCommitmentResponseAmino;
                    encode(message: _68.QueryPacketCommitmentResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketCommitmentResponse;
                    fromJSON(object: any): _68.QueryPacketCommitmentResponse;
                    toJSON(message: _68.QueryPacketCommitmentResponse): unknown;
                    fromPartial(object: Partial<_68.QueryPacketCommitmentResponse>): _68.QueryPacketCommitmentResponse;
                    fromAmino(object: _68.QueryPacketCommitmentResponseAmino): _68.QueryPacketCommitmentResponse;
                    toAmino(message: _68.QueryPacketCommitmentResponse): _68.QueryPacketCommitmentResponseAmino;
                    fromAminoMsg(object: _68.QueryPacketCommitmentResponseAminoMsg): _68.QueryPacketCommitmentResponse;
                    toAminoMsg(message: _68.QueryPacketCommitmentResponse): _68.QueryPacketCommitmentResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketCommitmentResponseProtoMsg): _68.QueryPacketCommitmentResponse;
                    toProto(message: _68.QueryPacketCommitmentResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketCommitmentResponse): _68.QueryPacketCommitmentResponseProtoMsg;
                };
                QueryPacketCommitmentsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketCommitmentsRequest;
                    isSDK(o: any): o is _68.QueryPacketCommitmentsRequestSDKType;
                    isAmino(o: any): o is _68.QueryPacketCommitmentsRequestAmino;
                    encode(message: _68.QueryPacketCommitmentsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketCommitmentsRequest;
                    fromJSON(object: any): _68.QueryPacketCommitmentsRequest;
                    toJSON(message: _68.QueryPacketCommitmentsRequest): unknown;
                    fromPartial(object: Partial<_68.QueryPacketCommitmentsRequest>): _68.QueryPacketCommitmentsRequest;
                    fromAmino(object: _68.QueryPacketCommitmentsRequestAmino): _68.QueryPacketCommitmentsRequest;
                    toAmino(message: _68.QueryPacketCommitmentsRequest): _68.QueryPacketCommitmentsRequestAmino;
                    fromAminoMsg(object: _68.QueryPacketCommitmentsRequestAminoMsg): _68.QueryPacketCommitmentsRequest;
                    toAminoMsg(message: _68.QueryPacketCommitmentsRequest): _68.QueryPacketCommitmentsRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketCommitmentsRequestProtoMsg): _68.QueryPacketCommitmentsRequest;
                    toProto(message: _68.QueryPacketCommitmentsRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketCommitmentsRequest): _68.QueryPacketCommitmentsRequestProtoMsg;
                };
                QueryPacketCommitmentsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketCommitmentsResponse;
                    isSDK(o: any): o is _68.QueryPacketCommitmentsResponseSDKType;
                    isAmino(o: any): o is _68.QueryPacketCommitmentsResponseAmino;
                    encode(message: _68.QueryPacketCommitmentsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketCommitmentsResponse;
                    fromJSON(object: any): _68.QueryPacketCommitmentsResponse;
                    toJSON(message: _68.QueryPacketCommitmentsResponse): unknown;
                    fromPartial(object: Partial<_68.QueryPacketCommitmentsResponse>): _68.QueryPacketCommitmentsResponse;
                    fromAmino(object: _68.QueryPacketCommitmentsResponseAmino): _68.QueryPacketCommitmentsResponse;
                    toAmino(message: _68.QueryPacketCommitmentsResponse): _68.QueryPacketCommitmentsResponseAmino;
                    fromAminoMsg(object: _68.QueryPacketCommitmentsResponseAminoMsg): _68.QueryPacketCommitmentsResponse;
                    toAminoMsg(message: _68.QueryPacketCommitmentsResponse): _68.QueryPacketCommitmentsResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketCommitmentsResponseProtoMsg): _68.QueryPacketCommitmentsResponse;
                    toProto(message: _68.QueryPacketCommitmentsResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketCommitmentsResponse): _68.QueryPacketCommitmentsResponseProtoMsg;
                };
                QueryPacketReceiptRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketReceiptRequest;
                    isSDK(o: any): o is _68.QueryPacketReceiptRequestSDKType;
                    isAmino(o: any): o is _68.QueryPacketReceiptRequestAmino;
                    encode(message: _68.QueryPacketReceiptRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketReceiptRequest;
                    fromJSON(object: any): _68.QueryPacketReceiptRequest;
                    toJSON(message: _68.QueryPacketReceiptRequest): unknown;
                    fromPartial(object: Partial<_68.QueryPacketReceiptRequest>): _68.QueryPacketReceiptRequest;
                    fromAmino(object: _68.QueryPacketReceiptRequestAmino): _68.QueryPacketReceiptRequest;
                    toAmino(message: _68.QueryPacketReceiptRequest): _68.QueryPacketReceiptRequestAmino;
                    fromAminoMsg(object: _68.QueryPacketReceiptRequestAminoMsg): _68.QueryPacketReceiptRequest;
                    toAminoMsg(message: _68.QueryPacketReceiptRequest): _68.QueryPacketReceiptRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketReceiptRequestProtoMsg): _68.QueryPacketReceiptRequest;
                    toProto(message: _68.QueryPacketReceiptRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketReceiptRequest): _68.QueryPacketReceiptRequestProtoMsg;
                };
                QueryPacketReceiptResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketReceiptResponse;
                    isSDK(o: any): o is _68.QueryPacketReceiptResponseSDKType;
                    isAmino(o: any): o is _68.QueryPacketReceiptResponseAmino;
                    encode(message: _68.QueryPacketReceiptResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketReceiptResponse;
                    fromJSON(object: any): _68.QueryPacketReceiptResponse;
                    toJSON(message: _68.QueryPacketReceiptResponse): unknown;
                    fromPartial(object: Partial<_68.QueryPacketReceiptResponse>): _68.QueryPacketReceiptResponse;
                    fromAmino(object: _68.QueryPacketReceiptResponseAmino): _68.QueryPacketReceiptResponse;
                    toAmino(message: _68.QueryPacketReceiptResponse): _68.QueryPacketReceiptResponseAmino;
                    fromAminoMsg(object: _68.QueryPacketReceiptResponseAminoMsg): _68.QueryPacketReceiptResponse;
                    toAminoMsg(message: _68.QueryPacketReceiptResponse): _68.QueryPacketReceiptResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketReceiptResponseProtoMsg): _68.QueryPacketReceiptResponse;
                    toProto(message: _68.QueryPacketReceiptResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketReceiptResponse): _68.QueryPacketReceiptResponseProtoMsg;
                };
                QueryPacketAcknowledgementRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketAcknowledgementRequest;
                    isSDK(o: any): o is _68.QueryPacketAcknowledgementRequestSDKType;
                    isAmino(o: any): o is _68.QueryPacketAcknowledgementRequestAmino;
                    encode(message: _68.QueryPacketAcknowledgementRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketAcknowledgementRequest;
                    fromJSON(object: any): _68.QueryPacketAcknowledgementRequest;
                    toJSON(message: _68.QueryPacketAcknowledgementRequest): unknown;
                    fromPartial(object: Partial<_68.QueryPacketAcknowledgementRequest>): _68.QueryPacketAcknowledgementRequest;
                    fromAmino(object: _68.QueryPacketAcknowledgementRequestAmino): _68.QueryPacketAcknowledgementRequest;
                    toAmino(message: _68.QueryPacketAcknowledgementRequest): _68.QueryPacketAcknowledgementRequestAmino;
                    fromAminoMsg(object: _68.QueryPacketAcknowledgementRequestAminoMsg): _68.QueryPacketAcknowledgementRequest;
                    toAminoMsg(message: _68.QueryPacketAcknowledgementRequest): _68.QueryPacketAcknowledgementRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketAcknowledgementRequestProtoMsg): _68.QueryPacketAcknowledgementRequest;
                    toProto(message: _68.QueryPacketAcknowledgementRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketAcknowledgementRequest): _68.QueryPacketAcknowledgementRequestProtoMsg;
                };
                QueryPacketAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketAcknowledgementResponse;
                    isSDK(o: any): o is _68.QueryPacketAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _68.QueryPacketAcknowledgementResponseAmino;
                    encode(message: _68.QueryPacketAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketAcknowledgementResponse;
                    fromJSON(object: any): _68.QueryPacketAcknowledgementResponse;
                    toJSON(message: _68.QueryPacketAcknowledgementResponse): unknown;
                    fromPartial(object: Partial<_68.QueryPacketAcknowledgementResponse>): _68.QueryPacketAcknowledgementResponse;
                    fromAmino(object: _68.QueryPacketAcknowledgementResponseAmino): _68.QueryPacketAcknowledgementResponse;
                    toAmino(message: _68.QueryPacketAcknowledgementResponse): _68.QueryPacketAcknowledgementResponseAmino;
                    fromAminoMsg(object: _68.QueryPacketAcknowledgementResponseAminoMsg): _68.QueryPacketAcknowledgementResponse;
                    toAminoMsg(message: _68.QueryPacketAcknowledgementResponse): _68.QueryPacketAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketAcknowledgementResponseProtoMsg): _68.QueryPacketAcknowledgementResponse;
                    toProto(message: _68.QueryPacketAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketAcknowledgementResponse): _68.QueryPacketAcknowledgementResponseProtoMsg;
                };
                QueryPacketAcknowledgementsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketAcknowledgementsRequest;
                    isSDK(o: any): o is _68.QueryPacketAcknowledgementsRequestSDKType;
                    isAmino(o: any): o is _68.QueryPacketAcknowledgementsRequestAmino;
                    encode(message: _68.QueryPacketAcknowledgementsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketAcknowledgementsRequest;
                    fromJSON(object: any): _68.QueryPacketAcknowledgementsRequest;
                    toJSON(message: _68.QueryPacketAcknowledgementsRequest): unknown;
                    fromPartial(object: Partial<_68.QueryPacketAcknowledgementsRequest>): _68.QueryPacketAcknowledgementsRequest;
                    fromAmino(object: _68.QueryPacketAcknowledgementsRequestAmino): _68.QueryPacketAcknowledgementsRequest;
                    toAmino(message: _68.QueryPacketAcknowledgementsRequest): _68.QueryPacketAcknowledgementsRequestAmino;
                    fromAminoMsg(object: _68.QueryPacketAcknowledgementsRequestAminoMsg): _68.QueryPacketAcknowledgementsRequest;
                    toAminoMsg(message: _68.QueryPacketAcknowledgementsRequest): _68.QueryPacketAcknowledgementsRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketAcknowledgementsRequestProtoMsg): _68.QueryPacketAcknowledgementsRequest;
                    toProto(message: _68.QueryPacketAcknowledgementsRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketAcknowledgementsRequest): _68.QueryPacketAcknowledgementsRequestProtoMsg;
                };
                QueryPacketAcknowledgementsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryPacketAcknowledgementsResponse;
                    isSDK(o: any): o is _68.QueryPacketAcknowledgementsResponseSDKType;
                    isAmino(o: any): o is _68.QueryPacketAcknowledgementsResponseAmino;
                    encode(message: _68.QueryPacketAcknowledgementsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryPacketAcknowledgementsResponse;
                    fromJSON(object: any): _68.QueryPacketAcknowledgementsResponse;
                    toJSON(message: _68.QueryPacketAcknowledgementsResponse): unknown;
                    fromPartial(object: Partial<_68.QueryPacketAcknowledgementsResponse>): _68.QueryPacketAcknowledgementsResponse;
                    fromAmino(object: _68.QueryPacketAcknowledgementsResponseAmino): _68.QueryPacketAcknowledgementsResponse;
                    toAmino(message: _68.QueryPacketAcknowledgementsResponse): _68.QueryPacketAcknowledgementsResponseAmino;
                    fromAminoMsg(object: _68.QueryPacketAcknowledgementsResponseAminoMsg): _68.QueryPacketAcknowledgementsResponse;
                    toAminoMsg(message: _68.QueryPacketAcknowledgementsResponse): _68.QueryPacketAcknowledgementsResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryPacketAcknowledgementsResponseProtoMsg): _68.QueryPacketAcknowledgementsResponse;
                    toProto(message: _68.QueryPacketAcknowledgementsResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryPacketAcknowledgementsResponse): _68.QueryPacketAcknowledgementsResponseProtoMsg;
                };
                QueryUnreceivedPacketsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryUnreceivedPacketsRequest;
                    isSDK(o: any): o is _68.QueryUnreceivedPacketsRequestSDKType;
                    isAmino(o: any): o is _68.QueryUnreceivedPacketsRequestAmino;
                    encode(message: _68.QueryUnreceivedPacketsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryUnreceivedPacketsRequest;
                    fromJSON(object: any): _68.QueryUnreceivedPacketsRequest;
                    toJSON(message: _68.QueryUnreceivedPacketsRequest): unknown;
                    fromPartial(object: Partial<_68.QueryUnreceivedPacketsRequest>): _68.QueryUnreceivedPacketsRequest;
                    fromAmino(object: _68.QueryUnreceivedPacketsRequestAmino): _68.QueryUnreceivedPacketsRequest;
                    toAmino(message: _68.QueryUnreceivedPacketsRequest): _68.QueryUnreceivedPacketsRequestAmino;
                    fromAminoMsg(object: _68.QueryUnreceivedPacketsRequestAminoMsg): _68.QueryUnreceivedPacketsRequest;
                    toAminoMsg(message: _68.QueryUnreceivedPacketsRequest): _68.QueryUnreceivedPacketsRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryUnreceivedPacketsRequestProtoMsg): _68.QueryUnreceivedPacketsRequest;
                    toProto(message: _68.QueryUnreceivedPacketsRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryUnreceivedPacketsRequest): _68.QueryUnreceivedPacketsRequestProtoMsg;
                };
                QueryUnreceivedPacketsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryUnreceivedPacketsResponse;
                    isSDK(o: any): o is _68.QueryUnreceivedPacketsResponseSDKType;
                    isAmino(o: any): o is _68.QueryUnreceivedPacketsResponseAmino;
                    encode(message: _68.QueryUnreceivedPacketsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryUnreceivedPacketsResponse;
                    fromJSON(object: any): _68.QueryUnreceivedPacketsResponse;
                    toJSON(message: _68.QueryUnreceivedPacketsResponse): unknown;
                    fromPartial(object: Partial<_68.QueryUnreceivedPacketsResponse>): _68.QueryUnreceivedPacketsResponse;
                    fromAmino(object: _68.QueryUnreceivedPacketsResponseAmino): _68.QueryUnreceivedPacketsResponse;
                    toAmino(message: _68.QueryUnreceivedPacketsResponse): _68.QueryUnreceivedPacketsResponseAmino;
                    fromAminoMsg(object: _68.QueryUnreceivedPacketsResponseAminoMsg): _68.QueryUnreceivedPacketsResponse;
                    toAminoMsg(message: _68.QueryUnreceivedPacketsResponse): _68.QueryUnreceivedPacketsResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryUnreceivedPacketsResponseProtoMsg): _68.QueryUnreceivedPacketsResponse;
                    toProto(message: _68.QueryUnreceivedPacketsResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryUnreceivedPacketsResponse): _68.QueryUnreceivedPacketsResponseProtoMsg;
                };
                QueryUnreceivedAcksRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryUnreceivedAcksRequest;
                    isSDK(o: any): o is _68.QueryUnreceivedAcksRequestSDKType;
                    isAmino(o: any): o is _68.QueryUnreceivedAcksRequestAmino;
                    encode(message: _68.QueryUnreceivedAcksRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryUnreceivedAcksRequest;
                    fromJSON(object: any): _68.QueryUnreceivedAcksRequest;
                    toJSON(message: _68.QueryUnreceivedAcksRequest): unknown;
                    fromPartial(object: Partial<_68.QueryUnreceivedAcksRequest>): _68.QueryUnreceivedAcksRequest;
                    fromAmino(object: _68.QueryUnreceivedAcksRequestAmino): _68.QueryUnreceivedAcksRequest;
                    toAmino(message: _68.QueryUnreceivedAcksRequest): _68.QueryUnreceivedAcksRequestAmino;
                    fromAminoMsg(object: _68.QueryUnreceivedAcksRequestAminoMsg): _68.QueryUnreceivedAcksRequest;
                    toAminoMsg(message: _68.QueryUnreceivedAcksRequest): _68.QueryUnreceivedAcksRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryUnreceivedAcksRequestProtoMsg): _68.QueryUnreceivedAcksRequest;
                    toProto(message: _68.QueryUnreceivedAcksRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryUnreceivedAcksRequest): _68.QueryUnreceivedAcksRequestProtoMsg;
                };
                QueryUnreceivedAcksResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryUnreceivedAcksResponse;
                    isSDK(o: any): o is _68.QueryUnreceivedAcksResponseSDKType;
                    isAmino(o: any): o is _68.QueryUnreceivedAcksResponseAmino;
                    encode(message: _68.QueryUnreceivedAcksResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryUnreceivedAcksResponse;
                    fromJSON(object: any): _68.QueryUnreceivedAcksResponse;
                    toJSON(message: _68.QueryUnreceivedAcksResponse): unknown;
                    fromPartial(object: Partial<_68.QueryUnreceivedAcksResponse>): _68.QueryUnreceivedAcksResponse;
                    fromAmino(object: _68.QueryUnreceivedAcksResponseAmino): _68.QueryUnreceivedAcksResponse;
                    toAmino(message: _68.QueryUnreceivedAcksResponse): _68.QueryUnreceivedAcksResponseAmino;
                    fromAminoMsg(object: _68.QueryUnreceivedAcksResponseAminoMsg): _68.QueryUnreceivedAcksResponse;
                    toAminoMsg(message: _68.QueryUnreceivedAcksResponse): _68.QueryUnreceivedAcksResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryUnreceivedAcksResponseProtoMsg): _68.QueryUnreceivedAcksResponse;
                    toProto(message: _68.QueryUnreceivedAcksResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryUnreceivedAcksResponse): _68.QueryUnreceivedAcksResponseProtoMsg;
                };
                QueryNextSequenceReceiveRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryNextSequenceReceiveRequest;
                    isSDK(o: any): o is _68.QueryNextSequenceReceiveRequestSDKType;
                    isAmino(o: any): o is _68.QueryNextSequenceReceiveRequestAmino;
                    encode(message: _68.QueryNextSequenceReceiveRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryNextSequenceReceiveRequest;
                    fromJSON(object: any): _68.QueryNextSequenceReceiveRequest;
                    toJSON(message: _68.QueryNextSequenceReceiveRequest): unknown;
                    fromPartial(object: Partial<_68.QueryNextSequenceReceiveRequest>): _68.QueryNextSequenceReceiveRequest;
                    fromAmino(object: _68.QueryNextSequenceReceiveRequestAmino): _68.QueryNextSequenceReceiveRequest;
                    toAmino(message: _68.QueryNextSequenceReceiveRequest): _68.QueryNextSequenceReceiveRequestAmino;
                    fromAminoMsg(object: _68.QueryNextSequenceReceiveRequestAminoMsg): _68.QueryNextSequenceReceiveRequest;
                    toAminoMsg(message: _68.QueryNextSequenceReceiveRequest): _68.QueryNextSequenceReceiveRequestAminoMsg;
                    fromProtoMsg(message: _68.QueryNextSequenceReceiveRequestProtoMsg): _68.QueryNextSequenceReceiveRequest;
                    toProto(message: _68.QueryNextSequenceReceiveRequest): Uint8Array;
                    toProtoMsg(message: _68.QueryNextSequenceReceiveRequest): _68.QueryNextSequenceReceiveRequestProtoMsg;
                };
                QueryNextSequenceReceiveResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _68.QueryNextSequenceReceiveResponse;
                    isSDK(o: any): o is _68.QueryNextSequenceReceiveResponseSDKType;
                    isAmino(o: any): o is _68.QueryNextSequenceReceiveResponseAmino;
                    encode(message: _68.QueryNextSequenceReceiveResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.QueryNextSequenceReceiveResponse;
                    fromJSON(object: any): _68.QueryNextSequenceReceiveResponse;
                    toJSON(message: _68.QueryNextSequenceReceiveResponse): unknown;
                    fromPartial(object: Partial<_68.QueryNextSequenceReceiveResponse>): _68.QueryNextSequenceReceiveResponse;
                    fromAmino(object: _68.QueryNextSequenceReceiveResponseAmino): _68.QueryNextSequenceReceiveResponse;
                    toAmino(message: _68.QueryNextSequenceReceiveResponse): _68.QueryNextSequenceReceiveResponseAmino;
                    fromAminoMsg(object: _68.QueryNextSequenceReceiveResponseAminoMsg): _68.QueryNextSequenceReceiveResponse;
                    toAminoMsg(message: _68.QueryNextSequenceReceiveResponse): _68.QueryNextSequenceReceiveResponseAminoMsg;
                    fromProtoMsg(message: _68.QueryNextSequenceReceiveResponseProtoMsg): _68.QueryNextSequenceReceiveResponse;
                    toProto(message: _68.QueryNextSequenceReceiveResponse): Uint8Array;
                    toProtoMsg(message: _68.QueryNextSequenceReceiveResponse): _68.QueryNextSequenceReceiveResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _67.GenesisState;
                    isSDK(o: any): o is _67.GenesisStateSDKType;
                    isAmino(o: any): o is _67.GenesisStateAmino;
                    encode(message: _67.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.GenesisState;
                    fromJSON(object: any): _67.GenesisState;
                    toJSON(message: _67.GenesisState): unknown;
                    fromPartial(object: Partial<_67.GenesisState>): _67.GenesisState;
                    fromAmino(object: _67.GenesisStateAmino): _67.GenesisState;
                    toAmino(message: _67.GenesisState): _67.GenesisStateAmino;
                    fromAminoMsg(object: _67.GenesisStateAminoMsg): _67.GenesisState;
                    toAminoMsg(message: _67.GenesisState): _67.GenesisStateAminoMsg;
                    fromProtoMsg(message: _67.GenesisStateProtoMsg): _67.GenesisState;
                    toProto(message: _67.GenesisState): Uint8Array;
                    toProtoMsg(message: _67.GenesisState): _67.GenesisStateProtoMsg;
                };
                PacketSequence: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _67.PacketSequence;
                    isSDK(o: any): o is _67.PacketSequenceSDKType;
                    isAmino(o: any): o is _67.PacketSequenceAmino;
                    encode(message: _67.PacketSequence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.PacketSequence;
                    fromJSON(object: any): _67.PacketSequence;
                    toJSON(message: _67.PacketSequence): unknown;
                    fromPartial(object: Partial<_67.PacketSequence>): _67.PacketSequence;
                    fromAmino(object: _67.PacketSequenceAmino): _67.PacketSequence;
                    toAmino(message: _67.PacketSequence): _67.PacketSequenceAmino;
                    fromAminoMsg(object: _67.PacketSequenceAminoMsg): _67.PacketSequence;
                    toAminoMsg(message: _67.PacketSequence): _67.PacketSequenceAminoMsg;
                    fromProtoMsg(message: _67.PacketSequenceProtoMsg): _67.PacketSequence;
                    toProto(message: _67.PacketSequence): Uint8Array;
                    toProtoMsg(message: _67.PacketSequence): _67.PacketSequenceProtoMsg;
                };
                stateFromJSON(object: any): _66.State;
                stateToJSON(object: _66.State): string;
                orderFromJSON(object: any): _66.Order;
                orderToJSON(object: _66.Order): string;
                State: typeof _66.State;
                StateSDKType: typeof _66.State;
                StateAmino: typeof _66.State;
                Order: typeof _66.Order;
                OrderSDKType: typeof _66.Order;
                OrderAmino: typeof _66.Order;
                Channel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.Channel;
                    isSDK(o: any): o is _66.ChannelSDKType;
                    isAmino(o: any): o is _66.ChannelAmino;
                    encode(message: _66.Channel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Channel;
                    fromJSON(object: any): _66.Channel;
                    toJSON(message: _66.Channel): unknown;
                    fromPartial(object: Partial<_66.Channel>): _66.Channel;
                    fromAmino(object: _66.ChannelAmino): _66.Channel;
                    toAmino(message: _66.Channel): _66.ChannelAmino;
                    fromAminoMsg(object: _66.ChannelAminoMsg): _66.Channel;
                    toAminoMsg(message: _66.Channel): _66.ChannelAminoMsg;
                    fromProtoMsg(message: _66.ChannelProtoMsg): _66.Channel;
                    toProto(message: _66.Channel): Uint8Array;
                    toProtoMsg(message: _66.Channel): _66.ChannelProtoMsg;
                };
                IdentifiedChannel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.IdentifiedChannel;
                    isSDK(o: any): o is _66.IdentifiedChannelSDKType;
                    isAmino(o: any): o is _66.IdentifiedChannelAmino;
                    encode(message: _66.IdentifiedChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.IdentifiedChannel;
                    fromJSON(object: any): _66.IdentifiedChannel;
                    toJSON(message: _66.IdentifiedChannel): unknown;
                    fromPartial(object: Partial<_66.IdentifiedChannel>): _66.IdentifiedChannel;
                    fromAmino(object: _66.IdentifiedChannelAmino): _66.IdentifiedChannel;
                    toAmino(message: _66.IdentifiedChannel): _66.IdentifiedChannelAmino;
                    fromAminoMsg(object: _66.IdentifiedChannelAminoMsg): _66.IdentifiedChannel;
                    toAminoMsg(message: _66.IdentifiedChannel): _66.IdentifiedChannelAminoMsg;
                    fromProtoMsg(message: _66.IdentifiedChannelProtoMsg): _66.IdentifiedChannel;
                    toProto(message: _66.IdentifiedChannel): Uint8Array;
                    toProtoMsg(message: _66.IdentifiedChannel): _66.IdentifiedChannelProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.Counterparty;
                    isSDK(o: any): o is _66.CounterpartySDKType;
                    isAmino(o: any): o is _66.CounterpartyAmino;
                    encode(message: _66.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Counterparty;
                    fromJSON(object: any): _66.Counterparty;
                    toJSON(message: _66.Counterparty): unknown;
                    fromPartial(object: Partial<_66.Counterparty>): _66.Counterparty;
                    fromAmino(object: _66.CounterpartyAmino): _66.Counterparty;
                    toAmino(message: _66.Counterparty): _66.CounterpartyAmino;
                    fromAminoMsg(object: _66.CounterpartyAminoMsg): _66.Counterparty;
                    toAminoMsg(message: _66.Counterparty): _66.CounterpartyAminoMsg;
                    fromProtoMsg(message: _66.CounterpartyProtoMsg): _66.Counterparty;
                    toProto(message: _66.Counterparty): Uint8Array;
                    toProtoMsg(message: _66.Counterparty): _66.CounterpartyProtoMsg;
                };
                Packet: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.Packet;
                    isSDK(o: any): o is _66.PacketSDKType;
                    isAmino(o: any): o is _66.PacketAmino;
                    encode(message: _66.Packet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Packet;
                    fromJSON(object: any): _66.Packet;
                    toJSON(message: _66.Packet): unknown;
                    fromPartial(object: Partial<_66.Packet>): _66.Packet;
                    fromAmino(object: _66.PacketAmino): _66.Packet;
                    toAmino(message: _66.Packet): _66.PacketAmino;
                    fromAminoMsg(object: _66.PacketAminoMsg): _66.Packet;
                    toAminoMsg(message: _66.Packet): _66.PacketAminoMsg;
                    fromProtoMsg(message: _66.PacketProtoMsg): _66.Packet;
                    toProto(message: _66.Packet): Uint8Array;
                    toProtoMsg(message: _66.Packet): _66.PacketProtoMsg;
                };
                PacketState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.PacketState;
                    isSDK(o: any): o is _66.PacketStateSDKType;
                    isAmino(o: any): o is _66.PacketStateAmino;
                    encode(message: _66.PacketState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.PacketState;
                    fromJSON(object: any): _66.PacketState;
                    toJSON(message: _66.PacketState): unknown;
                    fromPartial(object: Partial<_66.PacketState>): _66.PacketState;
                    fromAmino(object: _66.PacketStateAmino): _66.PacketState;
                    toAmino(message: _66.PacketState): _66.PacketStateAmino;
                    fromAminoMsg(object: _66.PacketStateAminoMsg): _66.PacketState;
                    toAminoMsg(message: _66.PacketState): _66.PacketStateAminoMsg;
                    fromProtoMsg(message: _66.PacketStateProtoMsg): _66.PacketState;
                    toProto(message: _66.PacketState): Uint8Array;
                    toProtoMsg(message: _66.PacketState): _66.PacketStateProtoMsg;
                };
                Acknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _66.Acknowledgement;
                    isSDK(o: any): o is _66.AcknowledgementSDKType;
                    isAmino(o: any): o is _66.AcknowledgementAmino;
                    encode(message: _66.Acknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.Acknowledgement;
                    fromJSON(object: any): _66.Acknowledgement;
                    toJSON(message: _66.Acknowledgement): unknown;
                    fromPartial(object: Partial<_66.Acknowledgement>): _66.Acknowledgement;
                    fromAmino(object: _66.AcknowledgementAmino): _66.Acknowledgement;
                    toAmino(message: _66.Acknowledgement): _66.AcknowledgementAmino;
                    fromAminoMsg(object: _66.AcknowledgementAminoMsg): _66.Acknowledgement;
                    toAminoMsg(message: _66.Acknowledgement): _66.AcknowledgementAminoMsg;
                    fromProtoMsg(message: _66.AcknowledgementProtoMsg): _66.Acknowledgement;
                    toProto(message: _66.Acknowledgement): Uint8Array;
                    toProtoMsg(message: _66.Acknowledgement): _66.AcknowledgementProtoMsg;
                };
            };
        }
        namespace client {
            const v1: {
                MsgClientImpl: typeof _162.MsgClientImpl;
                QueryClientImpl: typeof _158.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    clientState(request: _72.QueryClientStateRequest): Promise<_72.QueryClientStateResponse>;
                    clientStates(request?: _72.QueryClientStatesRequest): Promise<_72.QueryClientStatesResponse>;
                    consensusState(request: _72.QueryConsensusStateRequest): Promise<_72.QueryConsensusStateResponse>;
                    consensusStates(request: _72.QueryConsensusStatesRequest): Promise<_72.QueryConsensusStatesResponse>;
                    clientStatus(request: _72.QueryClientStatusRequest): Promise<_72.QueryClientStatusResponse>;
                    clientParams(request?: _72.QueryClientParamsRequest): Promise<_72.QueryClientParamsResponse>;
                    upgradedClientState(request?: _72.QueryUpgradedClientStateRequest): Promise<_72.QueryUpgradedClientStateResponse>;
                    upgradedConsensusState(request?: _72.QueryUpgradedConsensusStateRequest): Promise<_72.QueryUpgradedConsensusStateResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        createClient(value: _73.MsgCreateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClient(value: _73.MsgUpdateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        upgradeClient(value: _73.MsgUpgradeClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        submitMisbehaviour(value: _73.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        createClient(value: _73.MsgCreateClient): {
                            typeUrl: string;
                            value: _73.MsgCreateClient;
                        };
                        updateClient(value: _73.MsgUpdateClient): {
                            typeUrl: string;
                            value: _73.MsgUpdateClient;
                        };
                        upgradeClient(value: _73.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _73.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _73.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _73.MsgSubmitMisbehaviour;
                        };
                    };
                    toJSON: {
                        createClient(value: _73.MsgCreateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateClient(value: _73.MsgUpdateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        upgradeClient(value: _73.MsgUpgradeClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        submitMisbehaviour(value: _73.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        createClient(value: any): {
                            typeUrl: string;
                            value: _73.MsgCreateClient;
                        };
                        updateClient(value: any): {
                            typeUrl: string;
                            value: _73.MsgUpdateClient;
                        };
                        upgradeClient(value: any): {
                            typeUrl: string;
                            value: _73.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: any): {
                            typeUrl: string;
                            value: _73.MsgSubmitMisbehaviour;
                        };
                    };
                    fromPartial: {
                        createClient(value: _73.MsgCreateClient): {
                            typeUrl: string;
                            value: _73.MsgCreateClient;
                        };
                        updateClient(value: _73.MsgUpdateClient): {
                            typeUrl: string;
                            value: _73.MsgUpdateClient;
                        };
                        upgradeClient(value: _73.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _73.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _73.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _73.MsgSubmitMisbehaviour;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.client.v1.MsgCreateClient": {
                        aminoType: string;
                        toAmino: (message: _73.MsgCreateClient) => _73.MsgCreateClientAmino;
                        fromAmino: (object: _73.MsgCreateClientAmino) => _73.MsgCreateClient;
                    };
                    "/ibc.core.client.v1.MsgUpdateClient": {
                        aminoType: string;
                        toAmino: (message: _73.MsgUpdateClient) => _73.MsgUpdateClientAmino;
                        fromAmino: (object: _73.MsgUpdateClientAmino) => _73.MsgUpdateClient;
                    };
                    "/ibc.core.client.v1.MsgUpgradeClient": {
                        aminoType: string;
                        toAmino: (message: _73.MsgUpgradeClient) => _73.MsgUpgradeClientAmino;
                        fromAmino: (object: _73.MsgUpgradeClientAmino) => _73.MsgUpgradeClient;
                    };
                    "/ibc.core.client.v1.MsgSubmitMisbehaviour": {
                        aminoType: string;
                        toAmino: (message: _73.MsgSubmitMisbehaviour) => _73.MsgSubmitMisbehaviourAmino;
                        fromAmino: (object: _73.MsgSubmitMisbehaviourAmino) => _73.MsgSubmitMisbehaviour;
                    };
                };
                MsgCreateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgCreateClient;
                    isSDK(o: any): o is _73.MsgCreateClientSDKType;
                    isAmino(o: any): o is _73.MsgCreateClientAmino;
                    encode(message: _73.MsgCreateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgCreateClient;
                    fromJSON(object: any): _73.MsgCreateClient;
                    toJSON(message: _73.MsgCreateClient): unknown;
                    fromPartial(object: Partial<_73.MsgCreateClient>): _73.MsgCreateClient;
                    fromAmino(object: _73.MsgCreateClientAmino): _73.MsgCreateClient;
                    toAmino(message: _73.MsgCreateClient): _73.MsgCreateClientAmino;
                    fromAminoMsg(object: _73.MsgCreateClientAminoMsg): _73.MsgCreateClient;
                    toAminoMsg(message: _73.MsgCreateClient): _73.MsgCreateClientAminoMsg;
                    fromProtoMsg(message: _73.MsgCreateClientProtoMsg): _73.MsgCreateClient;
                    toProto(message: _73.MsgCreateClient): Uint8Array;
                    toProtoMsg(message: _73.MsgCreateClient): _73.MsgCreateClientProtoMsg;
                };
                MsgCreateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgCreateClientResponse;
                    isSDK(o: any): o is _73.MsgCreateClientResponseSDKType;
                    isAmino(o: any): o is _73.MsgCreateClientResponseAmino;
                    encode(_: _73.MsgCreateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgCreateClientResponse;
                    fromJSON(_: any): _73.MsgCreateClientResponse;
                    toJSON(_: _73.MsgCreateClientResponse): unknown;
                    fromPartial(_: Partial<_73.MsgCreateClientResponse>): _73.MsgCreateClientResponse;
                    fromAmino(_: _73.MsgCreateClientResponseAmino): _73.MsgCreateClientResponse;
                    toAmino(_: _73.MsgCreateClientResponse): _73.MsgCreateClientResponseAmino;
                    fromAminoMsg(object: _73.MsgCreateClientResponseAminoMsg): _73.MsgCreateClientResponse;
                    toAminoMsg(message: _73.MsgCreateClientResponse): _73.MsgCreateClientResponseAminoMsg;
                    fromProtoMsg(message: _73.MsgCreateClientResponseProtoMsg): _73.MsgCreateClientResponse;
                    toProto(message: _73.MsgCreateClientResponse): Uint8Array;
                    toProtoMsg(message: _73.MsgCreateClientResponse): _73.MsgCreateClientResponseProtoMsg;
                };
                MsgUpdateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgUpdateClient;
                    isSDK(o: any): o is _73.MsgUpdateClientSDKType;
                    isAmino(o: any): o is _73.MsgUpdateClientAmino;
                    encode(message: _73.MsgUpdateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgUpdateClient;
                    fromJSON(object: any): _73.MsgUpdateClient;
                    toJSON(message: _73.MsgUpdateClient): unknown;
                    fromPartial(object: Partial<_73.MsgUpdateClient>): _73.MsgUpdateClient;
                    fromAmino(object: _73.MsgUpdateClientAmino): _73.MsgUpdateClient;
                    toAmino(message: _73.MsgUpdateClient): _73.MsgUpdateClientAmino;
                    fromAminoMsg(object: _73.MsgUpdateClientAminoMsg): _73.MsgUpdateClient;
                    toAminoMsg(message: _73.MsgUpdateClient): _73.MsgUpdateClientAminoMsg;
                    fromProtoMsg(message: _73.MsgUpdateClientProtoMsg): _73.MsgUpdateClient;
                    toProto(message: _73.MsgUpdateClient): Uint8Array;
                    toProtoMsg(message: _73.MsgUpdateClient): _73.MsgUpdateClientProtoMsg;
                };
                MsgUpdateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgUpdateClientResponse;
                    isSDK(o: any): o is _73.MsgUpdateClientResponseSDKType;
                    isAmino(o: any): o is _73.MsgUpdateClientResponseAmino;
                    encode(_: _73.MsgUpdateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgUpdateClientResponse;
                    fromJSON(_: any): _73.MsgUpdateClientResponse;
                    toJSON(_: _73.MsgUpdateClientResponse): unknown;
                    fromPartial(_: Partial<_73.MsgUpdateClientResponse>): _73.MsgUpdateClientResponse;
                    fromAmino(_: _73.MsgUpdateClientResponseAmino): _73.MsgUpdateClientResponse;
                    toAmino(_: _73.MsgUpdateClientResponse): _73.MsgUpdateClientResponseAmino;
                    fromAminoMsg(object: _73.MsgUpdateClientResponseAminoMsg): _73.MsgUpdateClientResponse;
                    toAminoMsg(message: _73.MsgUpdateClientResponse): _73.MsgUpdateClientResponseAminoMsg;
                    fromProtoMsg(message: _73.MsgUpdateClientResponseProtoMsg): _73.MsgUpdateClientResponse;
                    toProto(message: _73.MsgUpdateClientResponse): Uint8Array;
                    toProtoMsg(message: _73.MsgUpdateClientResponse): _73.MsgUpdateClientResponseProtoMsg;
                };
                MsgUpgradeClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgUpgradeClient;
                    isSDK(o: any): o is _73.MsgUpgradeClientSDKType;
                    isAmino(o: any): o is _73.MsgUpgradeClientAmino;
                    encode(message: _73.MsgUpgradeClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgUpgradeClient;
                    fromJSON(object: any): _73.MsgUpgradeClient;
                    toJSON(message: _73.MsgUpgradeClient): unknown;
                    fromPartial(object: Partial<_73.MsgUpgradeClient>): _73.MsgUpgradeClient;
                    fromAmino(object: _73.MsgUpgradeClientAmino): _73.MsgUpgradeClient;
                    toAmino(message: _73.MsgUpgradeClient): _73.MsgUpgradeClientAmino;
                    fromAminoMsg(object: _73.MsgUpgradeClientAminoMsg): _73.MsgUpgradeClient;
                    toAminoMsg(message: _73.MsgUpgradeClient): _73.MsgUpgradeClientAminoMsg;
                    fromProtoMsg(message: _73.MsgUpgradeClientProtoMsg): _73.MsgUpgradeClient;
                    toProto(message: _73.MsgUpgradeClient): Uint8Array;
                    toProtoMsg(message: _73.MsgUpgradeClient): _73.MsgUpgradeClientProtoMsg;
                };
                MsgUpgradeClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgUpgradeClientResponse;
                    isSDK(o: any): o is _73.MsgUpgradeClientResponseSDKType;
                    isAmino(o: any): o is _73.MsgUpgradeClientResponseAmino;
                    encode(_: _73.MsgUpgradeClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgUpgradeClientResponse;
                    fromJSON(_: any): _73.MsgUpgradeClientResponse;
                    toJSON(_: _73.MsgUpgradeClientResponse): unknown;
                    fromPartial(_: Partial<_73.MsgUpgradeClientResponse>): _73.MsgUpgradeClientResponse;
                    fromAmino(_: _73.MsgUpgradeClientResponseAmino): _73.MsgUpgradeClientResponse;
                    toAmino(_: _73.MsgUpgradeClientResponse): _73.MsgUpgradeClientResponseAmino;
                    fromAminoMsg(object: _73.MsgUpgradeClientResponseAminoMsg): _73.MsgUpgradeClientResponse;
                    toAminoMsg(message: _73.MsgUpgradeClientResponse): _73.MsgUpgradeClientResponseAminoMsg;
                    fromProtoMsg(message: _73.MsgUpgradeClientResponseProtoMsg): _73.MsgUpgradeClientResponse;
                    toProto(message: _73.MsgUpgradeClientResponse): Uint8Array;
                    toProtoMsg(message: _73.MsgUpgradeClientResponse): _73.MsgUpgradeClientResponseProtoMsg;
                };
                MsgSubmitMisbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgSubmitMisbehaviour;
                    isSDK(o: any): o is _73.MsgSubmitMisbehaviourSDKType;
                    isAmino(o: any): o is _73.MsgSubmitMisbehaviourAmino;
                    encode(message: _73.MsgSubmitMisbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgSubmitMisbehaviour;
                    fromJSON(object: any): _73.MsgSubmitMisbehaviour;
                    toJSON(message: _73.MsgSubmitMisbehaviour): unknown;
                    fromPartial(object: Partial<_73.MsgSubmitMisbehaviour>): _73.MsgSubmitMisbehaviour;
                    fromAmino(object: _73.MsgSubmitMisbehaviourAmino): _73.MsgSubmitMisbehaviour;
                    toAmino(message: _73.MsgSubmitMisbehaviour): _73.MsgSubmitMisbehaviourAmino;
                    fromAminoMsg(object: _73.MsgSubmitMisbehaviourAminoMsg): _73.MsgSubmitMisbehaviour;
                    toAminoMsg(message: _73.MsgSubmitMisbehaviour): _73.MsgSubmitMisbehaviourAminoMsg;
                    fromProtoMsg(message: _73.MsgSubmitMisbehaviourProtoMsg): _73.MsgSubmitMisbehaviour;
                    toProto(message: _73.MsgSubmitMisbehaviour): Uint8Array;
                    toProtoMsg(message: _73.MsgSubmitMisbehaviour): _73.MsgSubmitMisbehaviourProtoMsg;
                };
                MsgSubmitMisbehaviourResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _73.MsgSubmitMisbehaviourResponse;
                    isSDK(o: any): o is _73.MsgSubmitMisbehaviourResponseSDKType;
                    isAmino(o: any): o is _73.MsgSubmitMisbehaviourResponseAmino;
                    encode(_: _73.MsgSubmitMisbehaviourResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.MsgSubmitMisbehaviourResponse;
                    fromJSON(_: any): _73.MsgSubmitMisbehaviourResponse;
                    toJSON(_: _73.MsgSubmitMisbehaviourResponse): unknown;
                    fromPartial(_: Partial<_73.MsgSubmitMisbehaviourResponse>): _73.MsgSubmitMisbehaviourResponse;
                    fromAmino(_: _73.MsgSubmitMisbehaviourResponseAmino): _73.MsgSubmitMisbehaviourResponse;
                    toAmino(_: _73.MsgSubmitMisbehaviourResponse): _73.MsgSubmitMisbehaviourResponseAmino;
                    fromAminoMsg(object: _73.MsgSubmitMisbehaviourResponseAminoMsg): _73.MsgSubmitMisbehaviourResponse;
                    toAminoMsg(message: _73.MsgSubmitMisbehaviourResponse): _73.MsgSubmitMisbehaviourResponseAminoMsg;
                    fromProtoMsg(message: _73.MsgSubmitMisbehaviourResponseProtoMsg): _73.MsgSubmitMisbehaviourResponse;
                    toProto(message: _73.MsgSubmitMisbehaviourResponse): Uint8Array;
                    toProtoMsg(message: _73.MsgSubmitMisbehaviourResponse): _73.MsgSubmitMisbehaviourResponseProtoMsg;
                };
                QueryClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStateRequest;
                    isSDK(o: any): o is _72.QueryClientStateRequestSDKType;
                    isAmino(o: any): o is _72.QueryClientStateRequestAmino;
                    encode(message: _72.QueryClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStateRequest;
                    fromJSON(object: any): _72.QueryClientStateRequest;
                    toJSON(message: _72.QueryClientStateRequest): unknown;
                    fromPartial(object: Partial<_72.QueryClientStateRequest>): _72.QueryClientStateRequest;
                    fromAmino(object: _72.QueryClientStateRequestAmino): _72.QueryClientStateRequest;
                    toAmino(message: _72.QueryClientStateRequest): _72.QueryClientStateRequestAmino;
                    fromAminoMsg(object: _72.QueryClientStateRequestAminoMsg): _72.QueryClientStateRequest;
                    toAminoMsg(message: _72.QueryClientStateRequest): _72.QueryClientStateRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStateRequestProtoMsg): _72.QueryClientStateRequest;
                    toProto(message: _72.QueryClientStateRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStateRequest): _72.QueryClientStateRequestProtoMsg;
                };
                QueryClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStateResponse;
                    isSDK(o: any): o is _72.QueryClientStateResponseSDKType;
                    isAmino(o: any): o is _72.QueryClientStateResponseAmino;
                    encode(message: _72.QueryClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStateResponse;
                    fromJSON(object: any): _72.QueryClientStateResponse;
                    toJSON(message: _72.QueryClientStateResponse): unknown;
                    fromPartial(object: Partial<_72.QueryClientStateResponse>): _72.QueryClientStateResponse;
                    fromAmino(object: _72.QueryClientStateResponseAmino): _72.QueryClientStateResponse;
                    toAmino(message: _72.QueryClientStateResponse): _72.QueryClientStateResponseAmino;
                    fromAminoMsg(object: _72.QueryClientStateResponseAminoMsg): _72.QueryClientStateResponse;
                    toAminoMsg(message: _72.QueryClientStateResponse): _72.QueryClientStateResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStateResponseProtoMsg): _72.QueryClientStateResponse;
                    toProto(message: _72.QueryClientStateResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStateResponse): _72.QueryClientStateResponseProtoMsg;
                };
                QueryClientStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStatesRequest;
                    isSDK(o: any): o is _72.QueryClientStatesRequestSDKType;
                    isAmino(o: any): o is _72.QueryClientStatesRequestAmino;
                    encode(message: _72.QueryClientStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStatesRequest;
                    fromJSON(object: any): _72.QueryClientStatesRequest;
                    toJSON(message: _72.QueryClientStatesRequest): unknown;
                    fromPartial(object: Partial<_72.QueryClientStatesRequest>): _72.QueryClientStatesRequest;
                    fromAmino(object: _72.QueryClientStatesRequestAmino): _72.QueryClientStatesRequest;
                    toAmino(message: _72.QueryClientStatesRequest): _72.QueryClientStatesRequestAmino;
                    fromAminoMsg(object: _72.QueryClientStatesRequestAminoMsg): _72.QueryClientStatesRequest;
                    toAminoMsg(message: _72.QueryClientStatesRequest): _72.QueryClientStatesRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStatesRequestProtoMsg): _72.QueryClientStatesRequest;
                    toProto(message: _72.QueryClientStatesRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStatesRequest): _72.QueryClientStatesRequestProtoMsg;
                };
                QueryClientStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStatesResponse;
                    isSDK(o: any): o is _72.QueryClientStatesResponseSDKType;
                    isAmino(o: any): o is _72.QueryClientStatesResponseAmino;
                    encode(message: _72.QueryClientStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStatesResponse;
                    fromJSON(object: any): _72.QueryClientStatesResponse;
                    toJSON(message: _72.QueryClientStatesResponse): unknown;
                    fromPartial(object: Partial<_72.QueryClientStatesResponse>): _72.QueryClientStatesResponse;
                    fromAmino(object: _72.QueryClientStatesResponseAmino): _72.QueryClientStatesResponse;
                    toAmino(message: _72.QueryClientStatesResponse): _72.QueryClientStatesResponseAmino;
                    fromAminoMsg(object: _72.QueryClientStatesResponseAminoMsg): _72.QueryClientStatesResponse;
                    toAminoMsg(message: _72.QueryClientStatesResponse): _72.QueryClientStatesResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStatesResponseProtoMsg): _72.QueryClientStatesResponse;
                    toProto(message: _72.QueryClientStatesResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStatesResponse): _72.QueryClientStatesResponseProtoMsg;
                };
                QueryConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryConsensusStateRequest;
                    isSDK(o: any): o is _72.QueryConsensusStateRequestSDKType;
                    isAmino(o: any): o is _72.QueryConsensusStateRequestAmino;
                    encode(message: _72.QueryConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryConsensusStateRequest;
                    fromJSON(object: any): _72.QueryConsensusStateRequest;
                    toJSON(message: _72.QueryConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_72.QueryConsensusStateRequest>): _72.QueryConsensusStateRequest;
                    fromAmino(object: _72.QueryConsensusStateRequestAmino): _72.QueryConsensusStateRequest;
                    toAmino(message: _72.QueryConsensusStateRequest): _72.QueryConsensusStateRequestAmino;
                    fromAminoMsg(object: _72.QueryConsensusStateRequestAminoMsg): _72.QueryConsensusStateRequest;
                    toAminoMsg(message: _72.QueryConsensusStateRequest): _72.QueryConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryConsensusStateRequestProtoMsg): _72.QueryConsensusStateRequest;
                    toProto(message: _72.QueryConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryConsensusStateRequest): _72.QueryConsensusStateRequestProtoMsg;
                };
                QueryConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryConsensusStateResponse;
                    isSDK(o: any): o is _72.QueryConsensusStateResponseSDKType;
                    isAmino(o: any): o is _72.QueryConsensusStateResponseAmino;
                    encode(message: _72.QueryConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryConsensusStateResponse;
                    fromJSON(object: any): _72.QueryConsensusStateResponse;
                    toJSON(message: _72.QueryConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_72.QueryConsensusStateResponse>): _72.QueryConsensusStateResponse;
                    fromAmino(object: _72.QueryConsensusStateResponseAmino): _72.QueryConsensusStateResponse;
                    toAmino(message: _72.QueryConsensusStateResponse): _72.QueryConsensusStateResponseAmino;
                    fromAminoMsg(object: _72.QueryConsensusStateResponseAminoMsg): _72.QueryConsensusStateResponse;
                    toAminoMsg(message: _72.QueryConsensusStateResponse): _72.QueryConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryConsensusStateResponseProtoMsg): _72.QueryConsensusStateResponse;
                    toProto(message: _72.QueryConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryConsensusStateResponse): _72.QueryConsensusStateResponseProtoMsg;
                };
                QueryConsensusStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryConsensusStatesRequest;
                    isSDK(o: any): o is _72.QueryConsensusStatesRequestSDKType;
                    isAmino(o: any): o is _72.QueryConsensusStatesRequestAmino;
                    encode(message: _72.QueryConsensusStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryConsensusStatesRequest;
                    fromJSON(object: any): _72.QueryConsensusStatesRequest;
                    toJSON(message: _72.QueryConsensusStatesRequest): unknown;
                    fromPartial(object: Partial<_72.QueryConsensusStatesRequest>): _72.QueryConsensusStatesRequest;
                    fromAmino(object: _72.QueryConsensusStatesRequestAmino): _72.QueryConsensusStatesRequest;
                    toAmino(message: _72.QueryConsensusStatesRequest): _72.QueryConsensusStatesRequestAmino;
                    fromAminoMsg(object: _72.QueryConsensusStatesRequestAminoMsg): _72.QueryConsensusStatesRequest;
                    toAminoMsg(message: _72.QueryConsensusStatesRequest): _72.QueryConsensusStatesRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryConsensusStatesRequestProtoMsg): _72.QueryConsensusStatesRequest;
                    toProto(message: _72.QueryConsensusStatesRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryConsensusStatesRequest): _72.QueryConsensusStatesRequestProtoMsg;
                };
                QueryConsensusStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryConsensusStatesResponse;
                    isSDK(o: any): o is _72.QueryConsensusStatesResponseSDKType;
                    isAmino(o: any): o is _72.QueryConsensusStatesResponseAmino;
                    encode(message: _72.QueryConsensusStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryConsensusStatesResponse;
                    fromJSON(object: any): _72.QueryConsensusStatesResponse;
                    toJSON(message: _72.QueryConsensusStatesResponse): unknown;
                    fromPartial(object: Partial<_72.QueryConsensusStatesResponse>): _72.QueryConsensusStatesResponse;
                    fromAmino(object: _72.QueryConsensusStatesResponseAmino): _72.QueryConsensusStatesResponse;
                    toAmino(message: _72.QueryConsensusStatesResponse): _72.QueryConsensusStatesResponseAmino;
                    fromAminoMsg(object: _72.QueryConsensusStatesResponseAminoMsg): _72.QueryConsensusStatesResponse;
                    toAminoMsg(message: _72.QueryConsensusStatesResponse): _72.QueryConsensusStatesResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryConsensusStatesResponseProtoMsg): _72.QueryConsensusStatesResponse;
                    toProto(message: _72.QueryConsensusStatesResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryConsensusStatesResponse): _72.QueryConsensusStatesResponseProtoMsg;
                };
                QueryClientStatusRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStatusRequest;
                    isSDK(o: any): o is _72.QueryClientStatusRequestSDKType;
                    isAmino(o: any): o is _72.QueryClientStatusRequestAmino;
                    encode(message: _72.QueryClientStatusRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStatusRequest;
                    fromJSON(object: any): _72.QueryClientStatusRequest;
                    toJSON(message: _72.QueryClientStatusRequest): unknown;
                    fromPartial(object: Partial<_72.QueryClientStatusRequest>): _72.QueryClientStatusRequest;
                    fromAmino(object: _72.QueryClientStatusRequestAmino): _72.QueryClientStatusRequest;
                    toAmino(message: _72.QueryClientStatusRequest): _72.QueryClientStatusRequestAmino;
                    fromAminoMsg(object: _72.QueryClientStatusRequestAminoMsg): _72.QueryClientStatusRequest;
                    toAminoMsg(message: _72.QueryClientStatusRequest): _72.QueryClientStatusRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStatusRequestProtoMsg): _72.QueryClientStatusRequest;
                    toProto(message: _72.QueryClientStatusRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStatusRequest): _72.QueryClientStatusRequestProtoMsg;
                };
                QueryClientStatusResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientStatusResponse;
                    isSDK(o: any): o is _72.QueryClientStatusResponseSDKType;
                    isAmino(o: any): o is _72.QueryClientStatusResponseAmino;
                    encode(message: _72.QueryClientStatusResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientStatusResponse;
                    fromJSON(object: any): _72.QueryClientStatusResponse;
                    toJSON(message: _72.QueryClientStatusResponse): unknown;
                    fromPartial(object: Partial<_72.QueryClientStatusResponse>): _72.QueryClientStatusResponse;
                    fromAmino(object: _72.QueryClientStatusResponseAmino): _72.QueryClientStatusResponse;
                    toAmino(message: _72.QueryClientStatusResponse): _72.QueryClientStatusResponseAmino;
                    fromAminoMsg(object: _72.QueryClientStatusResponseAminoMsg): _72.QueryClientStatusResponse;
                    toAminoMsg(message: _72.QueryClientStatusResponse): _72.QueryClientStatusResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryClientStatusResponseProtoMsg): _72.QueryClientStatusResponse;
                    toProto(message: _72.QueryClientStatusResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryClientStatusResponse): _72.QueryClientStatusResponseProtoMsg;
                };
                QueryClientParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientParamsRequest;
                    isSDK(o: any): o is _72.QueryClientParamsRequestSDKType;
                    isAmino(o: any): o is _72.QueryClientParamsRequestAmino;
                    encode(_: _72.QueryClientParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientParamsRequest;
                    fromJSON(_: any): _72.QueryClientParamsRequest;
                    toJSON(_: _72.QueryClientParamsRequest): unknown;
                    fromPartial(_: Partial<_72.QueryClientParamsRequest>): _72.QueryClientParamsRequest;
                    fromAmino(_: _72.QueryClientParamsRequestAmino): _72.QueryClientParamsRequest;
                    toAmino(_: _72.QueryClientParamsRequest): _72.QueryClientParamsRequestAmino;
                    fromAminoMsg(object: _72.QueryClientParamsRequestAminoMsg): _72.QueryClientParamsRequest;
                    toAminoMsg(message: _72.QueryClientParamsRequest): _72.QueryClientParamsRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryClientParamsRequestProtoMsg): _72.QueryClientParamsRequest;
                    toProto(message: _72.QueryClientParamsRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryClientParamsRequest): _72.QueryClientParamsRequestProtoMsg;
                };
                QueryClientParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryClientParamsResponse;
                    isSDK(o: any): o is _72.QueryClientParamsResponseSDKType;
                    isAmino(o: any): o is _72.QueryClientParamsResponseAmino;
                    encode(message: _72.QueryClientParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryClientParamsResponse;
                    fromJSON(object: any): _72.QueryClientParamsResponse;
                    toJSON(message: _72.QueryClientParamsResponse): unknown;
                    fromPartial(object: Partial<_72.QueryClientParamsResponse>): _72.QueryClientParamsResponse;
                    fromAmino(object: _72.QueryClientParamsResponseAmino): _72.QueryClientParamsResponse;
                    toAmino(message: _72.QueryClientParamsResponse): _72.QueryClientParamsResponseAmino;
                    fromAminoMsg(object: _72.QueryClientParamsResponseAminoMsg): _72.QueryClientParamsResponse;
                    toAminoMsg(message: _72.QueryClientParamsResponse): _72.QueryClientParamsResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryClientParamsResponseProtoMsg): _72.QueryClientParamsResponse;
                    toProto(message: _72.QueryClientParamsResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryClientParamsResponse): _72.QueryClientParamsResponseProtoMsg;
                };
                QueryUpgradedClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryUpgradedClientStateRequest;
                    isSDK(o: any): o is _72.QueryUpgradedClientStateRequestSDKType;
                    isAmino(o: any): o is _72.QueryUpgradedClientStateRequestAmino;
                    encode(_: _72.QueryUpgradedClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryUpgradedClientStateRequest;
                    fromJSON(_: any): _72.QueryUpgradedClientStateRequest;
                    toJSON(_: _72.QueryUpgradedClientStateRequest): unknown;
                    fromPartial(_: Partial<_72.QueryUpgradedClientStateRequest>): _72.QueryUpgradedClientStateRequest;
                    fromAmino(_: _72.QueryUpgradedClientStateRequestAmino): _72.QueryUpgradedClientStateRequest;
                    toAmino(_: _72.QueryUpgradedClientStateRequest): _72.QueryUpgradedClientStateRequestAmino;
                    fromAminoMsg(object: _72.QueryUpgradedClientStateRequestAminoMsg): _72.QueryUpgradedClientStateRequest;
                    toAminoMsg(message: _72.QueryUpgradedClientStateRequest): _72.QueryUpgradedClientStateRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryUpgradedClientStateRequestProtoMsg): _72.QueryUpgradedClientStateRequest;
                    toProto(message: _72.QueryUpgradedClientStateRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryUpgradedClientStateRequest): _72.QueryUpgradedClientStateRequestProtoMsg;
                };
                QueryUpgradedClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryUpgradedClientStateResponse;
                    isSDK(o: any): o is _72.QueryUpgradedClientStateResponseSDKType;
                    isAmino(o: any): o is _72.QueryUpgradedClientStateResponseAmino;
                    encode(message: _72.QueryUpgradedClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryUpgradedClientStateResponse;
                    fromJSON(object: any): _72.QueryUpgradedClientStateResponse;
                    toJSON(message: _72.QueryUpgradedClientStateResponse): unknown;
                    fromPartial(object: Partial<_72.QueryUpgradedClientStateResponse>): _72.QueryUpgradedClientStateResponse;
                    fromAmino(object: _72.QueryUpgradedClientStateResponseAmino): _72.QueryUpgradedClientStateResponse;
                    toAmino(message: _72.QueryUpgradedClientStateResponse): _72.QueryUpgradedClientStateResponseAmino;
                    fromAminoMsg(object: _72.QueryUpgradedClientStateResponseAminoMsg): _72.QueryUpgradedClientStateResponse;
                    toAminoMsg(message: _72.QueryUpgradedClientStateResponse): _72.QueryUpgradedClientStateResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryUpgradedClientStateResponseProtoMsg): _72.QueryUpgradedClientStateResponse;
                    toProto(message: _72.QueryUpgradedClientStateResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryUpgradedClientStateResponse): _72.QueryUpgradedClientStateResponseProtoMsg;
                };
                QueryUpgradedConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryUpgradedConsensusStateRequest;
                    isSDK(o: any): o is _72.QueryUpgradedConsensusStateRequestSDKType;
                    isAmino(o: any): o is _72.QueryUpgradedConsensusStateRequestAmino;
                    encode(_: _72.QueryUpgradedConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryUpgradedConsensusStateRequest;
                    fromJSON(_: any): _72.QueryUpgradedConsensusStateRequest;
                    toJSON(_: _72.QueryUpgradedConsensusStateRequest): unknown;
                    fromPartial(_: Partial<_72.QueryUpgradedConsensusStateRequest>): _72.QueryUpgradedConsensusStateRequest;
                    fromAmino(_: _72.QueryUpgradedConsensusStateRequestAmino): _72.QueryUpgradedConsensusStateRequest;
                    toAmino(_: _72.QueryUpgradedConsensusStateRequest): _72.QueryUpgradedConsensusStateRequestAmino;
                    fromAminoMsg(object: _72.QueryUpgradedConsensusStateRequestAminoMsg): _72.QueryUpgradedConsensusStateRequest;
                    toAminoMsg(message: _72.QueryUpgradedConsensusStateRequest): _72.QueryUpgradedConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _72.QueryUpgradedConsensusStateRequestProtoMsg): _72.QueryUpgradedConsensusStateRequest;
                    toProto(message: _72.QueryUpgradedConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _72.QueryUpgradedConsensusStateRequest): _72.QueryUpgradedConsensusStateRequestProtoMsg;
                };
                QueryUpgradedConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _72.QueryUpgradedConsensusStateResponse;
                    isSDK(o: any): o is _72.QueryUpgradedConsensusStateResponseSDKType;
                    isAmino(o: any): o is _72.QueryUpgradedConsensusStateResponseAmino;
                    encode(message: _72.QueryUpgradedConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.QueryUpgradedConsensusStateResponse;
                    fromJSON(object: any): _72.QueryUpgradedConsensusStateResponse;
                    toJSON(message: _72.QueryUpgradedConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_72.QueryUpgradedConsensusStateResponse>): _72.QueryUpgradedConsensusStateResponse;
                    fromAmino(object: _72.QueryUpgradedConsensusStateResponseAmino): _72.QueryUpgradedConsensusStateResponse;
                    toAmino(message: _72.QueryUpgradedConsensusStateResponse): _72.QueryUpgradedConsensusStateResponseAmino;
                    fromAminoMsg(object: _72.QueryUpgradedConsensusStateResponseAminoMsg): _72.QueryUpgradedConsensusStateResponse;
                    toAminoMsg(message: _72.QueryUpgradedConsensusStateResponse): _72.QueryUpgradedConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _72.QueryUpgradedConsensusStateResponseProtoMsg): _72.QueryUpgradedConsensusStateResponse;
                    toProto(message: _72.QueryUpgradedConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _72.QueryUpgradedConsensusStateResponse): _72.QueryUpgradedConsensusStateResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _71.GenesisState;
                    isSDK(o: any): o is _71.GenesisStateSDKType;
                    isAmino(o: any): o is _71.GenesisStateAmino;
                    encode(message: _71.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GenesisState;
                    fromJSON(object: any): _71.GenesisState;
                    toJSON(message: _71.GenesisState): unknown;
                    fromPartial(object: Partial<_71.GenesisState>): _71.GenesisState;
                    fromAmino(object: _71.GenesisStateAmino): _71.GenesisState;
                    toAmino(message: _71.GenesisState): _71.GenesisStateAmino;
                    fromAminoMsg(object: _71.GenesisStateAminoMsg): _71.GenesisState;
                    toAminoMsg(message: _71.GenesisState): _71.GenesisStateAminoMsg;
                    fromProtoMsg(message: _71.GenesisStateProtoMsg): _71.GenesisState;
                    toProto(message: _71.GenesisState): Uint8Array;
                    toProtoMsg(message: _71.GenesisState): _71.GenesisStateProtoMsg;
                };
                GenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _71.GenesisMetadata;
                    isSDK(o: any): o is _71.GenesisMetadataSDKType;
                    isAmino(o: any): o is _71.GenesisMetadataAmino;
                    encode(message: _71.GenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GenesisMetadata;
                    fromJSON(object: any): _71.GenesisMetadata;
                    toJSON(message: _71.GenesisMetadata): unknown;
                    fromPartial(object: Partial<_71.GenesisMetadata>): _71.GenesisMetadata;
                    fromAmino(object: _71.GenesisMetadataAmino): _71.GenesisMetadata;
                    toAmino(message: _71.GenesisMetadata): _71.GenesisMetadataAmino;
                    fromAminoMsg(object: _71.GenesisMetadataAminoMsg): _71.GenesisMetadata;
                    toAminoMsg(message: _71.GenesisMetadata): _71.GenesisMetadataAminoMsg;
                    fromProtoMsg(message: _71.GenesisMetadataProtoMsg): _71.GenesisMetadata;
                    toProto(message: _71.GenesisMetadata): Uint8Array;
                    toProtoMsg(message: _71.GenesisMetadata): _71.GenesisMetadataProtoMsg;
                };
                IdentifiedGenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _71.IdentifiedGenesisMetadata;
                    isSDK(o: any): o is _71.IdentifiedGenesisMetadataSDKType;
                    isAmino(o: any): o is _71.IdentifiedGenesisMetadataAmino;
                    encode(message: _71.IdentifiedGenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.IdentifiedGenesisMetadata;
                    fromJSON(object: any): _71.IdentifiedGenesisMetadata;
                    toJSON(message: _71.IdentifiedGenesisMetadata): unknown;
                    fromPartial(object: Partial<_71.IdentifiedGenesisMetadata>): _71.IdentifiedGenesisMetadata;
                    fromAmino(object: _71.IdentifiedGenesisMetadataAmino): _71.IdentifiedGenesisMetadata;
                    toAmino(message: _71.IdentifiedGenesisMetadata): _71.IdentifiedGenesisMetadataAmino;
                    fromAminoMsg(object: _71.IdentifiedGenesisMetadataAminoMsg): _71.IdentifiedGenesisMetadata;
                    toAminoMsg(message: _71.IdentifiedGenesisMetadata): _71.IdentifiedGenesisMetadataAminoMsg;
                    fromProtoMsg(message: _71.IdentifiedGenesisMetadataProtoMsg): _71.IdentifiedGenesisMetadata;
                    toProto(message: _71.IdentifiedGenesisMetadata): Uint8Array;
                    toProtoMsg(message: _71.IdentifiedGenesisMetadata): _71.IdentifiedGenesisMetadataProtoMsg;
                };
                IdentifiedClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.IdentifiedClientState;
                    isSDK(o: any): o is _70.IdentifiedClientStateSDKType;
                    isAmino(o: any): o is _70.IdentifiedClientStateAmino;
                    encode(message: _70.IdentifiedClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.IdentifiedClientState;
                    fromJSON(object: any): _70.IdentifiedClientState;
                    toJSON(message: _70.IdentifiedClientState): unknown;
                    fromPartial(object: Partial<_70.IdentifiedClientState>): _70.IdentifiedClientState;
                    fromAmino(object: _70.IdentifiedClientStateAmino): _70.IdentifiedClientState;
                    toAmino(message: _70.IdentifiedClientState): _70.IdentifiedClientStateAmino;
                    fromAminoMsg(object: _70.IdentifiedClientStateAminoMsg): _70.IdentifiedClientState;
                    toAminoMsg(message: _70.IdentifiedClientState): _70.IdentifiedClientStateAminoMsg;
                    fromProtoMsg(message: _70.IdentifiedClientStateProtoMsg): _70.IdentifiedClientState;
                    toProto(message: _70.IdentifiedClientState): Uint8Array;
                    toProtoMsg(message: _70.IdentifiedClientState): _70.IdentifiedClientStateProtoMsg;
                };
                ConsensusStateWithHeight: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.ConsensusStateWithHeight;
                    isSDK(o: any): o is _70.ConsensusStateWithHeightSDKType;
                    isAmino(o: any): o is _70.ConsensusStateWithHeightAmino;
                    encode(message: _70.ConsensusStateWithHeight, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.ConsensusStateWithHeight;
                    fromJSON(object: any): _70.ConsensusStateWithHeight;
                    toJSON(message: _70.ConsensusStateWithHeight): unknown;
                    fromPartial(object: Partial<_70.ConsensusStateWithHeight>): _70.ConsensusStateWithHeight;
                    fromAmino(object: _70.ConsensusStateWithHeightAmino): _70.ConsensusStateWithHeight;
                    toAmino(message: _70.ConsensusStateWithHeight): _70.ConsensusStateWithHeightAmino;
                    fromAminoMsg(object: _70.ConsensusStateWithHeightAminoMsg): _70.ConsensusStateWithHeight;
                    toAminoMsg(message: _70.ConsensusStateWithHeight): _70.ConsensusStateWithHeightAminoMsg;
                    fromProtoMsg(message: _70.ConsensusStateWithHeightProtoMsg): _70.ConsensusStateWithHeight;
                    toProto(message: _70.ConsensusStateWithHeight): Uint8Array;
                    toProtoMsg(message: _70.ConsensusStateWithHeight): _70.ConsensusStateWithHeightProtoMsg;
                };
                ClientConsensusStates: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.ClientConsensusStates;
                    isSDK(o: any): o is _70.ClientConsensusStatesSDKType;
                    isAmino(o: any): o is _70.ClientConsensusStatesAmino;
                    encode(message: _70.ClientConsensusStates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.ClientConsensusStates;
                    fromJSON(object: any): _70.ClientConsensusStates;
                    toJSON(message: _70.ClientConsensusStates): unknown;
                    fromPartial(object: Partial<_70.ClientConsensusStates>): _70.ClientConsensusStates;
                    fromAmino(object: _70.ClientConsensusStatesAmino): _70.ClientConsensusStates;
                    toAmino(message: _70.ClientConsensusStates): _70.ClientConsensusStatesAmino;
                    fromAminoMsg(object: _70.ClientConsensusStatesAminoMsg): _70.ClientConsensusStates;
                    toAminoMsg(message: _70.ClientConsensusStates): _70.ClientConsensusStatesAminoMsg;
                    fromProtoMsg(message: _70.ClientConsensusStatesProtoMsg): _70.ClientConsensusStates;
                    toProto(message: _70.ClientConsensusStates): Uint8Array;
                    toProtoMsg(message: _70.ClientConsensusStates): _70.ClientConsensusStatesProtoMsg;
                };
                ClientUpdateProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.ClientUpdateProposal;
                    isSDK(o: any): o is _70.ClientUpdateProposalSDKType;
                    isAmino(o: any): o is _70.ClientUpdateProposalAmino;
                    encode(message: _70.ClientUpdateProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.ClientUpdateProposal;
                    fromJSON(object: any): _70.ClientUpdateProposal;
                    toJSON(message: _70.ClientUpdateProposal): unknown;
                    fromPartial(object: Partial<_70.ClientUpdateProposal>): _70.ClientUpdateProposal;
                    fromAmino(object: _70.ClientUpdateProposalAmino): _70.ClientUpdateProposal;
                    toAmino(message: _70.ClientUpdateProposal): _70.ClientUpdateProposalAmino;
                    fromAminoMsg(object: _70.ClientUpdateProposalAminoMsg): _70.ClientUpdateProposal;
                    toAminoMsg(message: _70.ClientUpdateProposal): _70.ClientUpdateProposalAminoMsg;
                    fromProtoMsg(message: _70.ClientUpdateProposalProtoMsg): _70.ClientUpdateProposal;
                    toProto(message: _70.ClientUpdateProposal): Uint8Array;
                    toProtoMsg(message: _70.ClientUpdateProposal): _70.ClientUpdateProposalProtoMsg;
                };
                UpgradeProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.UpgradeProposal;
                    isSDK(o: any): o is _70.UpgradeProposalSDKType;
                    isAmino(o: any): o is _70.UpgradeProposalAmino;
                    encode(message: _70.UpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.UpgradeProposal;
                    fromJSON(object: any): _70.UpgradeProposal;
                    toJSON(message: _70.UpgradeProposal): unknown;
                    fromPartial(object: Partial<_70.UpgradeProposal>): _70.UpgradeProposal;
                    fromAmino(object: _70.UpgradeProposalAmino): _70.UpgradeProposal;
                    toAmino(message: _70.UpgradeProposal): _70.UpgradeProposalAmino;
                    fromAminoMsg(object: _70.UpgradeProposalAminoMsg): _70.UpgradeProposal;
                    toAminoMsg(message: _70.UpgradeProposal): _70.UpgradeProposalAminoMsg;
                    fromProtoMsg(message: _70.UpgradeProposalProtoMsg): _70.UpgradeProposal;
                    toProto(message: _70.UpgradeProposal): Uint8Array;
                    toProtoMsg(message: _70.UpgradeProposal): _70.UpgradeProposalProtoMsg;
                };
                Height: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.Height;
                    isSDK(o: any): o is _70.HeightSDKType;
                    isAmino(o: any): o is _70.HeightAmino;
                    encode(message: _70.Height, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.Height;
                    fromJSON(object: any): _70.Height;
                    toJSON(message: _70.Height): unknown;
                    fromPartial(object: Partial<_70.Height>): _70.Height;
                    fromAmino(object: _70.HeightAmino): _70.Height;
                    toAmino(message: _70.Height): _70.HeightAmino;
                    fromAminoMsg(object: _70.HeightAminoMsg): _70.Height;
                    toAminoMsg(message: _70.Height): _70.HeightAminoMsg;
                    fromProtoMsg(message: _70.HeightProtoMsg): _70.Height;
                    toProto(message: _70.Height): Uint8Array;
                    toProtoMsg(message: _70.Height): _70.HeightProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _70.Params;
                    isSDK(o: any): o is _70.ParamsSDKType;
                    isAmino(o: any): o is _70.ParamsAmino;
                    encode(message: _70.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.Params;
                    fromJSON(object: any): _70.Params;
                    toJSON(message: _70.Params): unknown;
                    fromPartial(object: Partial<_70.Params>): _70.Params;
                    fromAmino(object: _70.ParamsAmino): _70.Params;
                    toAmino(message: _70.Params): _70.ParamsAmino;
                    fromAminoMsg(object: _70.ParamsAminoMsg): _70.Params;
                    toAminoMsg(message: _70.Params): _70.ParamsAminoMsg;
                    fromProtoMsg(message: _70.ParamsProtoMsg): _70.Params;
                    toProto(message: _70.Params): Uint8Array;
                    toProtoMsg(message: _70.Params): _70.ParamsProtoMsg;
                };
            };
        }
        namespace commitment {
            const v1: {
                MerkleRoot: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _74.MerkleRoot;
                    isSDK(o: any): o is _74.MerkleRootSDKType;
                    isAmino(o: any): o is _74.MerkleRootAmino;
                    encode(message: _74.MerkleRoot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.MerkleRoot;
                    fromJSON(object: any): _74.MerkleRoot;
                    toJSON(message: _74.MerkleRoot): unknown;
                    fromPartial(object: Partial<_74.MerkleRoot>): _74.MerkleRoot;
                    fromAmino(object: _74.MerkleRootAmino): _74.MerkleRoot;
                    toAmino(message: _74.MerkleRoot): _74.MerkleRootAmino;
                    fromAminoMsg(object: _74.MerkleRootAminoMsg): _74.MerkleRoot;
                    toAminoMsg(message: _74.MerkleRoot): _74.MerkleRootAminoMsg;
                    fromProtoMsg(message: _74.MerkleRootProtoMsg): _74.MerkleRoot;
                    toProto(message: _74.MerkleRoot): Uint8Array;
                    toProtoMsg(message: _74.MerkleRoot): _74.MerkleRootProtoMsg;
                };
                MerklePrefix: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _74.MerklePrefix;
                    isSDK(o: any): o is _74.MerklePrefixSDKType;
                    isAmino(o: any): o is _74.MerklePrefixAmino;
                    encode(message: _74.MerklePrefix, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.MerklePrefix;
                    fromJSON(object: any): _74.MerklePrefix;
                    toJSON(message: _74.MerklePrefix): unknown;
                    fromPartial(object: Partial<_74.MerklePrefix>): _74.MerklePrefix;
                    fromAmino(object: _74.MerklePrefixAmino): _74.MerklePrefix;
                    toAmino(message: _74.MerklePrefix): _74.MerklePrefixAmino;
                    fromAminoMsg(object: _74.MerklePrefixAminoMsg): _74.MerklePrefix;
                    toAminoMsg(message: _74.MerklePrefix): _74.MerklePrefixAminoMsg;
                    fromProtoMsg(message: _74.MerklePrefixProtoMsg): _74.MerklePrefix;
                    toProto(message: _74.MerklePrefix): Uint8Array;
                    toProtoMsg(message: _74.MerklePrefix): _74.MerklePrefixProtoMsg;
                };
                MerklePath: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _74.MerklePath;
                    isSDK(o: any): o is _74.MerklePathSDKType;
                    isAmino(o: any): o is _74.MerklePathAmino;
                    encode(message: _74.MerklePath, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.MerklePath;
                    fromJSON(object: any): _74.MerklePath;
                    toJSON(message: _74.MerklePath): unknown;
                    fromPartial(object: Partial<_74.MerklePath>): _74.MerklePath;
                    fromAmino(object: _74.MerklePathAmino): _74.MerklePath;
                    toAmino(message: _74.MerklePath): _74.MerklePathAmino;
                    fromAminoMsg(object: _74.MerklePathAminoMsg): _74.MerklePath;
                    toAminoMsg(message: _74.MerklePath): _74.MerklePathAminoMsg;
                    fromProtoMsg(message: _74.MerklePathProtoMsg): _74.MerklePath;
                    toProto(message: _74.MerklePath): Uint8Array;
                    toProtoMsg(message: _74.MerklePath): _74.MerklePathProtoMsg;
                };
                MerkleProof: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _74.MerkleProof;
                    isSDK(o: any): o is _74.MerkleProofSDKType;
                    isAmino(o: any): o is _74.MerkleProofAmino;
                    encode(message: _74.MerkleProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.MerkleProof;
                    fromJSON(object: any): _74.MerkleProof;
                    toJSON(message: _74.MerkleProof): unknown;
                    fromPartial(object: Partial<_74.MerkleProof>): _74.MerkleProof;
                    fromAmino(object: _74.MerkleProofAmino): _74.MerkleProof;
                    toAmino(message: _74.MerkleProof): _74.MerkleProofAmino;
                    fromAminoMsg(object: _74.MerkleProofAminoMsg): _74.MerkleProof;
                    toAminoMsg(message: _74.MerkleProof): _74.MerkleProofAminoMsg;
                    fromProtoMsg(message: _74.MerkleProofProtoMsg): _74.MerkleProof;
                    toProto(message: _74.MerkleProof): Uint8Array;
                    toProtoMsg(message: _74.MerkleProof): _74.MerkleProofProtoMsg;
                };
            };
        }
        namespace connection {
            const v1: {
                MsgClientImpl: typeof _163.MsgClientImpl;
                QueryClientImpl: typeof _159.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    connection(request: _77.QueryConnectionRequest): Promise<_77.QueryConnectionResponse>;
                    connections(request?: _77.QueryConnectionsRequest): Promise<_77.QueryConnectionsResponse>;
                    clientConnections(request: _77.QueryClientConnectionsRequest): Promise<_77.QueryClientConnectionsResponse>;
                    connectionClientState(request: _77.QueryConnectionClientStateRequest): Promise<_77.QueryConnectionClientStateResponse>;
                    connectionConsensusState(request: _77.QueryConnectionConsensusStateRequest): Promise<_77.QueryConnectionConsensusStateResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        connectionOpenInit(value: _78.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenTry(value: _78.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenAck(value: _78.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenConfirm(value: _78.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        connectionOpenInit(value: _78.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _78.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _78.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _78.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenConfirm;
                        };
                    };
                    toJSON: {
                        connectionOpenInit(value: _78.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenTry(value: _78.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenAck(value: _78.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenConfirm(value: _78.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        connectionOpenInit(value: any): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: any): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: any): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenConfirm;
                        };
                    };
                    fromPartial: {
                        connectionOpenInit(value: _78.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _78.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _78.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _78.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _78.MsgConnectionOpenConfirm;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.connection.v1.MsgConnectionOpenInit": {
                        aminoType: string;
                        toAmino: (message: _78.MsgConnectionOpenInit) => _78.MsgConnectionOpenInitAmino;
                        fromAmino: (object: _78.MsgConnectionOpenInitAmino) => _78.MsgConnectionOpenInit;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenTry": {
                        aminoType: string;
                        toAmino: (message: _78.MsgConnectionOpenTry) => _78.MsgConnectionOpenTryAmino;
                        fromAmino: (object: _78.MsgConnectionOpenTryAmino) => _78.MsgConnectionOpenTry;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenAck": {
                        aminoType: string;
                        toAmino: (message: _78.MsgConnectionOpenAck) => _78.MsgConnectionOpenAckAmino;
                        fromAmino: (object: _78.MsgConnectionOpenAckAmino) => _78.MsgConnectionOpenAck;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _78.MsgConnectionOpenConfirm) => _78.MsgConnectionOpenConfirmAmino;
                        fromAmino: (object: _78.MsgConnectionOpenConfirmAmino) => _78.MsgConnectionOpenConfirm;
                    };
                };
                MsgConnectionOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenInit;
                    isSDK(o: any): o is _78.MsgConnectionOpenInitSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenInitAmino;
                    encode(message: _78.MsgConnectionOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenInit;
                    fromJSON(object: any): _78.MsgConnectionOpenInit;
                    toJSON(message: _78.MsgConnectionOpenInit): unknown;
                    fromPartial(object: Partial<_78.MsgConnectionOpenInit>): _78.MsgConnectionOpenInit;
                    fromAmino(object: _78.MsgConnectionOpenInitAmino): _78.MsgConnectionOpenInit;
                    toAmino(message: _78.MsgConnectionOpenInit): _78.MsgConnectionOpenInitAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenInitAminoMsg): _78.MsgConnectionOpenInit;
                    toAminoMsg(message: _78.MsgConnectionOpenInit): _78.MsgConnectionOpenInitAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenInitProtoMsg): _78.MsgConnectionOpenInit;
                    toProto(message: _78.MsgConnectionOpenInit): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenInit): _78.MsgConnectionOpenInitProtoMsg;
                };
                MsgConnectionOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenInitResponse;
                    isSDK(o: any): o is _78.MsgConnectionOpenInitResponseSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenInitResponseAmino;
                    encode(_: _78.MsgConnectionOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenInitResponse;
                    fromJSON(_: any): _78.MsgConnectionOpenInitResponse;
                    toJSON(_: _78.MsgConnectionOpenInitResponse): unknown;
                    fromPartial(_: Partial<_78.MsgConnectionOpenInitResponse>): _78.MsgConnectionOpenInitResponse;
                    fromAmino(_: _78.MsgConnectionOpenInitResponseAmino): _78.MsgConnectionOpenInitResponse;
                    toAmino(_: _78.MsgConnectionOpenInitResponse): _78.MsgConnectionOpenInitResponseAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenInitResponseAminoMsg): _78.MsgConnectionOpenInitResponse;
                    toAminoMsg(message: _78.MsgConnectionOpenInitResponse): _78.MsgConnectionOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenInitResponseProtoMsg): _78.MsgConnectionOpenInitResponse;
                    toProto(message: _78.MsgConnectionOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenInitResponse): _78.MsgConnectionOpenInitResponseProtoMsg;
                };
                MsgConnectionOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenTry;
                    isSDK(o: any): o is _78.MsgConnectionOpenTrySDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenTryAmino;
                    encode(message: _78.MsgConnectionOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenTry;
                    fromJSON(object: any): _78.MsgConnectionOpenTry;
                    toJSON(message: _78.MsgConnectionOpenTry): unknown;
                    fromPartial(object: Partial<_78.MsgConnectionOpenTry>): _78.MsgConnectionOpenTry;
                    fromAmino(object: _78.MsgConnectionOpenTryAmino): _78.MsgConnectionOpenTry;
                    toAmino(message: _78.MsgConnectionOpenTry): _78.MsgConnectionOpenTryAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenTryAminoMsg): _78.MsgConnectionOpenTry;
                    toAminoMsg(message: _78.MsgConnectionOpenTry): _78.MsgConnectionOpenTryAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenTryProtoMsg): _78.MsgConnectionOpenTry;
                    toProto(message: _78.MsgConnectionOpenTry): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenTry): _78.MsgConnectionOpenTryProtoMsg;
                };
                MsgConnectionOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenTryResponse;
                    isSDK(o: any): o is _78.MsgConnectionOpenTryResponseSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenTryResponseAmino;
                    encode(_: _78.MsgConnectionOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenTryResponse;
                    fromJSON(_: any): _78.MsgConnectionOpenTryResponse;
                    toJSON(_: _78.MsgConnectionOpenTryResponse): unknown;
                    fromPartial(_: Partial<_78.MsgConnectionOpenTryResponse>): _78.MsgConnectionOpenTryResponse;
                    fromAmino(_: _78.MsgConnectionOpenTryResponseAmino): _78.MsgConnectionOpenTryResponse;
                    toAmino(_: _78.MsgConnectionOpenTryResponse): _78.MsgConnectionOpenTryResponseAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenTryResponseAminoMsg): _78.MsgConnectionOpenTryResponse;
                    toAminoMsg(message: _78.MsgConnectionOpenTryResponse): _78.MsgConnectionOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenTryResponseProtoMsg): _78.MsgConnectionOpenTryResponse;
                    toProto(message: _78.MsgConnectionOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenTryResponse): _78.MsgConnectionOpenTryResponseProtoMsg;
                };
                MsgConnectionOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenAck;
                    isSDK(o: any): o is _78.MsgConnectionOpenAckSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenAckAmino;
                    encode(message: _78.MsgConnectionOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenAck;
                    fromJSON(object: any): _78.MsgConnectionOpenAck;
                    toJSON(message: _78.MsgConnectionOpenAck): unknown;
                    fromPartial(object: Partial<_78.MsgConnectionOpenAck>): _78.MsgConnectionOpenAck;
                    fromAmino(object: _78.MsgConnectionOpenAckAmino): _78.MsgConnectionOpenAck;
                    toAmino(message: _78.MsgConnectionOpenAck): _78.MsgConnectionOpenAckAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenAckAminoMsg): _78.MsgConnectionOpenAck;
                    toAminoMsg(message: _78.MsgConnectionOpenAck): _78.MsgConnectionOpenAckAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenAckProtoMsg): _78.MsgConnectionOpenAck;
                    toProto(message: _78.MsgConnectionOpenAck): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenAck): _78.MsgConnectionOpenAckProtoMsg;
                };
                MsgConnectionOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenAckResponse;
                    isSDK(o: any): o is _78.MsgConnectionOpenAckResponseSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenAckResponseAmino;
                    encode(_: _78.MsgConnectionOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenAckResponse;
                    fromJSON(_: any): _78.MsgConnectionOpenAckResponse;
                    toJSON(_: _78.MsgConnectionOpenAckResponse): unknown;
                    fromPartial(_: Partial<_78.MsgConnectionOpenAckResponse>): _78.MsgConnectionOpenAckResponse;
                    fromAmino(_: _78.MsgConnectionOpenAckResponseAmino): _78.MsgConnectionOpenAckResponse;
                    toAmino(_: _78.MsgConnectionOpenAckResponse): _78.MsgConnectionOpenAckResponseAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenAckResponseAminoMsg): _78.MsgConnectionOpenAckResponse;
                    toAminoMsg(message: _78.MsgConnectionOpenAckResponse): _78.MsgConnectionOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenAckResponseProtoMsg): _78.MsgConnectionOpenAckResponse;
                    toProto(message: _78.MsgConnectionOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenAckResponse): _78.MsgConnectionOpenAckResponseProtoMsg;
                };
                MsgConnectionOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenConfirm;
                    isSDK(o: any): o is _78.MsgConnectionOpenConfirmSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenConfirmAmino;
                    encode(message: _78.MsgConnectionOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenConfirm;
                    fromJSON(object: any): _78.MsgConnectionOpenConfirm;
                    toJSON(message: _78.MsgConnectionOpenConfirm): unknown;
                    fromPartial(object: Partial<_78.MsgConnectionOpenConfirm>): _78.MsgConnectionOpenConfirm;
                    fromAmino(object: _78.MsgConnectionOpenConfirmAmino): _78.MsgConnectionOpenConfirm;
                    toAmino(message: _78.MsgConnectionOpenConfirm): _78.MsgConnectionOpenConfirmAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenConfirmAminoMsg): _78.MsgConnectionOpenConfirm;
                    toAminoMsg(message: _78.MsgConnectionOpenConfirm): _78.MsgConnectionOpenConfirmAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenConfirmProtoMsg): _78.MsgConnectionOpenConfirm;
                    toProto(message: _78.MsgConnectionOpenConfirm): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenConfirm): _78.MsgConnectionOpenConfirmProtoMsg;
                };
                MsgConnectionOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.MsgConnectionOpenConfirmResponse;
                    isSDK(o: any): o is _78.MsgConnectionOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _78.MsgConnectionOpenConfirmResponseAmino;
                    encode(_: _78.MsgConnectionOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.MsgConnectionOpenConfirmResponse;
                    fromJSON(_: any): _78.MsgConnectionOpenConfirmResponse;
                    toJSON(_: _78.MsgConnectionOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_78.MsgConnectionOpenConfirmResponse>): _78.MsgConnectionOpenConfirmResponse;
                    fromAmino(_: _78.MsgConnectionOpenConfirmResponseAmino): _78.MsgConnectionOpenConfirmResponse;
                    toAmino(_: _78.MsgConnectionOpenConfirmResponse): _78.MsgConnectionOpenConfirmResponseAmino;
                    fromAminoMsg(object: _78.MsgConnectionOpenConfirmResponseAminoMsg): _78.MsgConnectionOpenConfirmResponse;
                    toAminoMsg(message: _78.MsgConnectionOpenConfirmResponse): _78.MsgConnectionOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _78.MsgConnectionOpenConfirmResponseProtoMsg): _78.MsgConnectionOpenConfirmResponse;
                    toProto(message: _78.MsgConnectionOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _78.MsgConnectionOpenConfirmResponse): _78.MsgConnectionOpenConfirmResponseProtoMsg;
                };
                QueryConnectionRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionRequest;
                    isSDK(o: any): o is _77.QueryConnectionRequestSDKType;
                    isAmino(o: any): o is _77.QueryConnectionRequestAmino;
                    encode(message: _77.QueryConnectionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionRequest;
                    fromJSON(object: any): _77.QueryConnectionRequest;
                    toJSON(message: _77.QueryConnectionRequest): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionRequest>): _77.QueryConnectionRequest;
                    fromAmino(object: _77.QueryConnectionRequestAmino): _77.QueryConnectionRequest;
                    toAmino(message: _77.QueryConnectionRequest): _77.QueryConnectionRequestAmino;
                    fromAminoMsg(object: _77.QueryConnectionRequestAminoMsg): _77.QueryConnectionRequest;
                    toAminoMsg(message: _77.QueryConnectionRequest): _77.QueryConnectionRequestAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionRequestProtoMsg): _77.QueryConnectionRequest;
                    toProto(message: _77.QueryConnectionRequest): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionRequest): _77.QueryConnectionRequestProtoMsg;
                };
                QueryConnectionResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionResponse;
                    isSDK(o: any): o is _77.QueryConnectionResponseSDKType;
                    isAmino(o: any): o is _77.QueryConnectionResponseAmino;
                    encode(message: _77.QueryConnectionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionResponse;
                    fromJSON(object: any): _77.QueryConnectionResponse;
                    toJSON(message: _77.QueryConnectionResponse): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionResponse>): _77.QueryConnectionResponse;
                    fromAmino(object: _77.QueryConnectionResponseAmino): _77.QueryConnectionResponse;
                    toAmino(message: _77.QueryConnectionResponse): _77.QueryConnectionResponseAmino;
                    fromAminoMsg(object: _77.QueryConnectionResponseAminoMsg): _77.QueryConnectionResponse;
                    toAminoMsg(message: _77.QueryConnectionResponse): _77.QueryConnectionResponseAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionResponseProtoMsg): _77.QueryConnectionResponse;
                    toProto(message: _77.QueryConnectionResponse): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionResponse): _77.QueryConnectionResponseProtoMsg;
                };
                QueryConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionsRequest;
                    isSDK(o: any): o is _77.QueryConnectionsRequestSDKType;
                    isAmino(o: any): o is _77.QueryConnectionsRequestAmino;
                    encode(message: _77.QueryConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionsRequest;
                    fromJSON(object: any): _77.QueryConnectionsRequest;
                    toJSON(message: _77.QueryConnectionsRequest): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionsRequest>): _77.QueryConnectionsRequest;
                    fromAmino(object: _77.QueryConnectionsRequestAmino): _77.QueryConnectionsRequest;
                    toAmino(message: _77.QueryConnectionsRequest): _77.QueryConnectionsRequestAmino;
                    fromAminoMsg(object: _77.QueryConnectionsRequestAminoMsg): _77.QueryConnectionsRequest;
                    toAminoMsg(message: _77.QueryConnectionsRequest): _77.QueryConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionsRequestProtoMsg): _77.QueryConnectionsRequest;
                    toProto(message: _77.QueryConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionsRequest): _77.QueryConnectionsRequestProtoMsg;
                };
                QueryConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionsResponse;
                    isSDK(o: any): o is _77.QueryConnectionsResponseSDKType;
                    isAmino(o: any): o is _77.QueryConnectionsResponseAmino;
                    encode(message: _77.QueryConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionsResponse;
                    fromJSON(object: any): _77.QueryConnectionsResponse;
                    toJSON(message: _77.QueryConnectionsResponse): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionsResponse>): _77.QueryConnectionsResponse;
                    fromAmino(object: _77.QueryConnectionsResponseAmino): _77.QueryConnectionsResponse;
                    toAmino(message: _77.QueryConnectionsResponse): _77.QueryConnectionsResponseAmino;
                    fromAminoMsg(object: _77.QueryConnectionsResponseAminoMsg): _77.QueryConnectionsResponse;
                    toAminoMsg(message: _77.QueryConnectionsResponse): _77.QueryConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionsResponseProtoMsg): _77.QueryConnectionsResponse;
                    toProto(message: _77.QueryConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionsResponse): _77.QueryConnectionsResponseProtoMsg;
                };
                QueryClientConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryClientConnectionsRequest;
                    isSDK(o: any): o is _77.QueryClientConnectionsRequestSDKType;
                    isAmino(o: any): o is _77.QueryClientConnectionsRequestAmino;
                    encode(message: _77.QueryClientConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryClientConnectionsRequest;
                    fromJSON(object: any): _77.QueryClientConnectionsRequest;
                    toJSON(message: _77.QueryClientConnectionsRequest): unknown;
                    fromPartial(object: Partial<_77.QueryClientConnectionsRequest>): _77.QueryClientConnectionsRequest;
                    fromAmino(object: _77.QueryClientConnectionsRequestAmino): _77.QueryClientConnectionsRequest;
                    toAmino(message: _77.QueryClientConnectionsRequest): _77.QueryClientConnectionsRequestAmino;
                    fromAminoMsg(object: _77.QueryClientConnectionsRequestAminoMsg): _77.QueryClientConnectionsRequest;
                    toAminoMsg(message: _77.QueryClientConnectionsRequest): _77.QueryClientConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _77.QueryClientConnectionsRequestProtoMsg): _77.QueryClientConnectionsRequest;
                    toProto(message: _77.QueryClientConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _77.QueryClientConnectionsRequest): _77.QueryClientConnectionsRequestProtoMsg;
                };
                QueryClientConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryClientConnectionsResponse;
                    isSDK(o: any): o is _77.QueryClientConnectionsResponseSDKType;
                    isAmino(o: any): o is _77.QueryClientConnectionsResponseAmino;
                    encode(message: _77.QueryClientConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryClientConnectionsResponse;
                    fromJSON(object: any): _77.QueryClientConnectionsResponse;
                    toJSON(message: _77.QueryClientConnectionsResponse): unknown;
                    fromPartial(object: Partial<_77.QueryClientConnectionsResponse>): _77.QueryClientConnectionsResponse;
                    fromAmino(object: _77.QueryClientConnectionsResponseAmino): _77.QueryClientConnectionsResponse;
                    toAmino(message: _77.QueryClientConnectionsResponse): _77.QueryClientConnectionsResponseAmino;
                    fromAminoMsg(object: _77.QueryClientConnectionsResponseAminoMsg): _77.QueryClientConnectionsResponse;
                    toAminoMsg(message: _77.QueryClientConnectionsResponse): _77.QueryClientConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _77.QueryClientConnectionsResponseProtoMsg): _77.QueryClientConnectionsResponse;
                    toProto(message: _77.QueryClientConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _77.QueryClientConnectionsResponse): _77.QueryClientConnectionsResponseProtoMsg;
                };
                QueryConnectionClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionClientStateRequest;
                    isSDK(o: any): o is _77.QueryConnectionClientStateRequestSDKType;
                    isAmino(o: any): o is _77.QueryConnectionClientStateRequestAmino;
                    encode(message: _77.QueryConnectionClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionClientStateRequest;
                    fromJSON(object: any): _77.QueryConnectionClientStateRequest;
                    toJSON(message: _77.QueryConnectionClientStateRequest): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionClientStateRequest>): _77.QueryConnectionClientStateRequest;
                    fromAmino(object: _77.QueryConnectionClientStateRequestAmino): _77.QueryConnectionClientStateRequest;
                    toAmino(message: _77.QueryConnectionClientStateRequest): _77.QueryConnectionClientStateRequestAmino;
                    fromAminoMsg(object: _77.QueryConnectionClientStateRequestAminoMsg): _77.QueryConnectionClientStateRequest;
                    toAminoMsg(message: _77.QueryConnectionClientStateRequest): _77.QueryConnectionClientStateRequestAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionClientStateRequestProtoMsg): _77.QueryConnectionClientStateRequest;
                    toProto(message: _77.QueryConnectionClientStateRequest): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionClientStateRequest): _77.QueryConnectionClientStateRequestProtoMsg;
                };
                QueryConnectionClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionClientStateResponse;
                    isSDK(o: any): o is _77.QueryConnectionClientStateResponseSDKType;
                    isAmino(o: any): o is _77.QueryConnectionClientStateResponseAmino;
                    encode(message: _77.QueryConnectionClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionClientStateResponse;
                    fromJSON(object: any): _77.QueryConnectionClientStateResponse;
                    toJSON(message: _77.QueryConnectionClientStateResponse): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionClientStateResponse>): _77.QueryConnectionClientStateResponse;
                    fromAmino(object: _77.QueryConnectionClientStateResponseAmino): _77.QueryConnectionClientStateResponse;
                    toAmino(message: _77.QueryConnectionClientStateResponse): _77.QueryConnectionClientStateResponseAmino;
                    fromAminoMsg(object: _77.QueryConnectionClientStateResponseAminoMsg): _77.QueryConnectionClientStateResponse;
                    toAminoMsg(message: _77.QueryConnectionClientStateResponse): _77.QueryConnectionClientStateResponseAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionClientStateResponseProtoMsg): _77.QueryConnectionClientStateResponse;
                    toProto(message: _77.QueryConnectionClientStateResponse): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionClientStateResponse): _77.QueryConnectionClientStateResponseProtoMsg;
                };
                QueryConnectionConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionConsensusStateRequest;
                    isSDK(o: any): o is _77.QueryConnectionConsensusStateRequestSDKType;
                    isAmino(o: any): o is _77.QueryConnectionConsensusStateRequestAmino;
                    encode(message: _77.QueryConnectionConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionConsensusStateRequest;
                    fromJSON(object: any): _77.QueryConnectionConsensusStateRequest;
                    toJSON(message: _77.QueryConnectionConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionConsensusStateRequest>): _77.QueryConnectionConsensusStateRequest;
                    fromAmino(object: _77.QueryConnectionConsensusStateRequestAmino): _77.QueryConnectionConsensusStateRequest;
                    toAmino(message: _77.QueryConnectionConsensusStateRequest): _77.QueryConnectionConsensusStateRequestAmino;
                    fromAminoMsg(object: _77.QueryConnectionConsensusStateRequestAminoMsg): _77.QueryConnectionConsensusStateRequest;
                    toAminoMsg(message: _77.QueryConnectionConsensusStateRequest): _77.QueryConnectionConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionConsensusStateRequestProtoMsg): _77.QueryConnectionConsensusStateRequest;
                    toProto(message: _77.QueryConnectionConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionConsensusStateRequest): _77.QueryConnectionConsensusStateRequestProtoMsg;
                };
                QueryConnectionConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.QueryConnectionConsensusStateResponse;
                    isSDK(o: any): o is _77.QueryConnectionConsensusStateResponseSDKType;
                    isAmino(o: any): o is _77.QueryConnectionConsensusStateResponseAmino;
                    encode(message: _77.QueryConnectionConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.QueryConnectionConsensusStateResponse;
                    fromJSON(object: any): _77.QueryConnectionConsensusStateResponse;
                    toJSON(message: _77.QueryConnectionConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_77.QueryConnectionConsensusStateResponse>): _77.QueryConnectionConsensusStateResponse;
                    fromAmino(object: _77.QueryConnectionConsensusStateResponseAmino): _77.QueryConnectionConsensusStateResponse;
                    toAmino(message: _77.QueryConnectionConsensusStateResponse): _77.QueryConnectionConsensusStateResponseAmino;
                    fromAminoMsg(object: _77.QueryConnectionConsensusStateResponseAminoMsg): _77.QueryConnectionConsensusStateResponse;
                    toAminoMsg(message: _77.QueryConnectionConsensusStateResponse): _77.QueryConnectionConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _77.QueryConnectionConsensusStateResponseProtoMsg): _77.QueryConnectionConsensusStateResponse;
                    toProto(message: _77.QueryConnectionConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _77.QueryConnectionConsensusStateResponse): _77.QueryConnectionConsensusStateResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.GenesisState;
                    isSDK(o: any): o is _76.GenesisStateSDKType;
                    isAmino(o: any): o is _76.GenesisStateAmino;
                    encode(message: _76.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.GenesisState;
                    fromJSON(object: any): _76.GenesisState;
                    toJSON(message: _76.GenesisState): unknown;
                    fromPartial(object: Partial<_76.GenesisState>): _76.GenesisState;
                    fromAmino(object: _76.GenesisStateAmino): _76.GenesisState;
                    toAmino(message: _76.GenesisState): _76.GenesisStateAmino;
                    fromAminoMsg(object: _76.GenesisStateAminoMsg): _76.GenesisState;
                    toAminoMsg(message: _76.GenesisState): _76.GenesisStateAminoMsg;
                    fromProtoMsg(message: _76.GenesisStateProtoMsg): _76.GenesisState;
                    toProto(message: _76.GenesisState): Uint8Array;
                    toProtoMsg(message: _76.GenesisState): _76.GenesisStateProtoMsg;
                };
                stateFromJSON(object: any): _75.State;
                stateToJSON(object: _75.State): string;
                State: typeof _75.State;
                StateSDKType: typeof _75.State;
                StateAmino: typeof _75.State;
                ConnectionEnd: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.ConnectionEnd;
                    isSDK(o: any): o is _75.ConnectionEndSDKType;
                    isAmino(o: any): o is _75.ConnectionEndAmino;
                    encode(message: _75.ConnectionEnd, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.ConnectionEnd;
                    fromJSON(object: any): _75.ConnectionEnd;
                    toJSON(message: _75.ConnectionEnd): unknown;
                    fromPartial(object: Partial<_75.ConnectionEnd>): _75.ConnectionEnd;
                    fromAmino(object: _75.ConnectionEndAmino): _75.ConnectionEnd;
                    toAmino(message: _75.ConnectionEnd): _75.ConnectionEndAmino;
                    fromAminoMsg(object: _75.ConnectionEndAminoMsg): _75.ConnectionEnd;
                    toAminoMsg(message: _75.ConnectionEnd): _75.ConnectionEndAminoMsg;
                    fromProtoMsg(message: _75.ConnectionEndProtoMsg): _75.ConnectionEnd;
                    toProto(message: _75.ConnectionEnd): Uint8Array;
                    toProtoMsg(message: _75.ConnectionEnd): _75.ConnectionEndProtoMsg;
                };
                IdentifiedConnection: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.IdentifiedConnection;
                    isSDK(o: any): o is _75.IdentifiedConnectionSDKType;
                    isAmino(o: any): o is _75.IdentifiedConnectionAmino;
                    encode(message: _75.IdentifiedConnection, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.IdentifiedConnection;
                    fromJSON(object: any): _75.IdentifiedConnection;
                    toJSON(message: _75.IdentifiedConnection): unknown;
                    fromPartial(object: Partial<_75.IdentifiedConnection>): _75.IdentifiedConnection;
                    fromAmino(object: _75.IdentifiedConnectionAmino): _75.IdentifiedConnection;
                    toAmino(message: _75.IdentifiedConnection): _75.IdentifiedConnectionAmino;
                    fromAminoMsg(object: _75.IdentifiedConnectionAminoMsg): _75.IdentifiedConnection;
                    toAminoMsg(message: _75.IdentifiedConnection): _75.IdentifiedConnectionAminoMsg;
                    fromProtoMsg(message: _75.IdentifiedConnectionProtoMsg): _75.IdentifiedConnection;
                    toProto(message: _75.IdentifiedConnection): Uint8Array;
                    toProtoMsg(message: _75.IdentifiedConnection): _75.IdentifiedConnectionProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.Counterparty;
                    isSDK(o: any): o is _75.CounterpartySDKType;
                    isAmino(o: any): o is _75.CounterpartyAmino;
                    encode(message: _75.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.Counterparty;
                    fromJSON(object: any): _75.Counterparty;
                    toJSON(message: _75.Counterparty): unknown;
                    fromPartial(object: Partial<_75.Counterparty>): _75.Counterparty;
                    fromAmino(object: _75.CounterpartyAmino): _75.Counterparty;
                    toAmino(message: _75.Counterparty): _75.CounterpartyAmino;
                    fromAminoMsg(object: _75.CounterpartyAminoMsg): _75.Counterparty;
                    toAminoMsg(message: _75.Counterparty): _75.CounterpartyAminoMsg;
                    fromProtoMsg(message: _75.CounterpartyProtoMsg): _75.Counterparty;
                    toProto(message: _75.Counterparty): Uint8Array;
                    toProtoMsg(message: _75.Counterparty): _75.CounterpartyProtoMsg;
                };
                ClientPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.ClientPaths;
                    isSDK(o: any): o is _75.ClientPathsSDKType;
                    isAmino(o: any): o is _75.ClientPathsAmino;
                    encode(message: _75.ClientPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.ClientPaths;
                    fromJSON(object: any): _75.ClientPaths;
                    toJSON(message: _75.ClientPaths): unknown;
                    fromPartial(object: Partial<_75.ClientPaths>): _75.ClientPaths;
                    fromAmino(object: _75.ClientPathsAmino): _75.ClientPaths;
                    toAmino(message: _75.ClientPaths): _75.ClientPathsAmino;
                    fromAminoMsg(object: _75.ClientPathsAminoMsg): _75.ClientPaths;
                    toAminoMsg(message: _75.ClientPaths): _75.ClientPathsAminoMsg;
                    fromProtoMsg(message: _75.ClientPathsProtoMsg): _75.ClientPaths;
                    toProto(message: _75.ClientPaths): Uint8Array;
                    toProtoMsg(message: _75.ClientPaths): _75.ClientPathsProtoMsg;
                };
                ConnectionPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.ConnectionPaths;
                    isSDK(o: any): o is _75.ConnectionPathsSDKType;
                    isAmino(o: any): o is _75.ConnectionPathsAmino;
                    encode(message: _75.ConnectionPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.ConnectionPaths;
                    fromJSON(object: any): _75.ConnectionPaths;
                    toJSON(message: _75.ConnectionPaths): unknown;
                    fromPartial(object: Partial<_75.ConnectionPaths>): _75.ConnectionPaths;
                    fromAmino(object: _75.ConnectionPathsAmino): _75.ConnectionPaths;
                    toAmino(message: _75.ConnectionPaths): _75.ConnectionPathsAmino;
                    fromAminoMsg(object: _75.ConnectionPathsAminoMsg): _75.ConnectionPaths;
                    toAminoMsg(message: _75.ConnectionPaths): _75.ConnectionPathsAminoMsg;
                    fromProtoMsg(message: _75.ConnectionPathsProtoMsg): _75.ConnectionPaths;
                    toProto(message: _75.ConnectionPaths): Uint8Array;
                    toProtoMsg(message: _75.ConnectionPaths): _75.ConnectionPathsProtoMsg;
                };
                Version: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.Version;
                    isSDK(o: any): o is _75.VersionSDKType;
                    isAmino(o: any): o is _75.VersionAmino;
                    encode(message: _75.Version, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.Version;
                    fromJSON(object: any): _75.Version;
                    toJSON(message: _75.Version): unknown;
                    fromPartial(object: Partial<_75.Version>): _75.Version;
                    fromAmino(object: _75.VersionAmino): _75.Version;
                    toAmino(message: _75.Version): _75.VersionAmino;
                    fromAminoMsg(object: _75.VersionAminoMsg): _75.Version;
                    toAminoMsg(message: _75.Version): _75.VersionAminoMsg;
                    fromProtoMsg(message: _75.VersionProtoMsg): _75.Version;
                    toProto(message: _75.Version): Uint8Array;
                    toProtoMsg(message: _75.Version): _75.VersionProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.Params;
                    isSDK(o: any): o is _75.ParamsSDKType;
                    isAmino(o: any): o is _75.ParamsAmino;
                    encode(message: _75.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.Params;
                    fromJSON(object: any): _75.Params;
                    toJSON(message: _75.Params): unknown;
                    fromPartial(object: Partial<_75.Params>): _75.Params;
                    fromAmino(object: _75.ParamsAmino): _75.Params;
                    toAmino(message: _75.Params): _75.ParamsAmino;
                    fromAminoMsg(object: _75.ParamsAminoMsg): _75.Params;
                    toAminoMsg(message: _75.Params): _75.ParamsAminoMsg;
                    fromProtoMsg(message: _75.ParamsProtoMsg): _75.Params;
                    toProto(message: _75.Params): Uint8Array;
                    toProtoMsg(message: _75.Params): _75.ParamsProtoMsg;
                };
            };
        }
    }
    namespace lightclients {
        namespace localhost {
            const v1: {
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.ClientState;
                    isSDK(o: any): o is _79.ClientStateSDKType;
                    isAmino(o: any): o is _79.ClientStateAmino;
                    encode(message: _79.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.ClientState;
                    fromJSON(object: any): _79.ClientState;
                    toJSON(message: _79.ClientState): unknown;
                    fromPartial(object: Partial<_79.ClientState>): _79.ClientState;
                    fromAmino(object: _79.ClientStateAmino): _79.ClientState;
                    toAmino(message: _79.ClientState): _79.ClientStateAmino;
                    fromAminoMsg(object: _79.ClientStateAminoMsg): _79.ClientState;
                    toAminoMsg(message: _79.ClientState): _79.ClientStateAminoMsg;
                    fromProtoMsg(message: _79.ClientStateProtoMsg): _79.ClientState;
                    toProto(message: _79.ClientState): Uint8Array;
                    toProtoMsg(message: _79.ClientState): _79.ClientStateProtoMsg;
                };
            };
        }
        namespace solomachine {
            const v1: {
                dataTypeFromJSON(object: any): _80.DataType;
                dataTypeToJSON(object: _80.DataType): string;
                DataType: typeof _80.DataType;
                DataTypeSDKType: typeof _80.DataType;
                DataTypeAmino: typeof _80.DataType;
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ClientState;
                    isSDK(o: any): o is _80.ClientStateSDKType;
                    isAmino(o: any): o is _80.ClientStateAmino;
                    encode(message: _80.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ClientState;
                    fromJSON(object: any): _80.ClientState;
                    toJSON(message: _80.ClientState): unknown;
                    fromPartial(object: Partial<_80.ClientState>): _80.ClientState;
                    fromAmino(object: _80.ClientStateAmino): _80.ClientState;
                    toAmino(message: _80.ClientState): _80.ClientStateAmino;
                    fromAminoMsg(object: _80.ClientStateAminoMsg): _80.ClientState;
                    toAminoMsg(message: _80.ClientState): _80.ClientStateAminoMsg;
                    fromProtoMsg(message: _80.ClientStateProtoMsg): _80.ClientState;
                    toProto(message: _80.ClientState): Uint8Array;
                    toProtoMsg(message: _80.ClientState): _80.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ConsensusState;
                    isSDK(o: any): o is _80.ConsensusStateSDKType;
                    isAmino(o: any): o is _80.ConsensusStateAmino;
                    encode(message: _80.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ConsensusState;
                    fromJSON(object: any): _80.ConsensusState;
                    toJSON(message: _80.ConsensusState): unknown;
                    fromPartial(object: Partial<_80.ConsensusState>): _80.ConsensusState;
                    fromAmino(object: _80.ConsensusStateAmino): _80.ConsensusState;
                    toAmino(message: _80.ConsensusState): _80.ConsensusStateAmino;
                    fromAminoMsg(object: _80.ConsensusStateAminoMsg): _80.ConsensusState;
                    toAminoMsg(message: _80.ConsensusState): _80.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _80.ConsensusStateProtoMsg): _80.ConsensusState;
                    toProto(message: _80.ConsensusState): Uint8Array;
                    toProtoMsg(message: _80.ConsensusState): _80.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.Header;
                    isSDK(o: any): o is _80.HeaderSDKType;
                    isAmino(o: any): o is _80.HeaderAmino;
                    encode(message: _80.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.Header;
                    fromJSON(object: any): _80.Header;
                    toJSON(message: _80.Header): unknown;
                    fromPartial(object: Partial<_80.Header>): _80.Header;
                    fromAmino(object: _80.HeaderAmino): _80.Header;
                    toAmino(message: _80.Header): _80.HeaderAmino;
                    fromAminoMsg(object: _80.HeaderAminoMsg): _80.Header;
                    toAminoMsg(message: _80.Header): _80.HeaderAminoMsg;
                    fromProtoMsg(message: _80.HeaderProtoMsg): _80.Header;
                    toProto(message: _80.Header): Uint8Array;
                    toProtoMsg(message: _80.Header): _80.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.Misbehaviour;
                    isSDK(o: any): o is _80.MisbehaviourSDKType;
                    isAmino(o: any): o is _80.MisbehaviourAmino;
                    encode(message: _80.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.Misbehaviour;
                    fromJSON(object: any): _80.Misbehaviour;
                    toJSON(message: _80.Misbehaviour): unknown;
                    fromPartial(object: Partial<_80.Misbehaviour>): _80.Misbehaviour;
                    fromAmino(object: _80.MisbehaviourAmino): _80.Misbehaviour;
                    toAmino(message: _80.Misbehaviour): _80.MisbehaviourAmino;
                    fromAminoMsg(object: _80.MisbehaviourAminoMsg): _80.Misbehaviour;
                    toAminoMsg(message: _80.Misbehaviour): _80.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _80.MisbehaviourProtoMsg): _80.Misbehaviour;
                    toProto(message: _80.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _80.Misbehaviour): _80.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.SignatureAndData;
                    isSDK(o: any): o is _80.SignatureAndDataSDKType;
                    isAmino(o: any): o is _80.SignatureAndDataAmino;
                    encode(message: _80.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.SignatureAndData;
                    fromJSON(object: any): _80.SignatureAndData;
                    toJSON(message: _80.SignatureAndData): unknown;
                    fromPartial(object: Partial<_80.SignatureAndData>): _80.SignatureAndData;
                    fromAmino(object: _80.SignatureAndDataAmino): _80.SignatureAndData;
                    toAmino(message: _80.SignatureAndData): _80.SignatureAndDataAmino;
                    fromAminoMsg(object: _80.SignatureAndDataAminoMsg): _80.SignatureAndData;
                    toAminoMsg(message: _80.SignatureAndData): _80.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _80.SignatureAndDataProtoMsg): _80.SignatureAndData;
                    toProto(message: _80.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _80.SignatureAndData): _80.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.TimestampedSignatureData;
                    isSDK(o: any): o is _80.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _80.TimestampedSignatureDataAmino;
                    encode(message: _80.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.TimestampedSignatureData;
                    fromJSON(object: any): _80.TimestampedSignatureData;
                    toJSON(message: _80.TimestampedSignatureData): unknown;
                    fromPartial(object: Partial<_80.TimestampedSignatureData>): _80.TimestampedSignatureData;
                    fromAmino(object: _80.TimestampedSignatureDataAmino): _80.TimestampedSignatureData;
                    toAmino(message: _80.TimestampedSignatureData): _80.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _80.TimestampedSignatureDataAminoMsg): _80.TimestampedSignatureData;
                    toAminoMsg(message: _80.TimestampedSignatureData): _80.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _80.TimestampedSignatureDataProtoMsg): _80.TimestampedSignatureData;
                    toProto(message: _80.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _80.TimestampedSignatureData): _80.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.SignBytes;
                    isSDK(o: any): o is _80.SignBytesSDKType;
                    isAmino(o: any): o is _80.SignBytesAmino;
                    encode(message: _80.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.SignBytes;
                    fromJSON(object: any): _80.SignBytes;
                    toJSON(message: _80.SignBytes): unknown;
                    fromPartial(object: Partial<_80.SignBytes>): _80.SignBytes;
                    fromAmino(object: _80.SignBytesAmino): _80.SignBytes;
                    toAmino(message: _80.SignBytes): _80.SignBytesAmino;
                    fromAminoMsg(object: _80.SignBytesAminoMsg): _80.SignBytes;
                    toAminoMsg(message: _80.SignBytes): _80.SignBytesAminoMsg;
                    fromProtoMsg(message: _80.SignBytesProtoMsg): _80.SignBytes;
                    toProto(message: _80.SignBytes): Uint8Array;
                    toProtoMsg(message: _80.SignBytes): _80.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.HeaderData;
                    isSDK(o: any): o is _80.HeaderDataSDKType;
                    isAmino(o: any): o is _80.HeaderDataAmino;
                    encode(message: _80.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.HeaderData;
                    fromJSON(object: any): _80.HeaderData;
                    toJSON(message: _80.HeaderData): unknown;
                    fromPartial(object: Partial<_80.HeaderData>): _80.HeaderData;
                    fromAmino(object: _80.HeaderDataAmino): _80.HeaderData;
                    toAmino(message: _80.HeaderData): _80.HeaderDataAmino;
                    fromAminoMsg(object: _80.HeaderDataAminoMsg): _80.HeaderData;
                    toAminoMsg(message: _80.HeaderData): _80.HeaderDataAminoMsg;
                    fromProtoMsg(message: _80.HeaderDataProtoMsg): _80.HeaderData;
                    toProto(message: _80.HeaderData): Uint8Array;
                    toProtoMsg(message: _80.HeaderData): _80.HeaderDataProtoMsg;
                };
                ClientStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ClientStateData;
                    isSDK(o: any): o is _80.ClientStateDataSDKType;
                    isAmino(o: any): o is _80.ClientStateDataAmino;
                    encode(message: _80.ClientStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ClientStateData;
                    fromJSON(object: any): _80.ClientStateData;
                    toJSON(message: _80.ClientStateData): unknown;
                    fromPartial(object: Partial<_80.ClientStateData>): _80.ClientStateData;
                    fromAmino(object: _80.ClientStateDataAmino): _80.ClientStateData;
                    toAmino(message: _80.ClientStateData): _80.ClientStateDataAmino;
                    fromAminoMsg(object: _80.ClientStateDataAminoMsg): _80.ClientStateData;
                    toAminoMsg(message: _80.ClientStateData): _80.ClientStateDataAminoMsg;
                    fromProtoMsg(message: _80.ClientStateDataProtoMsg): _80.ClientStateData;
                    toProto(message: _80.ClientStateData): Uint8Array;
                    toProtoMsg(message: _80.ClientStateData): _80.ClientStateDataProtoMsg;
                };
                ConsensusStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ConsensusStateData;
                    isSDK(o: any): o is _80.ConsensusStateDataSDKType;
                    isAmino(o: any): o is _80.ConsensusStateDataAmino;
                    encode(message: _80.ConsensusStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ConsensusStateData;
                    fromJSON(object: any): _80.ConsensusStateData;
                    toJSON(message: _80.ConsensusStateData): unknown;
                    fromPartial(object: Partial<_80.ConsensusStateData>): _80.ConsensusStateData;
                    fromAmino(object: _80.ConsensusStateDataAmino): _80.ConsensusStateData;
                    toAmino(message: _80.ConsensusStateData): _80.ConsensusStateDataAmino;
                    fromAminoMsg(object: _80.ConsensusStateDataAminoMsg): _80.ConsensusStateData;
                    toAminoMsg(message: _80.ConsensusStateData): _80.ConsensusStateDataAminoMsg;
                    fromProtoMsg(message: _80.ConsensusStateDataProtoMsg): _80.ConsensusStateData;
                    toProto(message: _80.ConsensusStateData): Uint8Array;
                    toProtoMsg(message: _80.ConsensusStateData): _80.ConsensusStateDataProtoMsg;
                };
                ConnectionStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ConnectionStateData;
                    isSDK(o: any): o is _80.ConnectionStateDataSDKType;
                    isAmino(o: any): o is _80.ConnectionStateDataAmino;
                    encode(message: _80.ConnectionStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ConnectionStateData;
                    fromJSON(object: any): _80.ConnectionStateData;
                    toJSON(message: _80.ConnectionStateData): unknown;
                    fromPartial(object: Partial<_80.ConnectionStateData>): _80.ConnectionStateData;
                    fromAmino(object: _80.ConnectionStateDataAmino): _80.ConnectionStateData;
                    toAmino(message: _80.ConnectionStateData): _80.ConnectionStateDataAmino;
                    fromAminoMsg(object: _80.ConnectionStateDataAminoMsg): _80.ConnectionStateData;
                    toAminoMsg(message: _80.ConnectionStateData): _80.ConnectionStateDataAminoMsg;
                    fromProtoMsg(message: _80.ConnectionStateDataProtoMsg): _80.ConnectionStateData;
                    toProto(message: _80.ConnectionStateData): Uint8Array;
                    toProtoMsg(message: _80.ConnectionStateData): _80.ConnectionStateDataProtoMsg;
                };
                ChannelStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.ChannelStateData;
                    isSDK(o: any): o is _80.ChannelStateDataSDKType;
                    isAmino(o: any): o is _80.ChannelStateDataAmino;
                    encode(message: _80.ChannelStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.ChannelStateData;
                    fromJSON(object: any): _80.ChannelStateData;
                    toJSON(message: _80.ChannelStateData): unknown;
                    fromPartial(object: Partial<_80.ChannelStateData>): _80.ChannelStateData;
                    fromAmino(object: _80.ChannelStateDataAmino): _80.ChannelStateData;
                    toAmino(message: _80.ChannelStateData): _80.ChannelStateDataAmino;
                    fromAminoMsg(object: _80.ChannelStateDataAminoMsg): _80.ChannelStateData;
                    toAminoMsg(message: _80.ChannelStateData): _80.ChannelStateDataAminoMsg;
                    fromProtoMsg(message: _80.ChannelStateDataProtoMsg): _80.ChannelStateData;
                    toProto(message: _80.ChannelStateData): Uint8Array;
                    toProtoMsg(message: _80.ChannelStateData): _80.ChannelStateDataProtoMsg;
                };
                PacketCommitmentData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.PacketCommitmentData;
                    isSDK(o: any): o is _80.PacketCommitmentDataSDKType;
                    isAmino(o: any): o is _80.PacketCommitmentDataAmino;
                    encode(message: _80.PacketCommitmentData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.PacketCommitmentData;
                    fromJSON(object: any): _80.PacketCommitmentData;
                    toJSON(message: _80.PacketCommitmentData): unknown;
                    fromPartial(object: Partial<_80.PacketCommitmentData>): _80.PacketCommitmentData;
                    fromAmino(object: _80.PacketCommitmentDataAmino): _80.PacketCommitmentData;
                    toAmino(message: _80.PacketCommitmentData): _80.PacketCommitmentDataAmino;
                    fromAminoMsg(object: _80.PacketCommitmentDataAminoMsg): _80.PacketCommitmentData;
                    toAminoMsg(message: _80.PacketCommitmentData): _80.PacketCommitmentDataAminoMsg;
                    fromProtoMsg(message: _80.PacketCommitmentDataProtoMsg): _80.PacketCommitmentData;
                    toProto(message: _80.PacketCommitmentData): Uint8Array;
                    toProtoMsg(message: _80.PacketCommitmentData): _80.PacketCommitmentDataProtoMsg;
                };
                PacketAcknowledgementData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.PacketAcknowledgementData;
                    isSDK(o: any): o is _80.PacketAcknowledgementDataSDKType;
                    isAmino(o: any): o is _80.PacketAcknowledgementDataAmino;
                    encode(message: _80.PacketAcknowledgementData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.PacketAcknowledgementData;
                    fromJSON(object: any): _80.PacketAcknowledgementData;
                    toJSON(message: _80.PacketAcknowledgementData): unknown;
                    fromPartial(object: Partial<_80.PacketAcknowledgementData>): _80.PacketAcknowledgementData;
                    fromAmino(object: _80.PacketAcknowledgementDataAmino): _80.PacketAcknowledgementData;
                    toAmino(message: _80.PacketAcknowledgementData): _80.PacketAcknowledgementDataAmino;
                    fromAminoMsg(object: _80.PacketAcknowledgementDataAminoMsg): _80.PacketAcknowledgementData;
                    toAminoMsg(message: _80.PacketAcknowledgementData): _80.PacketAcknowledgementDataAminoMsg;
                    fromProtoMsg(message: _80.PacketAcknowledgementDataProtoMsg): _80.PacketAcknowledgementData;
                    toProto(message: _80.PacketAcknowledgementData): Uint8Array;
                    toProtoMsg(message: _80.PacketAcknowledgementData): _80.PacketAcknowledgementDataProtoMsg;
                };
                PacketReceiptAbsenceData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.PacketReceiptAbsenceData;
                    isSDK(o: any): o is _80.PacketReceiptAbsenceDataSDKType;
                    isAmino(o: any): o is _80.PacketReceiptAbsenceDataAmino;
                    encode(message: _80.PacketReceiptAbsenceData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.PacketReceiptAbsenceData;
                    fromJSON(object: any): _80.PacketReceiptAbsenceData;
                    toJSON(message: _80.PacketReceiptAbsenceData): unknown;
                    fromPartial(object: Partial<_80.PacketReceiptAbsenceData>): _80.PacketReceiptAbsenceData;
                    fromAmino(object: _80.PacketReceiptAbsenceDataAmino): _80.PacketReceiptAbsenceData;
                    toAmino(message: _80.PacketReceiptAbsenceData): _80.PacketReceiptAbsenceDataAmino;
                    fromAminoMsg(object: _80.PacketReceiptAbsenceDataAminoMsg): _80.PacketReceiptAbsenceData;
                    toAminoMsg(message: _80.PacketReceiptAbsenceData): _80.PacketReceiptAbsenceDataAminoMsg;
                    fromProtoMsg(message: _80.PacketReceiptAbsenceDataProtoMsg): _80.PacketReceiptAbsenceData;
                    toProto(message: _80.PacketReceiptAbsenceData): Uint8Array;
                    toProtoMsg(message: _80.PacketReceiptAbsenceData): _80.PacketReceiptAbsenceDataProtoMsg;
                };
                NextSequenceRecvData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _80.NextSequenceRecvData;
                    isSDK(o: any): o is _80.NextSequenceRecvDataSDKType;
                    isAmino(o: any): o is _80.NextSequenceRecvDataAmino;
                    encode(message: _80.NextSequenceRecvData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.NextSequenceRecvData;
                    fromJSON(object: any): _80.NextSequenceRecvData;
                    toJSON(message: _80.NextSequenceRecvData): unknown;
                    fromPartial(object: Partial<_80.NextSequenceRecvData>): _80.NextSequenceRecvData;
                    fromAmino(object: _80.NextSequenceRecvDataAmino): _80.NextSequenceRecvData;
                    toAmino(message: _80.NextSequenceRecvData): _80.NextSequenceRecvDataAmino;
                    fromAminoMsg(object: _80.NextSequenceRecvDataAminoMsg): _80.NextSequenceRecvData;
                    toAminoMsg(message: _80.NextSequenceRecvData): _80.NextSequenceRecvDataAminoMsg;
                    fromProtoMsg(message: _80.NextSequenceRecvDataProtoMsg): _80.NextSequenceRecvData;
                    toProto(message: _80.NextSequenceRecvData): Uint8Array;
                    toProtoMsg(message: _80.NextSequenceRecvData): _80.NextSequenceRecvDataProtoMsg;
                };
            };
            const v2: {
                dataTypeFromJSON(object: any): _81.DataType;
                dataTypeToJSON(object: _81.DataType): string;
                DataType: typeof _81.DataType;
                DataTypeSDKType: typeof _81.DataType;
                DataTypeAmino: typeof _81.DataType;
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ClientState;
                    isSDK(o: any): o is _81.ClientStateSDKType;
                    isAmino(o: any): o is _81.ClientStateAmino;
                    encode(message: _81.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ClientState;
                    fromJSON(object: any): _81.ClientState;
                    toJSON(message: _81.ClientState): unknown;
                    fromPartial(object: Partial<_81.ClientState>): _81.ClientState;
                    fromAmino(object: _81.ClientStateAmino): _81.ClientState;
                    toAmino(message: _81.ClientState): _81.ClientStateAmino;
                    fromAminoMsg(object: _81.ClientStateAminoMsg): _81.ClientState;
                    toAminoMsg(message: _81.ClientState): _81.ClientStateAminoMsg;
                    fromProtoMsg(message: _81.ClientStateProtoMsg): _81.ClientState;
                    toProto(message: _81.ClientState): Uint8Array;
                    toProtoMsg(message: _81.ClientState): _81.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ConsensusState;
                    isSDK(o: any): o is _81.ConsensusStateSDKType;
                    isAmino(o: any): o is _81.ConsensusStateAmino;
                    encode(message: _81.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ConsensusState;
                    fromJSON(object: any): _81.ConsensusState;
                    toJSON(message: _81.ConsensusState): unknown;
                    fromPartial(object: Partial<_81.ConsensusState>): _81.ConsensusState;
                    fromAmino(object: _81.ConsensusStateAmino): _81.ConsensusState;
                    toAmino(message: _81.ConsensusState): _81.ConsensusStateAmino;
                    fromAminoMsg(object: _81.ConsensusStateAminoMsg): _81.ConsensusState;
                    toAminoMsg(message: _81.ConsensusState): _81.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _81.ConsensusStateProtoMsg): _81.ConsensusState;
                    toProto(message: _81.ConsensusState): Uint8Array;
                    toProtoMsg(message: _81.ConsensusState): _81.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.Header;
                    isSDK(o: any): o is _81.HeaderSDKType;
                    isAmino(o: any): o is _81.HeaderAmino;
                    encode(message: _81.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.Header;
                    fromJSON(object: any): _81.Header;
                    toJSON(message: _81.Header): unknown;
                    fromPartial(object: Partial<_81.Header>): _81.Header;
                    fromAmino(object: _81.HeaderAmino): _81.Header;
                    toAmino(message: _81.Header): _81.HeaderAmino;
                    fromAminoMsg(object: _81.HeaderAminoMsg): _81.Header;
                    toAminoMsg(message: _81.Header): _81.HeaderAminoMsg;
                    fromProtoMsg(message: _81.HeaderProtoMsg): _81.Header;
                    toProto(message: _81.Header): Uint8Array;
                    toProtoMsg(message: _81.Header): _81.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.Misbehaviour;
                    isSDK(o: any): o is _81.MisbehaviourSDKType;
                    isAmino(o: any): o is _81.MisbehaviourAmino;
                    encode(message: _81.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.Misbehaviour;
                    fromJSON(object: any): _81.Misbehaviour;
                    toJSON(message: _81.Misbehaviour): unknown;
                    fromPartial(object: Partial<_81.Misbehaviour>): _81.Misbehaviour;
                    fromAmino(object: _81.MisbehaviourAmino): _81.Misbehaviour;
                    toAmino(message: _81.Misbehaviour): _81.MisbehaviourAmino;
                    fromAminoMsg(object: _81.MisbehaviourAminoMsg): _81.Misbehaviour;
                    toAminoMsg(message: _81.Misbehaviour): _81.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _81.MisbehaviourProtoMsg): _81.Misbehaviour;
                    toProto(message: _81.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _81.Misbehaviour): _81.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.SignatureAndData;
                    isSDK(o: any): o is _81.SignatureAndDataSDKType;
                    isAmino(o: any): o is _81.SignatureAndDataAmino;
                    encode(message: _81.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.SignatureAndData;
                    fromJSON(object: any): _81.SignatureAndData;
                    toJSON(message: _81.SignatureAndData): unknown;
                    fromPartial(object: Partial<_81.SignatureAndData>): _81.SignatureAndData;
                    fromAmino(object: _81.SignatureAndDataAmino): _81.SignatureAndData;
                    toAmino(message: _81.SignatureAndData): _81.SignatureAndDataAmino;
                    fromAminoMsg(object: _81.SignatureAndDataAminoMsg): _81.SignatureAndData;
                    toAminoMsg(message: _81.SignatureAndData): _81.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _81.SignatureAndDataProtoMsg): _81.SignatureAndData;
                    toProto(message: _81.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _81.SignatureAndData): _81.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.TimestampedSignatureData;
                    isSDK(o: any): o is _81.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _81.TimestampedSignatureDataAmino;
                    encode(message: _81.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.TimestampedSignatureData;
                    fromJSON(object: any): _81.TimestampedSignatureData;
                    toJSON(message: _81.TimestampedSignatureData): unknown;
                    fromPartial(object: Partial<_81.TimestampedSignatureData>): _81.TimestampedSignatureData;
                    fromAmino(object: _81.TimestampedSignatureDataAmino): _81.TimestampedSignatureData;
                    toAmino(message: _81.TimestampedSignatureData): _81.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _81.TimestampedSignatureDataAminoMsg): _81.TimestampedSignatureData;
                    toAminoMsg(message: _81.TimestampedSignatureData): _81.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _81.TimestampedSignatureDataProtoMsg): _81.TimestampedSignatureData;
                    toProto(message: _81.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _81.TimestampedSignatureData): _81.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.SignBytes;
                    isSDK(o: any): o is _81.SignBytesSDKType;
                    isAmino(o: any): o is _81.SignBytesAmino;
                    encode(message: _81.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.SignBytes;
                    fromJSON(object: any): _81.SignBytes;
                    toJSON(message: _81.SignBytes): unknown;
                    fromPartial(object: Partial<_81.SignBytes>): _81.SignBytes;
                    fromAmino(object: _81.SignBytesAmino): _81.SignBytes;
                    toAmino(message: _81.SignBytes): _81.SignBytesAmino;
                    fromAminoMsg(object: _81.SignBytesAminoMsg): _81.SignBytes;
                    toAminoMsg(message: _81.SignBytes): _81.SignBytesAminoMsg;
                    fromProtoMsg(message: _81.SignBytesProtoMsg): _81.SignBytes;
                    toProto(message: _81.SignBytes): Uint8Array;
                    toProtoMsg(message: _81.SignBytes): _81.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.HeaderData;
                    isSDK(o: any): o is _81.HeaderDataSDKType;
                    isAmino(o: any): o is _81.HeaderDataAmino;
                    encode(message: _81.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.HeaderData;
                    fromJSON(object: any): _81.HeaderData;
                    toJSON(message: _81.HeaderData): unknown;
                    fromPartial(object: Partial<_81.HeaderData>): _81.HeaderData;
                    fromAmino(object: _81.HeaderDataAmino): _81.HeaderData;
                    toAmino(message: _81.HeaderData): _81.HeaderDataAmino;
                    fromAminoMsg(object: _81.HeaderDataAminoMsg): _81.HeaderData;
                    toAminoMsg(message: _81.HeaderData): _81.HeaderDataAminoMsg;
                    fromProtoMsg(message: _81.HeaderDataProtoMsg): _81.HeaderData;
                    toProto(message: _81.HeaderData): Uint8Array;
                    toProtoMsg(message: _81.HeaderData): _81.HeaderDataProtoMsg;
                };
                ClientStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ClientStateData;
                    isSDK(o: any): o is _81.ClientStateDataSDKType;
                    isAmino(o: any): o is _81.ClientStateDataAmino;
                    encode(message: _81.ClientStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ClientStateData;
                    fromJSON(object: any): _81.ClientStateData;
                    toJSON(message: _81.ClientStateData): unknown;
                    fromPartial(object: Partial<_81.ClientStateData>): _81.ClientStateData;
                    fromAmino(object: _81.ClientStateDataAmino): _81.ClientStateData;
                    toAmino(message: _81.ClientStateData): _81.ClientStateDataAmino;
                    fromAminoMsg(object: _81.ClientStateDataAminoMsg): _81.ClientStateData;
                    toAminoMsg(message: _81.ClientStateData): _81.ClientStateDataAminoMsg;
                    fromProtoMsg(message: _81.ClientStateDataProtoMsg): _81.ClientStateData;
                    toProto(message: _81.ClientStateData): Uint8Array;
                    toProtoMsg(message: _81.ClientStateData): _81.ClientStateDataProtoMsg;
                };
                ConsensusStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ConsensusStateData;
                    isSDK(o: any): o is _81.ConsensusStateDataSDKType;
                    isAmino(o: any): o is _81.ConsensusStateDataAmino;
                    encode(message: _81.ConsensusStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ConsensusStateData;
                    fromJSON(object: any): _81.ConsensusStateData;
                    toJSON(message: _81.ConsensusStateData): unknown;
                    fromPartial(object: Partial<_81.ConsensusStateData>): _81.ConsensusStateData;
                    fromAmino(object: _81.ConsensusStateDataAmino): _81.ConsensusStateData;
                    toAmino(message: _81.ConsensusStateData): _81.ConsensusStateDataAmino;
                    fromAminoMsg(object: _81.ConsensusStateDataAminoMsg): _81.ConsensusStateData;
                    toAminoMsg(message: _81.ConsensusStateData): _81.ConsensusStateDataAminoMsg;
                    fromProtoMsg(message: _81.ConsensusStateDataProtoMsg): _81.ConsensusStateData;
                    toProto(message: _81.ConsensusStateData): Uint8Array;
                    toProtoMsg(message: _81.ConsensusStateData): _81.ConsensusStateDataProtoMsg;
                };
                ConnectionStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ConnectionStateData;
                    isSDK(o: any): o is _81.ConnectionStateDataSDKType;
                    isAmino(o: any): o is _81.ConnectionStateDataAmino;
                    encode(message: _81.ConnectionStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ConnectionStateData;
                    fromJSON(object: any): _81.ConnectionStateData;
                    toJSON(message: _81.ConnectionStateData): unknown;
                    fromPartial(object: Partial<_81.ConnectionStateData>): _81.ConnectionStateData;
                    fromAmino(object: _81.ConnectionStateDataAmino): _81.ConnectionStateData;
                    toAmino(message: _81.ConnectionStateData): _81.ConnectionStateDataAmino;
                    fromAminoMsg(object: _81.ConnectionStateDataAminoMsg): _81.ConnectionStateData;
                    toAminoMsg(message: _81.ConnectionStateData): _81.ConnectionStateDataAminoMsg;
                    fromProtoMsg(message: _81.ConnectionStateDataProtoMsg): _81.ConnectionStateData;
                    toProto(message: _81.ConnectionStateData): Uint8Array;
                    toProtoMsg(message: _81.ConnectionStateData): _81.ConnectionStateDataProtoMsg;
                };
                ChannelStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.ChannelStateData;
                    isSDK(o: any): o is _81.ChannelStateDataSDKType;
                    isAmino(o: any): o is _81.ChannelStateDataAmino;
                    encode(message: _81.ChannelStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.ChannelStateData;
                    fromJSON(object: any): _81.ChannelStateData;
                    toJSON(message: _81.ChannelStateData): unknown;
                    fromPartial(object: Partial<_81.ChannelStateData>): _81.ChannelStateData;
                    fromAmino(object: _81.ChannelStateDataAmino): _81.ChannelStateData;
                    toAmino(message: _81.ChannelStateData): _81.ChannelStateDataAmino;
                    fromAminoMsg(object: _81.ChannelStateDataAminoMsg): _81.ChannelStateData;
                    toAminoMsg(message: _81.ChannelStateData): _81.ChannelStateDataAminoMsg;
                    fromProtoMsg(message: _81.ChannelStateDataProtoMsg): _81.ChannelStateData;
                    toProto(message: _81.ChannelStateData): Uint8Array;
                    toProtoMsg(message: _81.ChannelStateData): _81.ChannelStateDataProtoMsg;
                };
                PacketCommitmentData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.PacketCommitmentData;
                    isSDK(o: any): o is _81.PacketCommitmentDataSDKType;
                    isAmino(o: any): o is _81.PacketCommitmentDataAmino;
                    encode(message: _81.PacketCommitmentData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.PacketCommitmentData;
                    fromJSON(object: any): _81.PacketCommitmentData;
                    toJSON(message: _81.PacketCommitmentData): unknown;
                    fromPartial(object: Partial<_81.PacketCommitmentData>): _81.PacketCommitmentData;
                    fromAmino(object: _81.PacketCommitmentDataAmino): _81.PacketCommitmentData;
                    toAmino(message: _81.PacketCommitmentData): _81.PacketCommitmentDataAmino;
                    fromAminoMsg(object: _81.PacketCommitmentDataAminoMsg): _81.PacketCommitmentData;
                    toAminoMsg(message: _81.PacketCommitmentData): _81.PacketCommitmentDataAminoMsg;
                    fromProtoMsg(message: _81.PacketCommitmentDataProtoMsg): _81.PacketCommitmentData;
                    toProto(message: _81.PacketCommitmentData): Uint8Array;
                    toProtoMsg(message: _81.PacketCommitmentData): _81.PacketCommitmentDataProtoMsg;
                };
                PacketAcknowledgementData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.PacketAcknowledgementData;
                    isSDK(o: any): o is _81.PacketAcknowledgementDataSDKType;
                    isAmino(o: any): o is _81.PacketAcknowledgementDataAmino;
                    encode(message: _81.PacketAcknowledgementData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.PacketAcknowledgementData;
                    fromJSON(object: any): _81.PacketAcknowledgementData;
                    toJSON(message: _81.PacketAcknowledgementData): unknown;
                    fromPartial(object: Partial<_81.PacketAcknowledgementData>): _81.PacketAcknowledgementData;
                    fromAmino(object: _81.PacketAcknowledgementDataAmino): _81.PacketAcknowledgementData;
                    toAmino(message: _81.PacketAcknowledgementData): _81.PacketAcknowledgementDataAmino;
                    fromAminoMsg(object: _81.PacketAcknowledgementDataAminoMsg): _81.PacketAcknowledgementData;
                    toAminoMsg(message: _81.PacketAcknowledgementData): _81.PacketAcknowledgementDataAminoMsg;
                    fromProtoMsg(message: _81.PacketAcknowledgementDataProtoMsg): _81.PacketAcknowledgementData;
                    toProto(message: _81.PacketAcknowledgementData): Uint8Array;
                    toProtoMsg(message: _81.PacketAcknowledgementData): _81.PacketAcknowledgementDataProtoMsg;
                };
                PacketReceiptAbsenceData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.PacketReceiptAbsenceData;
                    isSDK(o: any): o is _81.PacketReceiptAbsenceDataSDKType;
                    isAmino(o: any): o is _81.PacketReceiptAbsenceDataAmino;
                    encode(message: _81.PacketReceiptAbsenceData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.PacketReceiptAbsenceData;
                    fromJSON(object: any): _81.PacketReceiptAbsenceData;
                    toJSON(message: _81.PacketReceiptAbsenceData): unknown;
                    fromPartial(object: Partial<_81.PacketReceiptAbsenceData>): _81.PacketReceiptAbsenceData;
                    fromAmino(object: _81.PacketReceiptAbsenceDataAmino): _81.PacketReceiptAbsenceData;
                    toAmino(message: _81.PacketReceiptAbsenceData): _81.PacketReceiptAbsenceDataAmino;
                    fromAminoMsg(object: _81.PacketReceiptAbsenceDataAminoMsg): _81.PacketReceiptAbsenceData;
                    toAminoMsg(message: _81.PacketReceiptAbsenceData): _81.PacketReceiptAbsenceDataAminoMsg;
                    fromProtoMsg(message: _81.PacketReceiptAbsenceDataProtoMsg): _81.PacketReceiptAbsenceData;
                    toProto(message: _81.PacketReceiptAbsenceData): Uint8Array;
                    toProtoMsg(message: _81.PacketReceiptAbsenceData): _81.PacketReceiptAbsenceDataProtoMsg;
                };
                NextSequenceRecvData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _81.NextSequenceRecvData;
                    isSDK(o: any): o is _81.NextSequenceRecvDataSDKType;
                    isAmino(o: any): o is _81.NextSequenceRecvDataAmino;
                    encode(message: _81.NextSequenceRecvData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.NextSequenceRecvData;
                    fromJSON(object: any): _81.NextSequenceRecvData;
                    toJSON(message: _81.NextSequenceRecvData): unknown;
                    fromPartial(object: Partial<_81.NextSequenceRecvData>): _81.NextSequenceRecvData;
                    fromAmino(object: _81.NextSequenceRecvDataAmino): _81.NextSequenceRecvData;
                    toAmino(message: _81.NextSequenceRecvData): _81.NextSequenceRecvDataAmino;
                    fromAminoMsg(object: _81.NextSequenceRecvDataAminoMsg): _81.NextSequenceRecvData;
                    toAminoMsg(message: _81.NextSequenceRecvData): _81.NextSequenceRecvDataAminoMsg;
                    fromProtoMsg(message: _81.NextSequenceRecvDataProtoMsg): _81.NextSequenceRecvData;
                    toProto(message: _81.NextSequenceRecvData): Uint8Array;
                    toProtoMsg(message: _81.NextSequenceRecvData): _81.NextSequenceRecvDataProtoMsg;
                };
            };
        }
        namespace tendermint {
            const v1: {
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _82.ClientState;
                    isSDK(o: any): o is _82.ClientStateSDKType;
                    isAmino(o: any): o is _82.ClientStateAmino;
                    encode(message: _82.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.ClientState;
                    fromJSON(object: any): _82.ClientState;
                    toJSON(message: _82.ClientState): unknown;
                    fromPartial(object: Partial<_82.ClientState>): _82.ClientState;
                    fromAmino(object: _82.ClientStateAmino): _82.ClientState;
                    toAmino(message: _82.ClientState): _82.ClientStateAmino;
                    fromAminoMsg(object: _82.ClientStateAminoMsg): _82.ClientState;
                    toAminoMsg(message: _82.ClientState): _82.ClientStateAminoMsg;
                    fromProtoMsg(message: _82.ClientStateProtoMsg): _82.ClientState;
                    toProto(message: _82.ClientState): Uint8Array;
                    toProtoMsg(message: _82.ClientState): _82.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _82.ConsensusState;
                    isSDK(o: any): o is _82.ConsensusStateSDKType;
                    isAmino(o: any): o is _82.ConsensusStateAmino;
                    encode(message: _82.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.ConsensusState;
                    fromJSON(object: any): _82.ConsensusState;
                    toJSON(message: _82.ConsensusState): unknown;
                    fromPartial(object: Partial<_82.ConsensusState>): _82.ConsensusState;
                    fromAmino(object: _82.ConsensusStateAmino): _82.ConsensusState;
                    toAmino(message: _82.ConsensusState): _82.ConsensusStateAmino;
                    fromAminoMsg(object: _82.ConsensusStateAminoMsg): _82.ConsensusState;
                    toAminoMsg(message: _82.ConsensusState): _82.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _82.ConsensusStateProtoMsg): _82.ConsensusState;
                    toProto(message: _82.ConsensusState): Uint8Array;
                    toProtoMsg(message: _82.ConsensusState): _82.ConsensusStateProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _82.Misbehaviour;
                    isSDK(o: any): o is _82.MisbehaviourSDKType;
                    isAmino(o: any): o is _82.MisbehaviourAmino;
                    encode(message: _82.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.Misbehaviour;
                    fromJSON(object: any): _82.Misbehaviour;
                    toJSON(message: _82.Misbehaviour): unknown;
                    fromPartial(object: Partial<_82.Misbehaviour>): _82.Misbehaviour;
                    fromAmino(object: _82.MisbehaviourAmino): _82.Misbehaviour;
                    toAmino(message: _82.Misbehaviour): _82.MisbehaviourAmino;
                    fromAminoMsg(object: _82.MisbehaviourAminoMsg): _82.Misbehaviour;
                    toAminoMsg(message: _82.Misbehaviour): _82.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _82.MisbehaviourProtoMsg): _82.Misbehaviour;
                    toProto(message: _82.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _82.Misbehaviour): _82.MisbehaviourProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _82.Header;
                    isSDK(o: any): o is _82.HeaderSDKType;
                    isAmino(o: any): o is _82.HeaderAmino;
                    encode(message: _82.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.Header;
                    fromJSON(object: any): _82.Header;
                    toJSON(message: _82.Header): unknown;
                    fromPartial(object: Partial<_82.Header>): _82.Header;
                    fromAmino(object: _82.HeaderAmino): _82.Header;
                    toAmino(message: _82.Header): _82.HeaderAmino;
                    fromAminoMsg(object: _82.HeaderAminoMsg): _82.Header;
                    toAminoMsg(message: _82.Header): _82.HeaderAminoMsg;
                    fromProtoMsg(message: _82.HeaderProtoMsg): _82.Header;
                    toProto(message: _82.Header): Uint8Array;
                    toProtoMsg(message: _82.Header): _82.HeaderProtoMsg;
                };
                Fraction: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _82.Fraction;
                    isSDK(o: any): o is _82.FractionSDKType;
                    isAmino(o: any): o is _82.FractionAmino;
                    encode(message: _82.Fraction, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.Fraction;
                    fromJSON(object: any): _82.Fraction;
                    toJSON(message: _82.Fraction): unknown;
                    fromPartial(object: Partial<_82.Fraction>): _82.Fraction;
                    fromAmino(object: _82.FractionAmino): _82.Fraction;
                    toAmino(message: _82.Fraction): _82.FractionAmino;
                    fromAminoMsg(object: _82.FractionAminoMsg): _82.Fraction;
                    toAminoMsg(message: _82.Fraction): _82.FractionAminoMsg;
                    fromProtoMsg(message: _82.FractionProtoMsg): _82.Fraction;
                    toProto(message: _82.Fraction): Uint8Array;
                    toProtoMsg(message: _82.Fraction): _82.FractionProtoMsg;
                };
            };
        }
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                gov: {
                    v1beta1: import("../cosmos/gov/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
            };
            ibc: {
                applications: {
                    transfer: {
                        v1: _160.MsgClientImpl;
                    };
                };
                core: {
                    channel: {
                        v1: _161.MsgClientImpl;
                    };
                    client: {
                        v1: _162.MsgClientImpl;
                    };
                    connection: {
                        v1: _163.MsgClientImpl;
                    };
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: {
                        accounts(request?: import("../cosmos/auth/v1beta1/query").QueryAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountsResponse>;
                        account(request: import("../cosmos/auth/v1beta1/query").QueryAccountRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountResponse>;
                        params(request?: import("../cosmos/auth/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryParamsResponse>;
                        moduleAccounts(request?: import("../cosmos/auth/v1beta1/query").QueryModuleAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountsResponse>;
                        bech32Prefix(request?: import("../cosmos/auth/v1beta1/query").Bech32PrefixRequest): Promise<import("../cosmos/auth/v1beta1/query").Bech32PrefixResponse>;
                        addressBytesToString(request: import("../cosmos/auth/v1beta1/query").AddressBytesToStringRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressBytesToStringResponse>;
                        addressStringToBytes(request: import("../cosmos/auth/v1beta1/query").AddressStringToBytesRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressStringToBytesResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: import("../cosmos/authz/v1beta1/query").QueryGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGrantsResponse>;
                        granterGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranterGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranterGrantsResponse>;
                        granteeGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: import("../cosmos/bank/v1beta1/query").QueryBalanceRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryBalanceResponse>;
                        allBalances(request: import("../cosmos/bank/v1beta1/query").QueryAllBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryAllBalancesResponse>;
                        spendableBalances(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesResponse>;
                        totalSupply(request?: import("../cosmos/bank/v1beta1/query").QueryTotalSupplyRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryTotalSupplyResponse>;
                        supplyOf(request: import("../cosmos/bank/v1beta1/query").QuerySupplyOfRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySupplyOfResponse>;
                        params(request?: import("../cosmos/bank/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryParamsResponse>;
                        denomMetadata(request: import("../cosmos/bank/v1beta1/query").QueryDenomMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomMetadataResponse>;
                        denomsMetadata(request?: import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataResponse>;
                        denomOwners(request: import("../cosmos/bank/v1beta1/query").QueryDenomOwnersRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomOwnersResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: import("../cosmos/distribution/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryParamsResponse>;
                        validatorOutstandingRewards(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionResponse>;
                        validatorSlashes(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesResponse>;
                        delegationRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolResponse>;
                    };
                };
                gov: {
                    v1beta1: {
                        proposal(request: import("../cosmos/gov/v1beta1/query").QueryProposalRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalResponse>;
                        proposals(request: import("../cosmos/gov/v1beta1/query").QueryProposalsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalsResponse>;
                        vote(request: import("../cosmos/gov/v1beta1/query").QueryVoteRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVoteResponse>;
                        votes(request: import("../cosmos/gov/v1beta1/query").QueryVotesRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVotesResponse>;
                        params(request: import("../cosmos/gov/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryParamsResponse>;
                        deposit(request: import("../cosmos/gov/v1beta1/query").QueryDepositRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositResponse>;
                        deposits(request: import("../cosmos/gov/v1beta1/query").QueryDepositsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositsResponse>;
                        tallyResult(request: import("../cosmos/gov/v1beta1/query").QueryTallyResultRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryTallyResultResponse>;
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: import("../cosmos/staking/v1beta1/query").QueryValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorsResponse>;
                        validator(request: import("../cosmos/staking/v1beta1/query").QueryValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorResponse>;
                        validatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: import("../cosmos/staking/v1beta1/query").QueryDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegationResponse>;
                        unbondingDelegation(request: import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: import("../cosmos/staking/v1beta1/query").QueryRedelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryRedelegationsResponse>;
                        delegatorValidators(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorResponse>;
                        historicalInfo(request: import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoResponse>;
                        pool(request?: import("../cosmos/staking/v1beta1/query").QueryPoolRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryPoolResponse>;
                        params(request?: import("../cosmos/staking/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: import("../cosmos/tx/v1beta1/service").SimulateRequest): Promise<import("../cosmos/tx/v1beta1/service").SimulateResponse>;
                        getTx(request: import("../cosmos/tx/v1beta1/service").GetTxRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxResponse>;
                        broadcastTx(request: import("../cosmos/tx/v1beta1/service").BroadcastTxRequest): Promise<import("../cosmos/tx/v1beta1/service").BroadcastTxResponse>;
                        getTxsEvent(request: import("../cosmos/tx/v1beta1/service").GetTxsEventRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxsEventResponse>;
                        getBlockWithTxs(request: import("../cosmos/tx/v1beta1/service").GetBlockWithTxsRequest): Promise<import("../cosmos/tx/v1beta1/service").GetBlockWithTxsResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanResponse>;
                        appliedPlan(request: import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsResponse>;
                        authority(request?: import("../cosmos/upgrade/v1beta1/query").QueryAuthorityRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAuthorityResponse>;
                    };
                };
            };
            ibc: {
                applications: {
                    transfer: {
                        v1: {
                            denomTrace(request: _62.QueryDenomTraceRequest): Promise<_62.QueryDenomTraceResponse>;
                            denomTraces(request?: _62.QueryDenomTracesRequest): Promise<_62.QueryDenomTracesResponse>;
                            params(request?: _62.QueryParamsRequest): Promise<_62.QueryParamsResponse>;
                        };
                    };
                };
                core: {
                    channel: {
                        v1: {
                            channel(request: _68.QueryChannelRequest): Promise<_68.QueryChannelResponse>;
                            channels(request?: _68.QueryChannelsRequest): Promise<_68.QueryChannelsResponse>;
                            connectionChannels(request: _68.QueryConnectionChannelsRequest): Promise<_68.QueryConnectionChannelsResponse>;
                            channelClientState(request: _68.QueryChannelClientStateRequest): Promise<_68.QueryChannelClientStateResponse>;
                            channelConsensusState(request: _68.QueryChannelConsensusStateRequest): Promise<_68.QueryChannelConsensusStateResponse>;
                            packetCommitment(request: _68.QueryPacketCommitmentRequest): Promise<_68.QueryPacketCommitmentResponse>;
                            packetCommitments(request: _68.QueryPacketCommitmentsRequest): Promise<_68.QueryPacketCommitmentsResponse>;
                            packetReceipt(request: _68.QueryPacketReceiptRequest): Promise<_68.QueryPacketReceiptResponse>;
                            packetAcknowledgement(request: _68.QueryPacketAcknowledgementRequest): Promise<_68.QueryPacketAcknowledgementResponse>;
                            packetAcknowledgements(request: _68.QueryPacketAcknowledgementsRequest): Promise<_68.QueryPacketAcknowledgementsResponse>;
                            unreceivedPackets(request: _68.QueryUnreceivedPacketsRequest): Promise<_68.QueryUnreceivedPacketsResponse>;
                            unreceivedAcks(request: _68.QueryUnreceivedAcksRequest): Promise<_68.QueryUnreceivedAcksResponse>;
                            nextSequenceReceive(request: _68.QueryNextSequenceReceiveRequest): Promise<_68.QueryNextSequenceReceiveResponse>;
                        };
                    };
                    client: {
                        v1: {
                            clientState(request: _72.QueryClientStateRequest): Promise<_72.QueryClientStateResponse>;
                            clientStates(request?: _72.QueryClientStatesRequest): Promise<_72.QueryClientStatesResponse>;
                            consensusState(request: _72.QueryConsensusStateRequest): Promise<_72.QueryConsensusStateResponse>;
                            consensusStates(request: _72.QueryConsensusStatesRequest): Promise<_72.QueryConsensusStatesResponse>;
                            clientStatus(request: _72.QueryClientStatusRequest): Promise<_72.QueryClientStatusResponse>;
                            clientParams(request?: _72.QueryClientParamsRequest): Promise<_72.QueryClientParamsResponse>;
                            upgradedClientState(request?: _72.QueryUpgradedClientStateRequest): Promise<_72.QueryUpgradedClientStateResponse>;
                            upgradedConsensusState(request?: _72.QueryUpgradedConsensusStateRequest): Promise<_72.QueryUpgradedConsensusStateResponse>;
                        };
                    };
                    connection: {
                        v1: {
                            connection(request: _77.QueryConnectionRequest): Promise<_77.QueryConnectionResponse>;
                            connections(request?: _77.QueryConnectionsRequest): Promise<_77.QueryConnectionsResponse>;
                            clientConnections(request: _77.QueryClientConnectionsRequest): Promise<_77.QueryClientConnectionsResponse>;
                            connectionClientState(request: _77.QueryConnectionClientStateRequest): Promise<_77.QueryConnectionClientStateResponse>;
                            connectionConsensusState(request: _77.QueryConnectionConsensusStateRequest): Promise<_77.QueryConnectionConsensusStateResponse>;
                        };
                    };
                };
            };
        }>;
    };
}
