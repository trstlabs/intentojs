import * as _83 from "./abci/types";
import * as _84 from "./crypto/keys";
import * as _85 from "./crypto/proof";
import * as _86 from "./libs/bits/types";
import * as _87 from "./p2p/types";
import * as _88 from "./types/block";
import * as _89 from "./types/evidence";
import * as _90 from "./types/params";
import * as _91 from "./types/types";
import * as _92 from "./types/validator";
import * as _93 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _83.CheckTxType;
        checkTxTypeToJSON(object: _83.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _83.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _83.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _83.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _83.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _83.EvidenceType;
        evidenceTypeToJSON(object: _83.EvidenceType): string;
        CheckTxType: typeof _83.CheckTxType;
        CheckTxTypeSDKType: typeof _83.CheckTxType;
        CheckTxTypeAmino: typeof _83.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _83.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _83.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _83.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _83.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _83.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _83.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _83.EvidenceType;
        EvidenceTypeSDKType: typeof _83.EvidenceType;
        EvidenceTypeAmino: typeof _83.EvidenceType;
        Request: {
            typeUrl: string;
            is(o: any): o is _83.Request;
            isSDK(o: any): o is _83.RequestSDKType;
            isAmino(o: any): o is _83.RequestAmino;
            encode(message: _83.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Request;
            fromJSON(object: any): _83.Request;
            toJSON(message: _83.Request): unknown;
            fromPartial(object: Partial<_83.Request>): _83.Request;
            fromAmino(object: _83.RequestAmino): _83.Request;
            toAmino(message: _83.Request): _83.RequestAmino;
            fromAminoMsg(object: _83.RequestAminoMsg): _83.Request;
            fromProtoMsg(message: _83.RequestProtoMsg): _83.Request;
            toProto(message: _83.Request): Uint8Array;
            toProtoMsg(message: _83.Request): _83.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _83.RequestEcho;
            isSDK(o: any): o is _83.RequestEchoSDKType;
            isAmino(o: any): o is _83.RequestEchoAmino;
            encode(message: _83.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestEcho;
            fromJSON(object: any): _83.RequestEcho;
            toJSON(message: _83.RequestEcho): unknown;
            fromPartial(object: Partial<_83.RequestEcho>): _83.RequestEcho;
            fromAmino(object: _83.RequestEchoAmino): _83.RequestEcho;
            toAmino(message: _83.RequestEcho): _83.RequestEchoAmino;
            fromAminoMsg(object: _83.RequestEchoAminoMsg): _83.RequestEcho;
            fromProtoMsg(message: _83.RequestEchoProtoMsg): _83.RequestEcho;
            toProto(message: _83.RequestEcho): Uint8Array;
            toProtoMsg(message: _83.RequestEcho): _83.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _83.RequestFlush;
            isSDK(o: any): o is _83.RequestFlushSDKType;
            isAmino(o: any): o is _83.RequestFlushAmino;
            encode(_: _83.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestFlush;
            fromJSON(_: any): _83.RequestFlush;
            toJSON(_: _83.RequestFlush): unknown;
            fromPartial(_: Partial<_83.RequestFlush>): _83.RequestFlush;
            fromAmino(_: _83.RequestFlushAmino): _83.RequestFlush;
            toAmino(_: _83.RequestFlush): _83.RequestFlushAmino;
            fromAminoMsg(object: _83.RequestFlushAminoMsg): _83.RequestFlush;
            fromProtoMsg(message: _83.RequestFlushProtoMsg): _83.RequestFlush;
            toProto(message: _83.RequestFlush): Uint8Array;
            toProtoMsg(message: _83.RequestFlush): _83.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _83.RequestInfo;
            isSDK(o: any): o is _83.RequestInfoSDKType;
            isAmino(o: any): o is _83.RequestInfoAmino;
            encode(message: _83.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestInfo;
            fromJSON(object: any): _83.RequestInfo;
            toJSON(message: _83.RequestInfo): unknown;
            fromPartial(object: Partial<_83.RequestInfo>): _83.RequestInfo;
            fromAmino(object: _83.RequestInfoAmino): _83.RequestInfo;
            toAmino(message: _83.RequestInfo): _83.RequestInfoAmino;
            fromAminoMsg(object: _83.RequestInfoAminoMsg): _83.RequestInfo;
            fromProtoMsg(message: _83.RequestInfoProtoMsg): _83.RequestInfo;
            toProto(message: _83.RequestInfo): Uint8Array;
            toProtoMsg(message: _83.RequestInfo): _83.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            is(o: any): o is _83.RequestSetOption;
            isSDK(o: any): o is _83.RequestSetOptionSDKType;
            isAmino(o: any): o is _83.RequestSetOptionAmino;
            encode(message: _83.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestSetOption;
            fromJSON(object: any): _83.RequestSetOption;
            toJSON(message: _83.RequestSetOption): unknown;
            fromPartial(object: Partial<_83.RequestSetOption>): _83.RequestSetOption;
            fromAmino(object: _83.RequestSetOptionAmino): _83.RequestSetOption;
            toAmino(message: _83.RequestSetOption): _83.RequestSetOptionAmino;
            fromAminoMsg(object: _83.RequestSetOptionAminoMsg): _83.RequestSetOption;
            fromProtoMsg(message: _83.RequestSetOptionProtoMsg): _83.RequestSetOption;
            toProto(message: _83.RequestSetOption): Uint8Array;
            toProtoMsg(message: _83.RequestSetOption): _83.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _83.RequestInitChain;
            isSDK(o: any): o is _83.RequestInitChainSDKType;
            isAmino(o: any): o is _83.RequestInitChainAmino;
            encode(message: _83.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestInitChain;
            fromJSON(object: any): _83.RequestInitChain;
            toJSON(message: _83.RequestInitChain): unknown;
            fromPartial(object: Partial<_83.RequestInitChain>): _83.RequestInitChain;
            fromAmino(object: _83.RequestInitChainAmino): _83.RequestInitChain;
            toAmino(message: _83.RequestInitChain): _83.RequestInitChainAmino;
            fromAminoMsg(object: _83.RequestInitChainAminoMsg): _83.RequestInitChain;
            fromProtoMsg(message: _83.RequestInitChainProtoMsg): _83.RequestInitChain;
            toProto(message: _83.RequestInitChain): Uint8Array;
            toProtoMsg(message: _83.RequestInitChain): _83.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _83.RequestQuery;
            isSDK(o: any): o is _83.RequestQuerySDKType;
            isAmino(o: any): o is _83.RequestQueryAmino;
            encode(message: _83.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestQuery;
            fromJSON(object: any): _83.RequestQuery;
            toJSON(message: _83.RequestQuery): unknown;
            fromPartial(object: Partial<_83.RequestQuery>): _83.RequestQuery;
            fromAmino(object: _83.RequestQueryAmino): _83.RequestQuery;
            toAmino(message: _83.RequestQuery): _83.RequestQueryAmino;
            fromAminoMsg(object: _83.RequestQueryAminoMsg): _83.RequestQuery;
            fromProtoMsg(message: _83.RequestQueryProtoMsg): _83.RequestQuery;
            toProto(message: _83.RequestQuery): Uint8Array;
            toProtoMsg(message: _83.RequestQuery): _83.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            is(o: any): o is _83.RequestBeginBlock;
            isSDK(o: any): o is _83.RequestBeginBlockSDKType;
            isAmino(o: any): o is _83.RequestBeginBlockAmino;
            encode(message: _83.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestBeginBlock;
            fromJSON(object: any): _83.RequestBeginBlock;
            toJSON(message: _83.RequestBeginBlock): unknown;
            fromPartial(object: Partial<_83.RequestBeginBlock>): _83.RequestBeginBlock;
            fromAmino(object: _83.RequestBeginBlockAmino): _83.RequestBeginBlock;
            toAmino(message: _83.RequestBeginBlock): _83.RequestBeginBlockAmino;
            fromAminoMsg(object: _83.RequestBeginBlockAminoMsg): _83.RequestBeginBlock;
            fromProtoMsg(message: _83.RequestBeginBlockProtoMsg): _83.RequestBeginBlock;
            toProto(message: _83.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _83.RequestBeginBlock): _83.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _83.RequestCheckTx;
            isSDK(o: any): o is _83.RequestCheckTxSDKType;
            isAmino(o: any): o is _83.RequestCheckTxAmino;
            encode(message: _83.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestCheckTx;
            fromJSON(object: any): _83.RequestCheckTx;
            toJSON(message: _83.RequestCheckTx): unknown;
            fromPartial(object: Partial<_83.RequestCheckTx>): _83.RequestCheckTx;
            fromAmino(object: _83.RequestCheckTxAmino): _83.RequestCheckTx;
            toAmino(message: _83.RequestCheckTx): _83.RequestCheckTxAmino;
            fromAminoMsg(object: _83.RequestCheckTxAminoMsg): _83.RequestCheckTx;
            fromProtoMsg(message: _83.RequestCheckTxProtoMsg): _83.RequestCheckTx;
            toProto(message: _83.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _83.RequestCheckTx): _83.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            is(o: any): o is _83.RequestDeliverTx;
            isSDK(o: any): o is _83.RequestDeliverTxSDKType;
            isAmino(o: any): o is _83.RequestDeliverTxAmino;
            encode(message: _83.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestDeliverTx;
            fromJSON(object: any): _83.RequestDeliverTx;
            toJSON(message: _83.RequestDeliverTx): unknown;
            fromPartial(object: Partial<_83.RequestDeliverTx>): _83.RequestDeliverTx;
            fromAmino(object: _83.RequestDeliverTxAmino): _83.RequestDeliverTx;
            toAmino(message: _83.RequestDeliverTx): _83.RequestDeliverTxAmino;
            fromAminoMsg(object: _83.RequestDeliverTxAminoMsg): _83.RequestDeliverTx;
            fromProtoMsg(message: _83.RequestDeliverTxProtoMsg): _83.RequestDeliverTx;
            toProto(message: _83.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _83.RequestDeliverTx): _83.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            is(o: any): o is _83.RequestEndBlock;
            isSDK(o: any): o is _83.RequestEndBlockSDKType;
            isAmino(o: any): o is _83.RequestEndBlockAmino;
            encode(message: _83.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestEndBlock;
            fromJSON(object: any): _83.RequestEndBlock;
            toJSON(message: _83.RequestEndBlock): unknown;
            fromPartial(object: Partial<_83.RequestEndBlock>): _83.RequestEndBlock;
            fromAmino(object: _83.RequestEndBlockAmino): _83.RequestEndBlock;
            toAmino(message: _83.RequestEndBlock): _83.RequestEndBlockAmino;
            fromAminoMsg(object: _83.RequestEndBlockAminoMsg): _83.RequestEndBlock;
            fromProtoMsg(message: _83.RequestEndBlockProtoMsg): _83.RequestEndBlock;
            toProto(message: _83.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _83.RequestEndBlock): _83.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _83.RequestCommit;
            isSDK(o: any): o is _83.RequestCommitSDKType;
            isAmino(o: any): o is _83.RequestCommitAmino;
            encode(_: _83.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestCommit;
            fromJSON(_: any): _83.RequestCommit;
            toJSON(_: _83.RequestCommit): unknown;
            fromPartial(_: Partial<_83.RequestCommit>): _83.RequestCommit;
            fromAmino(_: _83.RequestCommitAmino): _83.RequestCommit;
            toAmino(_: _83.RequestCommit): _83.RequestCommitAmino;
            fromAminoMsg(object: _83.RequestCommitAminoMsg): _83.RequestCommit;
            fromProtoMsg(message: _83.RequestCommitProtoMsg): _83.RequestCommit;
            toProto(message: _83.RequestCommit): Uint8Array;
            toProtoMsg(message: _83.RequestCommit): _83.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _83.RequestListSnapshots;
            isSDK(o: any): o is _83.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _83.RequestListSnapshotsAmino;
            encode(_: _83.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestListSnapshots;
            fromJSON(_: any): _83.RequestListSnapshots;
            toJSON(_: _83.RequestListSnapshots): unknown;
            fromPartial(_: Partial<_83.RequestListSnapshots>): _83.RequestListSnapshots;
            fromAmino(_: _83.RequestListSnapshotsAmino): _83.RequestListSnapshots;
            toAmino(_: _83.RequestListSnapshots): _83.RequestListSnapshotsAmino;
            fromAminoMsg(object: _83.RequestListSnapshotsAminoMsg): _83.RequestListSnapshots;
            fromProtoMsg(message: _83.RequestListSnapshotsProtoMsg): _83.RequestListSnapshots;
            toProto(message: _83.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _83.RequestListSnapshots): _83.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _83.RequestOfferSnapshot;
            isSDK(o: any): o is _83.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _83.RequestOfferSnapshotAmino;
            encode(message: _83.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestOfferSnapshot;
            fromJSON(object: any): _83.RequestOfferSnapshot;
            toJSON(message: _83.RequestOfferSnapshot): unknown;
            fromPartial(object: Partial<_83.RequestOfferSnapshot>): _83.RequestOfferSnapshot;
            fromAmino(object: _83.RequestOfferSnapshotAmino): _83.RequestOfferSnapshot;
            toAmino(message: _83.RequestOfferSnapshot): _83.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _83.RequestOfferSnapshotAminoMsg): _83.RequestOfferSnapshot;
            fromProtoMsg(message: _83.RequestOfferSnapshotProtoMsg): _83.RequestOfferSnapshot;
            toProto(message: _83.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _83.RequestOfferSnapshot): _83.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _83.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _83.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _83.RequestLoadSnapshotChunkAmino;
            encode(message: _83.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestLoadSnapshotChunk;
            fromJSON(object: any): _83.RequestLoadSnapshotChunk;
            toJSON(message: _83.RequestLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_83.RequestLoadSnapshotChunk>): _83.RequestLoadSnapshotChunk;
            fromAmino(object: _83.RequestLoadSnapshotChunkAmino): _83.RequestLoadSnapshotChunk;
            toAmino(message: _83.RequestLoadSnapshotChunk): _83.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _83.RequestLoadSnapshotChunkAminoMsg): _83.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _83.RequestLoadSnapshotChunkProtoMsg): _83.RequestLoadSnapshotChunk;
            toProto(message: _83.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _83.RequestLoadSnapshotChunk): _83.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _83.RequestApplySnapshotChunk;
            isSDK(o: any): o is _83.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _83.RequestApplySnapshotChunkAmino;
            encode(message: _83.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RequestApplySnapshotChunk;
            fromJSON(object: any): _83.RequestApplySnapshotChunk;
            toJSON(message: _83.RequestApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_83.RequestApplySnapshotChunk>): _83.RequestApplySnapshotChunk;
            fromAmino(object: _83.RequestApplySnapshotChunkAmino): _83.RequestApplySnapshotChunk;
            toAmino(message: _83.RequestApplySnapshotChunk): _83.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _83.RequestApplySnapshotChunkAminoMsg): _83.RequestApplySnapshotChunk;
            fromProtoMsg(message: _83.RequestApplySnapshotChunkProtoMsg): _83.RequestApplySnapshotChunk;
            toProto(message: _83.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _83.RequestApplySnapshotChunk): _83.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _83.Response;
            isSDK(o: any): o is _83.ResponseSDKType;
            isAmino(o: any): o is _83.ResponseAmino;
            encode(message: _83.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Response;
            fromJSON(object: any): _83.Response;
            toJSON(message: _83.Response): unknown;
            fromPartial(object: Partial<_83.Response>): _83.Response;
            fromAmino(object: _83.ResponseAmino): _83.Response;
            toAmino(message: _83.Response): _83.ResponseAmino;
            fromAminoMsg(object: _83.ResponseAminoMsg): _83.Response;
            fromProtoMsg(message: _83.ResponseProtoMsg): _83.Response;
            toProto(message: _83.Response): Uint8Array;
            toProtoMsg(message: _83.Response): _83.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _83.ResponseException;
            isSDK(o: any): o is _83.ResponseExceptionSDKType;
            isAmino(o: any): o is _83.ResponseExceptionAmino;
            encode(message: _83.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseException;
            fromJSON(object: any): _83.ResponseException;
            toJSON(message: _83.ResponseException): unknown;
            fromPartial(object: Partial<_83.ResponseException>): _83.ResponseException;
            fromAmino(object: _83.ResponseExceptionAmino): _83.ResponseException;
            toAmino(message: _83.ResponseException): _83.ResponseExceptionAmino;
            fromAminoMsg(object: _83.ResponseExceptionAminoMsg): _83.ResponseException;
            fromProtoMsg(message: _83.ResponseExceptionProtoMsg): _83.ResponseException;
            toProto(message: _83.ResponseException): Uint8Array;
            toProtoMsg(message: _83.ResponseException): _83.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _83.ResponseEcho;
            isSDK(o: any): o is _83.ResponseEchoSDKType;
            isAmino(o: any): o is _83.ResponseEchoAmino;
            encode(message: _83.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseEcho;
            fromJSON(object: any): _83.ResponseEcho;
            toJSON(message: _83.ResponseEcho): unknown;
            fromPartial(object: Partial<_83.ResponseEcho>): _83.ResponseEcho;
            fromAmino(object: _83.ResponseEchoAmino): _83.ResponseEcho;
            toAmino(message: _83.ResponseEcho): _83.ResponseEchoAmino;
            fromAminoMsg(object: _83.ResponseEchoAminoMsg): _83.ResponseEcho;
            fromProtoMsg(message: _83.ResponseEchoProtoMsg): _83.ResponseEcho;
            toProto(message: _83.ResponseEcho): Uint8Array;
            toProtoMsg(message: _83.ResponseEcho): _83.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _83.ResponseFlush;
            isSDK(o: any): o is _83.ResponseFlushSDKType;
            isAmino(o: any): o is _83.ResponseFlushAmino;
            encode(_: _83.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseFlush;
            fromJSON(_: any): _83.ResponseFlush;
            toJSON(_: _83.ResponseFlush): unknown;
            fromPartial(_: Partial<_83.ResponseFlush>): _83.ResponseFlush;
            fromAmino(_: _83.ResponseFlushAmino): _83.ResponseFlush;
            toAmino(_: _83.ResponseFlush): _83.ResponseFlushAmino;
            fromAminoMsg(object: _83.ResponseFlushAminoMsg): _83.ResponseFlush;
            fromProtoMsg(message: _83.ResponseFlushProtoMsg): _83.ResponseFlush;
            toProto(message: _83.ResponseFlush): Uint8Array;
            toProtoMsg(message: _83.ResponseFlush): _83.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _83.ResponseInfo;
            isSDK(o: any): o is _83.ResponseInfoSDKType;
            isAmino(o: any): o is _83.ResponseInfoAmino;
            encode(message: _83.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseInfo;
            fromJSON(object: any): _83.ResponseInfo;
            toJSON(message: _83.ResponseInfo): unknown;
            fromPartial(object: Partial<_83.ResponseInfo>): _83.ResponseInfo;
            fromAmino(object: _83.ResponseInfoAmino): _83.ResponseInfo;
            toAmino(message: _83.ResponseInfo): _83.ResponseInfoAmino;
            fromAminoMsg(object: _83.ResponseInfoAminoMsg): _83.ResponseInfo;
            fromProtoMsg(message: _83.ResponseInfoProtoMsg): _83.ResponseInfo;
            toProto(message: _83.ResponseInfo): Uint8Array;
            toProtoMsg(message: _83.ResponseInfo): _83.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            is(o: any): o is _83.ResponseSetOption;
            isSDK(o: any): o is _83.ResponseSetOptionSDKType;
            isAmino(o: any): o is _83.ResponseSetOptionAmino;
            encode(message: _83.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseSetOption;
            fromJSON(object: any): _83.ResponseSetOption;
            toJSON(message: _83.ResponseSetOption): unknown;
            fromPartial(object: Partial<_83.ResponseSetOption>): _83.ResponseSetOption;
            fromAmino(object: _83.ResponseSetOptionAmino): _83.ResponseSetOption;
            toAmino(message: _83.ResponseSetOption): _83.ResponseSetOptionAmino;
            fromAminoMsg(object: _83.ResponseSetOptionAminoMsg): _83.ResponseSetOption;
            fromProtoMsg(message: _83.ResponseSetOptionProtoMsg): _83.ResponseSetOption;
            toProto(message: _83.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _83.ResponseSetOption): _83.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _83.ResponseInitChain;
            isSDK(o: any): o is _83.ResponseInitChainSDKType;
            isAmino(o: any): o is _83.ResponseInitChainAmino;
            encode(message: _83.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseInitChain;
            fromJSON(object: any): _83.ResponseInitChain;
            toJSON(message: _83.ResponseInitChain): unknown;
            fromPartial(object: Partial<_83.ResponseInitChain>): _83.ResponseInitChain;
            fromAmino(object: _83.ResponseInitChainAmino): _83.ResponseInitChain;
            toAmino(message: _83.ResponseInitChain): _83.ResponseInitChainAmino;
            fromAminoMsg(object: _83.ResponseInitChainAminoMsg): _83.ResponseInitChain;
            fromProtoMsg(message: _83.ResponseInitChainProtoMsg): _83.ResponseInitChain;
            toProto(message: _83.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _83.ResponseInitChain): _83.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _83.ResponseQuery;
            isSDK(o: any): o is _83.ResponseQuerySDKType;
            isAmino(o: any): o is _83.ResponseQueryAmino;
            encode(message: _83.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseQuery;
            fromJSON(object: any): _83.ResponseQuery;
            toJSON(message: _83.ResponseQuery): unknown;
            fromPartial(object: Partial<_83.ResponseQuery>): _83.ResponseQuery;
            fromAmino(object: _83.ResponseQueryAmino): _83.ResponseQuery;
            toAmino(message: _83.ResponseQuery): _83.ResponseQueryAmino;
            fromAminoMsg(object: _83.ResponseQueryAminoMsg): _83.ResponseQuery;
            fromProtoMsg(message: _83.ResponseQueryProtoMsg): _83.ResponseQuery;
            toProto(message: _83.ResponseQuery): Uint8Array;
            toProtoMsg(message: _83.ResponseQuery): _83.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            is(o: any): o is _83.ResponseBeginBlock;
            isSDK(o: any): o is _83.ResponseBeginBlockSDKType;
            isAmino(o: any): o is _83.ResponseBeginBlockAmino;
            encode(message: _83.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseBeginBlock;
            fromJSON(object: any): _83.ResponseBeginBlock;
            toJSON(message: _83.ResponseBeginBlock): unknown;
            fromPartial(object: Partial<_83.ResponseBeginBlock>): _83.ResponseBeginBlock;
            fromAmino(object: _83.ResponseBeginBlockAmino): _83.ResponseBeginBlock;
            toAmino(message: _83.ResponseBeginBlock): _83.ResponseBeginBlockAmino;
            fromAminoMsg(object: _83.ResponseBeginBlockAminoMsg): _83.ResponseBeginBlock;
            fromProtoMsg(message: _83.ResponseBeginBlockProtoMsg): _83.ResponseBeginBlock;
            toProto(message: _83.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _83.ResponseBeginBlock): _83.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _83.ResponseCheckTx;
            isSDK(o: any): o is _83.ResponseCheckTxSDKType;
            isAmino(o: any): o is _83.ResponseCheckTxAmino;
            encode(message: _83.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseCheckTx;
            fromJSON(object: any): _83.ResponseCheckTx;
            toJSON(message: _83.ResponseCheckTx): unknown;
            fromPartial(object: Partial<_83.ResponseCheckTx>): _83.ResponseCheckTx;
            fromAmino(object: _83.ResponseCheckTxAmino): _83.ResponseCheckTx;
            toAmino(message: _83.ResponseCheckTx): _83.ResponseCheckTxAmino;
            fromAminoMsg(object: _83.ResponseCheckTxAminoMsg): _83.ResponseCheckTx;
            fromProtoMsg(message: _83.ResponseCheckTxProtoMsg): _83.ResponseCheckTx;
            toProto(message: _83.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _83.ResponseCheckTx): _83.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            is(o: any): o is _83.ResponseDeliverTx;
            isSDK(o: any): o is _83.ResponseDeliverTxSDKType;
            isAmino(o: any): o is _83.ResponseDeliverTxAmino;
            encode(message: _83.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseDeliverTx;
            fromJSON(object: any): _83.ResponseDeliverTx;
            toJSON(message: _83.ResponseDeliverTx): unknown;
            fromPartial(object: Partial<_83.ResponseDeliverTx>): _83.ResponseDeliverTx;
            fromAmino(object: _83.ResponseDeliverTxAmino): _83.ResponseDeliverTx;
            toAmino(message: _83.ResponseDeliverTx): _83.ResponseDeliverTxAmino;
            fromAminoMsg(object: _83.ResponseDeliverTxAminoMsg): _83.ResponseDeliverTx;
            fromProtoMsg(message: _83.ResponseDeliverTxProtoMsg): _83.ResponseDeliverTx;
            toProto(message: _83.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _83.ResponseDeliverTx): _83.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            is(o: any): o is _83.ResponseEndBlock;
            isSDK(o: any): o is _83.ResponseEndBlockSDKType;
            isAmino(o: any): o is _83.ResponseEndBlockAmino;
            encode(message: _83.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseEndBlock;
            fromJSON(object: any): _83.ResponseEndBlock;
            toJSON(message: _83.ResponseEndBlock): unknown;
            fromPartial(object: Partial<_83.ResponseEndBlock>): _83.ResponseEndBlock;
            fromAmino(object: _83.ResponseEndBlockAmino): _83.ResponseEndBlock;
            toAmino(message: _83.ResponseEndBlock): _83.ResponseEndBlockAmino;
            fromAminoMsg(object: _83.ResponseEndBlockAminoMsg): _83.ResponseEndBlock;
            fromProtoMsg(message: _83.ResponseEndBlockProtoMsg): _83.ResponseEndBlock;
            toProto(message: _83.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _83.ResponseEndBlock): _83.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _83.ResponseCommit;
            isSDK(o: any): o is _83.ResponseCommitSDKType;
            isAmino(o: any): o is _83.ResponseCommitAmino;
            encode(message: _83.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseCommit;
            fromJSON(object: any): _83.ResponseCommit;
            toJSON(message: _83.ResponseCommit): unknown;
            fromPartial(object: Partial<_83.ResponseCommit>): _83.ResponseCommit;
            fromAmino(object: _83.ResponseCommitAmino): _83.ResponseCommit;
            toAmino(message: _83.ResponseCommit): _83.ResponseCommitAmino;
            fromAminoMsg(object: _83.ResponseCommitAminoMsg): _83.ResponseCommit;
            fromProtoMsg(message: _83.ResponseCommitProtoMsg): _83.ResponseCommit;
            toProto(message: _83.ResponseCommit): Uint8Array;
            toProtoMsg(message: _83.ResponseCommit): _83.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _83.ResponseListSnapshots;
            isSDK(o: any): o is _83.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _83.ResponseListSnapshotsAmino;
            encode(message: _83.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseListSnapshots;
            fromJSON(object: any): _83.ResponseListSnapshots;
            toJSON(message: _83.ResponseListSnapshots): unknown;
            fromPartial(object: Partial<_83.ResponseListSnapshots>): _83.ResponseListSnapshots;
            fromAmino(object: _83.ResponseListSnapshotsAmino): _83.ResponseListSnapshots;
            toAmino(message: _83.ResponseListSnapshots): _83.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _83.ResponseListSnapshotsAminoMsg): _83.ResponseListSnapshots;
            fromProtoMsg(message: _83.ResponseListSnapshotsProtoMsg): _83.ResponseListSnapshots;
            toProto(message: _83.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _83.ResponseListSnapshots): _83.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _83.ResponseOfferSnapshot;
            isSDK(o: any): o is _83.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _83.ResponseOfferSnapshotAmino;
            encode(message: _83.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseOfferSnapshot;
            fromJSON(object: any): _83.ResponseOfferSnapshot;
            toJSON(message: _83.ResponseOfferSnapshot): unknown;
            fromPartial(object: Partial<_83.ResponseOfferSnapshot>): _83.ResponseOfferSnapshot;
            fromAmino(object: _83.ResponseOfferSnapshotAmino): _83.ResponseOfferSnapshot;
            toAmino(message: _83.ResponseOfferSnapshot): _83.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _83.ResponseOfferSnapshotAminoMsg): _83.ResponseOfferSnapshot;
            fromProtoMsg(message: _83.ResponseOfferSnapshotProtoMsg): _83.ResponseOfferSnapshot;
            toProto(message: _83.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _83.ResponseOfferSnapshot): _83.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _83.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _83.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _83.ResponseLoadSnapshotChunkAmino;
            encode(message: _83.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _83.ResponseLoadSnapshotChunk;
            toJSON(message: _83.ResponseLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_83.ResponseLoadSnapshotChunk>): _83.ResponseLoadSnapshotChunk;
            fromAmino(object: _83.ResponseLoadSnapshotChunkAmino): _83.ResponseLoadSnapshotChunk;
            toAmino(message: _83.ResponseLoadSnapshotChunk): _83.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _83.ResponseLoadSnapshotChunkAminoMsg): _83.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _83.ResponseLoadSnapshotChunkProtoMsg): _83.ResponseLoadSnapshotChunk;
            toProto(message: _83.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _83.ResponseLoadSnapshotChunk): _83.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _83.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _83.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _83.ResponseApplySnapshotChunkAmino;
            encode(message: _83.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ResponseApplySnapshotChunk;
            fromJSON(object: any): _83.ResponseApplySnapshotChunk;
            toJSON(message: _83.ResponseApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_83.ResponseApplySnapshotChunk>): _83.ResponseApplySnapshotChunk;
            fromAmino(object: _83.ResponseApplySnapshotChunkAmino): _83.ResponseApplySnapshotChunk;
            toAmino(message: _83.ResponseApplySnapshotChunk): _83.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _83.ResponseApplySnapshotChunkAminoMsg): _83.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _83.ResponseApplySnapshotChunkProtoMsg): _83.ResponseApplySnapshotChunk;
            toProto(message: _83.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _83.ResponseApplySnapshotChunk): _83.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _83.ConsensusParams;
            isSDK(o: any): o is _83.ConsensusParamsSDKType;
            isAmino(o: any): o is _83.ConsensusParamsAmino;
            encode(message: _83.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ConsensusParams;
            fromJSON(object: any): _83.ConsensusParams;
            toJSON(message: _83.ConsensusParams): unknown;
            fromPartial(object: Partial<_83.ConsensusParams>): _83.ConsensusParams;
            fromAmino(object: _83.ConsensusParamsAmino): _83.ConsensusParams;
            toAmino(message: _83.ConsensusParams): _83.ConsensusParamsAmino;
            fromAminoMsg(object: _83.ConsensusParamsAminoMsg): _83.ConsensusParams;
            fromProtoMsg(message: _83.ConsensusParamsProtoMsg): _83.ConsensusParams;
            toProto(message: _83.ConsensusParams): Uint8Array;
            toProtoMsg(message: _83.ConsensusParams): _83.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _83.BlockParams;
            isSDK(o: any): o is _83.BlockParamsSDKType;
            isAmino(o: any): o is _83.BlockParamsAmino;
            encode(message: _83.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.BlockParams;
            fromJSON(object: any): _83.BlockParams;
            toJSON(message: _83.BlockParams): unknown;
            fromPartial(object: Partial<_83.BlockParams>): _83.BlockParams;
            fromAmino(object: _83.BlockParamsAmino): _83.BlockParams;
            toAmino(message: _83.BlockParams): _83.BlockParamsAmino;
            fromAminoMsg(object: _83.BlockParamsAminoMsg): _83.BlockParams;
            fromProtoMsg(message: _83.BlockParamsProtoMsg): _83.BlockParams;
            toProto(message: _83.BlockParams): Uint8Array;
            toProtoMsg(message: _83.BlockParams): _83.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            is(o: any): o is _83.LastCommitInfo;
            isSDK(o: any): o is _83.LastCommitInfoSDKType;
            isAmino(o: any): o is _83.LastCommitInfoAmino;
            encode(message: _83.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.LastCommitInfo;
            fromJSON(object: any): _83.LastCommitInfo;
            toJSON(message: _83.LastCommitInfo): unknown;
            fromPartial(object: Partial<_83.LastCommitInfo>): _83.LastCommitInfo;
            fromAmino(object: _83.LastCommitInfoAmino): _83.LastCommitInfo;
            toAmino(message: _83.LastCommitInfo): _83.LastCommitInfoAmino;
            fromAminoMsg(object: _83.LastCommitInfoAminoMsg): _83.LastCommitInfo;
            fromProtoMsg(message: _83.LastCommitInfoProtoMsg): _83.LastCommitInfo;
            toProto(message: _83.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _83.LastCommitInfo): _83.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _83.Event;
            isSDK(o: any): o is _83.EventSDKType;
            isAmino(o: any): o is _83.EventAmino;
            encode(message: _83.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Event;
            fromJSON(object: any): _83.Event;
            toJSON(message: _83.Event): unknown;
            fromPartial(object: Partial<_83.Event>): _83.Event;
            fromAmino(object: _83.EventAmino): _83.Event;
            toAmino(message: _83.Event): _83.EventAmino;
            fromAminoMsg(object: _83.EventAminoMsg): _83.Event;
            fromProtoMsg(message: _83.EventProtoMsg): _83.Event;
            toProto(message: _83.Event): Uint8Array;
            toProtoMsg(message: _83.Event): _83.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _83.EventAttribute;
            isSDK(o: any): o is _83.EventAttributeSDKType;
            isAmino(o: any): o is _83.EventAttributeAmino;
            encode(message: _83.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.EventAttribute;
            fromJSON(object: any): _83.EventAttribute;
            toJSON(message: _83.EventAttribute): unknown;
            fromPartial(object: Partial<_83.EventAttribute>): _83.EventAttribute;
            fromAmino(object: _83.EventAttributeAmino): _83.EventAttribute;
            toAmino(message: _83.EventAttribute): _83.EventAttributeAmino;
            fromAminoMsg(object: _83.EventAttributeAminoMsg): _83.EventAttribute;
            fromProtoMsg(message: _83.EventAttributeProtoMsg): _83.EventAttribute;
            toProto(message: _83.EventAttribute): Uint8Array;
            toProtoMsg(message: _83.EventAttribute): _83.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _83.TxResult;
            isSDK(o: any): o is _83.TxResultSDKType;
            isAmino(o: any): o is _83.TxResultAmino;
            encode(message: _83.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.TxResult;
            fromJSON(object: any): _83.TxResult;
            toJSON(message: _83.TxResult): unknown;
            fromPartial(object: Partial<_83.TxResult>): _83.TxResult;
            fromAmino(object: _83.TxResultAmino): _83.TxResult;
            toAmino(message: _83.TxResult): _83.TxResultAmino;
            fromAminoMsg(object: _83.TxResultAminoMsg): _83.TxResult;
            fromProtoMsg(message: _83.TxResultProtoMsg): _83.TxResult;
            toProto(message: _83.TxResult): Uint8Array;
            toProtoMsg(message: _83.TxResult): _83.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _83.Validator;
            isSDK(o: any): o is _83.ValidatorSDKType;
            isAmino(o: any): o is _83.ValidatorAmino;
            encode(message: _83.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Validator;
            fromJSON(object: any): _83.Validator;
            toJSON(message: _83.Validator): unknown;
            fromPartial(object: Partial<_83.Validator>): _83.Validator;
            fromAmino(object: _83.ValidatorAmino): _83.Validator;
            toAmino(message: _83.Validator): _83.ValidatorAmino;
            fromAminoMsg(object: _83.ValidatorAminoMsg): _83.Validator;
            fromProtoMsg(message: _83.ValidatorProtoMsg): _83.Validator;
            toProto(message: _83.Validator): Uint8Array;
            toProtoMsg(message: _83.Validator): _83.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _83.ValidatorUpdate;
            isSDK(o: any): o is _83.ValidatorUpdateSDKType;
            isAmino(o: any): o is _83.ValidatorUpdateAmino;
            encode(message: _83.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ValidatorUpdate;
            fromJSON(object: any): _83.ValidatorUpdate;
            toJSON(message: _83.ValidatorUpdate): unknown;
            fromPartial(object: Partial<_83.ValidatorUpdate>): _83.ValidatorUpdate;
            fromAmino(object: _83.ValidatorUpdateAmino): _83.ValidatorUpdate;
            toAmino(message: _83.ValidatorUpdate): _83.ValidatorUpdateAmino;
            fromAminoMsg(object: _83.ValidatorUpdateAminoMsg): _83.ValidatorUpdate;
            fromProtoMsg(message: _83.ValidatorUpdateProtoMsg): _83.ValidatorUpdate;
            toProto(message: _83.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _83.ValidatorUpdate): _83.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _83.VoteInfo;
            isSDK(o: any): o is _83.VoteInfoSDKType;
            isAmino(o: any): o is _83.VoteInfoAmino;
            encode(message: _83.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.VoteInfo;
            fromJSON(object: any): _83.VoteInfo;
            toJSON(message: _83.VoteInfo): unknown;
            fromPartial(object: Partial<_83.VoteInfo>): _83.VoteInfo;
            fromAmino(object: _83.VoteInfoAmino): _83.VoteInfo;
            toAmino(message: _83.VoteInfo): _83.VoteInfoAmino;
            fromAminoMsg(object: _83.VoteInfoAminoMsg): _83.VoteInfo;
            fromProtoMsg(message: _83.VoteInfoProtoMsg): _83.VoteInfo;
            toProto(message: _83.VoteInfo): Uint8Array;
            toProtoMsg(message: _83.VoteInfo): _83.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _83.Evidence;
            isSDK(o: any): o is _83.EvidenceSDKType;
            isAmino(o: any): o is _83.EvidenceAmino;
            encode(message: _83.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Evidence;
            fromJSON(object: any): _83.Evidence;
            toJSON(message: _83.Evidence): unknown;
            fromPartial(object: Partial<_83.Evidence>): _83.Evidence;
            fromAmino(object: _83.EvidenceAmino): _83.Evidence;
            toAmino(message: _83.Evidence): _83.EvidenceAmino;
            fromAminoMsg(object: _83.EvidenceAminoMsg): _83.Evidence;
            fromProtoMsg(message: _83.EvidenceProtoMsg): _83.Evidence;
            toProto(message: _83.Evidence): Uint8Array;
            toProtoMsg(message: _83.Evidence): _83.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _83.Snapshot;
            isSDK(o: any): o is _83.SnapshotSDKType;
            isAmino(o: any): o is _83.SnapshotAmino;
            encode(message: _83.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Snapshot;
            fromJSON(object: any): _83.Snapshot;
            toJSON(message: _83.Snapshot): unknown;
            fromPartial(object: Partial<_83.Snapshot>): _83.Snapshot;
            fromAmino(object: _83.SnapshotAmino): _83.Snapshot;
            toAmino(message: _83.Snapshot): _83.SnapshotAmino;
            fromAminoMsg(object: _83.SnapshotAminoMsg): _83.Snapshot;
            fromProtoMsg(message: _83.SnapshotProtoMsg): _83.Snapshot;
            toProto(message: _83.Snapshot): Uint8Array;
            toProtoMsg(message: _83.Snapshot): _83.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _85.Proof;
            isSDK(o: any): o is _85.ProofSDKType;
            isAmino(o: any): o is _85.ProofAmino;
            encode(message: _85.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.Proof;
            fromJSON(object: any): _85.Proof;
            toJSON(message: _85.Proof): unknown;
            fromPartial(object: Partial<_85.Proof>): _85.Proof;
            fromAmino(object: _85.ProofAmino): _85.Proof;
            toAmino(message: _85.Proof): _85.ProofAmino;
            fromAminoMsg(object: _85.ProofAminoMsg): _85.Proof;
            fromProtoMsg(message: _85.ProofProtoMsg): _85.Proof;
            toProto(message: _85.Proof): Uint8Array;
            toProtoMsg(message: _85.Proof): _85.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _85.ValueOp;
            isSDK(o: any): o is _85.ValueOpSDKType;
            isAmino(o: any): o is _85.ValueOpAmino;
            encode(message: _85.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.ValueOp;
            fromJSON(object: any): _85.ValueOp;
            toJSON(message: _85.ValueOp): unknown;
            fromPartial(object: Partial<_85.ValueOp>): _85.ValueOp;
            fromAmino(object: _85.ValueOpAmino): _85.ValueOp;
            toAmino(message: _85.ValueOp): _85.ValueOpAmino;
            fromAminoMsg(object: _85.ValueOpAminoMsg): _85.ValueOp;
            fromProtoMsg(message: _85.ValueOpProtoMsg): _85.ValueOp;
            toProto(message: _85.ValueOp): Uint8Array;
            toProtoMsg(message: _85.ValueOp): _85.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _85.DominoOp;
            isSDK(o: any): o is _85.DominoOpSDKType;
            isAmino(o: any): o is _85.DominoOpAmino;
            encode(message: _85.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.DominoOp;
            fromJSON(object: any): _85.DominoOp;
            toJSON(message: _85.DominoOp): unknown;
            fromPartial(object: Partial<_85.DominoOp>): _85.DominoOp;
            fromAmino(object: _85.DominoOpAmino): _85.DominoOp;
            toAmino(message: _85.DominoOp): _85.DominoOpAmino;
            fromAminoMsg(object: _85.DominoOpAminoMsg): _85.DominoOp;
            fromProtoMsg(message: _85.DominoOpProtoMsg): _85.DominoOp;
            toProto(message: _85.DominoOp): Uint8Array;
            toProtoMsg(message: _85.DominoOp): _85.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _85.ProofOp;
            isSDK(o: any): o is _85.ProofOpSDKType;
            isAmino(o: any): o is _85.ProofOpAmino;
            encode(message: _85.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.ProofOp;
            fromJSON(object: any): _85.ProofOp;
            toJSON(message: _85.ProofOp): unknown;
            fromPartial(object: Partial<_85.ProofOp>): _85.ProofOp;
            fromAmino(object: _85.ProofOpAmino): _85.ProofOp;
            toAmino(message: _85.ProofOp): _85.ProofOpAmino;
            fromAminoMsg(object: _85.ProofOpAminoMsg): _85.ProofOp;
            fromProtoMsg(message: _85.ProofOpProtoMsg): _85.ProofOp;
            toProto(message: _85.ProofOp): Uint8Array;
            toProtoMsg(message: _85.ProofOp): _85.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _85.ProofOps;
            isSDK(o: any): o is _85.ProofOpsSDKType;
            isAmino(o: any): o is _85.ProofOpsAmino;
            encode(message: _85.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.ProofOps;
            fromJSON(object: any): _85.ProofOps;
            toJSON(message: _85.ProofOps): unknown;
            fromPartial(object: Partial<_85.ProofOps>): _85.ProofOps;
            fromAmino(object: _85.ProofOpsAmino): _85.ProofOps;
            toAmino(message: _85.ProofOps): _85.ProofOpsAmino;
            fromAminoMsg(object: _85.ProofOpsAminoMsg): _85.ProofOps;
            fromProtoMsg(message: _85.ProofOpsProtoMsg): _85.ProofOps;
            toProto(message: _85.ProofOps): Uint8Array;
            toProtoMsg(message: _85.ProofOps): _85.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _84.PublicKey;
            isSDK(o: any): o is _84.PublicKeySDKType;
            isAmino(o: any): o is _84.PublicKeyAmino;
            encode(message: _84.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.PublicKey;
            fromJSON(object: any): _84.PublicKey;
            toJSON(message: _84.PublicKey): unknown;
            fromPartial(object: Partial<_84.PublicKey>): _84.PublicKey;
            fromAmino(object: _84.PublicKeyAmino): _84.PublicKey;
            toAmino(message: _84.PublicKey): _84.PublicKeyAmino;
            fromAminoMsg(object: _84.PublicKeyAminoMsg): _84.PublicKey;
            fromProtoMsg(message: _84.PublicKeyProtoMsg): _84.PublicKey;
            toProto(message: _84.PublicKey): Uint8Array;
            toProtoMsg(message: _84.PublicKey): _84.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _86.BitArray;
                isSDK(o: any): o is _86.BitArraySDKType;
                isAmino(o: any): o is _86.BitArrayAmino;
                encode(message: _86.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.BitArray;
                fromJSON(object: any): _86.BitArray;
                toJSON(message: _86.BitArray): unknown;
                fromPartial(object: Partial<_86.BitArray>): _86.BitArray;
                fromAmino(object: _86.BitArrayAmino): _86.BitArray;
                toAmino(message: _86.BitArray): _86.BitArrayAmino;
                fromAminoMsg(object: _86.BitArrayAminoMsg): _86.BitArray;
                fromProtoMsg(message: _86.BitArrayProtoMsg): _86.BitArray;
                toProto(message: _86.BitArray): Uint8Array;
                toProtoMsg(message: _86.BitArray): _86.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _87.ProtocolVersion;
            isSDK(o: any): o is _87.ProtocolVersionSDKType;
            isAmino(o: any): o is _87.ProtocolVersionAmino;
            encode(message: _87.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.ProtocolVersion;
            fromJSON(object: any): _87.ProtocolVersion;
            toJSON(message: _87.ProtocolVersion): unknown;
            fromPartial(object: Partial<_87.ProtocolVersion>): _87.ProtocolVersion;
            fromAmino(object: _87.ProtocolVersionAmino): _87.ProtocolVersion;
            toAmino(message: _87.ProtocolVersion): _87.ProtocolVersionAmino;
            fromAminoMsg(object: _87.ProtocolVersionAminoMsg): _87.ProtocolVersion;
            fromProtoMsg(message: _87.ProtocolVersionProtoMsg): _87.ProtocolVersion;
            toProto(message: _87.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _87.ProtocolVersion): _87.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            is(o: any): o is _87.NodeInfo;
            isSDK(o: any): o is _87.NodeInfoSDKType;
            isAmino(o: any): o is _87.NodeInfoAmino;
            encode(message: _87.NodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.NodeInfo;
            fromJSON(object: any): _87.NodeInfo;
            toJSON(message: _87.NodeInfo): unknown;
            fromPartial(object: Partial<_87.NodeInfo>): _87.NodeInfo;
            fromAmino(object: _87.NodeInfoAmino): _87.NodeInfo;
            toAmino(message: _87.NodeInfo): _87.NodeInfoAmino;
            fromAminoMsg(object: _87.NodeInfoAminoMsg): _87.NodeInfo;
            fromProtoMsg(message: _87.NodeInfoProtoMsg): _87.NodeInfo;
            toProto(message: _87.NodeInfo): Uint8Array;
            toProtoMsg(message: _87.NodeInfo): _87.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _87.NodeInfoOther;
            isSDK(o: any): o is _87.NodeInfoOtherSDKType;
            isAmino(o: any): o is _87.NodeInfoOtherAmino;
            encode(message: _87.NodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.NodeInfoOther;
            fromJSON(object: any): _87.NodeInfoOther;
            toJSON(message: _87.NodeInfoOther): unknown;
            fromPartial(object: Partial<_87.NodeInfoOther>): _87.NodeInfoOther;
            fromAmino(object: _87.NodeInfoOtherAmino): _87.NodeInfoOther;
            toAmino(message: _87.NodeInfoOther): _87.NodeInfoOtherAmino;
            fromAminoMsg(object: _87.NodeInfoOtherAminoMsg): _87.NodeInfoOther;
            fromProtoMsg(message: _87.NodeInfoOtherProtoMsg): _87.NodeInfoOther;
            toProto(message: _87.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _87.NodeInfoOther): _87.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            is(o: any): o is _87.PeerInfo;
            isSDK(o: any): o is _87.PeerInfoSDKType;
            isAmino(o: any): o is _87.PeerInfoAmino;
            encode(message: _87.PeerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.PeerInfo;
            fromJSON(object: any): _87.PeerInfo;
            toJSON(message: _87.PeerInfo): unknown;
            fromPartial(object: Partial<_87.PeerInfo>): _87.PeerInfo;
            fromAmino(object: _87.PeerInfoAmino): _87.PeerInfo;
            toAmino(message: _87.PeerInfo): _87.PeerInfoAmino;
            fromAminoMsg(object: _87.PeerInfoAminoMsg): _87.PeerInfo;
            fromProtoMsg(message: _87.PeerInfoProtoMsg): _87.PeerInfo;
            toProto(message: _87.PeerInfo): Uint8Array;
            toProtoMsg(message: _87.PeerInfo): _87.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            is(o: any): o is _87.PeerAddressInfo;
            isSDK(o: any): o is _87.PeerAddressInfoSDKType;
            isAmino(o: any): o is _87.PeerAddressInfoAmino;
            encode(message: _87.PeerAddressInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.PeerAddressInfo;
            fromJSON(object: any): _87.PeerAddressInfo;
            toJSON(message: _87.PeerAddressInfo): unknown;
            fromPartial(object: Partial<_87.PeerAddressInfo>): _87.PeerAddressInfo;
            fromAmino(object: _87.PeerAddressInfoAmino): _87.PeerAddressInfo;
            toAmino(message: _87.PeerAddressInfo): _87.PeerAddressInfoAmino;
            fromAminoMsg(object: _87.PeerAddressInfoAminoMsg): _87.PeerAddressInfo;
            fromProtoMsg(message: _87.PeerAddressInfoProtoMsg): _87.PeerAddressInfo;
            toProto(message: _87.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _87.PeerAddressInfo): _87.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _92.ValidatorSet;
            isSDK(o: any): o is _92.ValidatorSetSDKType;
            isAmino(o: any): o is _92.ValidatorSetAmino;
            encode(message: _92.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.ValidatorSet;
            fromJSON(object: any): _92.ValidatorSet;
            toJSON(message: _92.ValidatorSet): unknown;
            fromPartial(object: Partial<_92.ValidatorSet>): _92.ValidatorSet;
            fromAmino(object: _92.ValidatorSetAmino): _92.ValidatorSet;
            toAmino(message: _92.ValidatorSet): _92.ValidatorSetAmino;
            fromAminoMsg(object: _92.ValidatorSetAminoMsg): _92.ValidatorSet;
            fromProtoMsg(message: _92.ValidatorSetProtoMsg): _92.ValidatorSet;
            toProto(message: _92.ValidatorSet): Uint8Array;
            toProtoMsg(message: _92.ValidatorSet): _92.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _92.Validator;
            isSDK(o: any): o is _92.ValidatorSDKType;
            isAmino(o: any): o is _92.ValidatorAmino;
            encode(message: _92.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.Validator;
            fromJSON(object: any): _92.Validator;
            toJSON(message: _92.Validator): unknown;
            fromPartial(object: Partial<_92.Validator>): _92.Validator;
            fromAmino(object: _92.ValidatorAmino): _92.Validator;
            toAmino(message: _92.Validator): _92.ValidatorAmino;
            fromAminoMsg(object: _92.ValidatorAminoMsg): _92.Validator;
            fromProtoMsg(message: _92.ValidatorProtoMsg): _92.Validator;
            toProto(message: _92.Validator): Uint8Array;
            toProtoMsg(message: _92.Validator): _92.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _92.SimpleValidator;
            isSDK(o: any): o is _92.SimpleValidatorSDKType;
            isAmino(o: any): o is _92.SimpleValidatorAmino;
            encode(message: _92.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.SimpleValidator;
            fromJSON(object: any): _92.SimpleValidator;
            toJSON(message: _92.SimpleValidator): unknown;
            fromPartial(object: Partial<_92.SimpleValidator>): _92.SimpleValidator;
            fromAmino(object: _92.SimpleValidatorAmino): _92.SimpleValidator;
            toAmino(message: _92.SimpleValidator): _92.SimpleValidatorAmino;
            fromAminoMsg(object: _92.SimpleValidatorAminoMsg): _92.SimpleValidator;
            fromProtoMsg(message: _92.SimpleValidatorProtoMsg): _92.SimpleValidator;
            toProto(message: _92.SimpleValidator): Uint8Array;
            toProtoMsg(message: _92.SimpleValidator): _92.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _91.BlockIDFlag;
        blockIDFlagToJSON(object: _91.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _91.SignedMsgType;
        signedMsgTypeToJSON(object: _91.SignedMsgType): string;
        BlockIDFlag: typeof _91.BlockIDFlag;
        BlockIDFlagSDKType: typeof _91.BlockIDFlag;
        BlockIDFlagAmino: typeof _91.BlockIDFlag;
        SignedMsgType: typeof _91.SignedMsgType;
        SignedMsgTypeSDKType: typeof _91.SignedMsgType;
        SignedMsgTypeAmino: typeof _91.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _91.PartSetHeader;
            isSDK(o: any): o is _91.PartSetHeaderSDKType;
            isAmino(o: any): o is _91.PartSetHeaderAmino;
            encode(message: _91.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.PartSetHeader;
            fromJSON(object: any): _91.PartSetHeader;
            toJSON(message: _91.PartSetHeader): unknown;
            fromPartial(object: Partial<_91.PartSetHeader>): _91.PartSetHeader;
            fromAmino(object: _91.PartSetHeaderAmino): _91.PartSetHeader;
            toAmino(message: _91.PartSetHeader): _91.PartSetHeaderAmino;
            fromAminoMsg(object: _91.PartSetHeaderAminoMsg): _91.PartSetHeader;
            fromProtoMsg(message: _91.PartSetHeaderProtoMsg): _91.PartSetHeader;
            toProto(message: _91.PartSetHeader): Uint8Array;
            toProtoMsg(message: _91.PartSetHeader): _91.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _91.Part;
            isSDK(o: any): o is _91.PartSDKType;
            isAmino(o: any): o is _91.PartAmino;
            encode(message: _91.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Part;
            fromJSON(object: any): _91.Part;
            toJSON(message: _91.Part): unknown;
            fromPartial(object: Partial<_91.Part>): _91.Part;
            fromAmino(object: _91.PartAmino): _91.Part;
            toAmino(message: _91.Part): _91.PartAmino;
            fromAminoMsg(object: _91.PartAminoMsg): _91.Part;
            fromProtoMsg(message: _91.PartProtoMsg): _91.Part;
            toProto(message: _91.Part): Uint8Array;
            toProtoMsg(message: _91.Part): _91.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _91.BlockID;
            isSDK(o: any): o is _91.BlockIDSDKType;
            isAmino(o: any): o is _91.BlockIDAmino;
            encode(message: _91.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.BlockID;
            fromJSON(object: any): _91.BlockID;
            toJSON(message: _91.BlockID): unknown;
            fromPartial(object: Partial<_91.BlockID>): _91.BlockID;
            fromAmino(object: _91.BlockIDAmino): _91.BlockID;
            toAmino(message: _91.BlockID): _91.BlockIDAmino;
            fromAminoMsg(object: _91.BlockIDAminoMsg): _91.BlockID;
            fromProtoMsg(message: _91.BlockIDProtoMsg): _91.BlockID;
            toProto(message: _91.BlockID): Uint8Array;
            toProtoMsg(message: _91.BlockID): _91.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _91.Header;
            isSDK(o: any): o is _91.HeaderSDKType;
            isAmino(o: any): o is _91.HeaderAmino;
            encode(message: _91.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Header;
            fromJSON(object: any): _91.Header;
            toJSON(message: _91.Header): unknown;
            fromPartial(object: Partial<_91.Header>): _91.Header;
            fromAmino(object: _91.HeaderAmino): _91.Header;
            toAmino(message: _91.Header): _91.HeaderAmino;
            fromAminoMsg(object: _91.HeaderAminoMsg): _91.Header;
            fromProtoMsg(message: _91.HeaderProtoMsg): _91.Header;
            toProto(message: _91.Header): Uint8Array;
            toProtoMsg(message: _91.Header): _91.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _91.Data;
            isSDK(o: any): o is _91.DataSDKType;
            isAmino(o: any): o is _91.DataAmino;
            encode(message: _91.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Data;
            fromJSON(object: any): _91.Data;
            toJSON(message: _91.Data): unknown;
            fromPartial(object: Partial<_91.Data>): _91.Data;
            fromAmino(object: _91.DataAmino): _91.Data;
            toAmino(message: _91.Data): _91.DataAmino;
            fromAminoMsg(object: _91.DataAminoMsg): _91.Data;
            fromProtoMsg(message: _91.DataProtoMsg): _91.Data;
            toProto(message: _91.Data): Uint8Array;
            toProtoMsg(message: _91.Data): _91.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _91.Vote;
            isSDK(o: any): o is _91.VoteSDKType;
            isAmino(o: any): o is _91.VoteAmino;
            encode(message: _91.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Vote;
            fromJSON(object: any): _91.Vote;
            toJSON(message: _91.Vote): unknown;
            fromPartial(object: Partial<_91.Vote>): _91.Vote;
            fromAmino(object: _91.VoteAmino): _91.Vote;
            toAmino(message: _91.Vote): _91.VoteAmino;
            fromAminoMsg(object: _91.VoteAminoMsg): _91.Vote;
            fromProtoMsg(message: _91.VoteProtoMsg): _91.Vote;
            toProto(message: _91.Vote): Uint8Array;
            toProtoMsg(message: _91.Vote): _91.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _91.Commit;
            isSDK(o: any): o is _91.CommitSDKType;
            isAmino(o: any): o is _91.CommitAmino;
            encode(message: _91.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Commit;
            fromJSON(object: any): _91.Commit;
            toJSON(message: _91.Commit): unknown;
            fromPartial(object: Partial<_91.Commit>): _91.Commit;
            fromAmino(object: _91.CommitAmino): _91.Commit;
            toAmino(message: _91.Commit): _91.CommitAmino;
            fromAminoMsg(object: _91.CommitAminoMsg): _91.Commit;
            fromProtoMsg(message: _91.CommitProtoMsg): _91.Commit;
            toProto(message: _91.Commit): Uint8Array;
            toProtoMsg(message: _91.Commit): _91.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _91.CommitSig;
            isSDK(o: any): o is _91.CommitSigSDKType;
            isAmino(o: any): o is _91.CommitSigAmino;
            encode(message: _91.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.CommitSig;
            fromJSON(object: any): _91.CommitSig;
            toJSON(message: _91.CommitSig): unknown;
            fromPartial(object: Partial<_91.CommitSig>): _91.CommitSig;
            fromAmino(object: _91.CommitSigAmino): _91.CommitSig;
            toAmino(message: _91.CommitSig): _91.CommitSigAmino;
            fromAminoMsg(object: _91.CommitSigAminoMsg): _91.CommitSig;
            fromProtoMsg(message: _91.CommitSigProtoMsg): _91.CommitSig;
            toProto(message: _91.CommitSig): Uint8Array;
            toProtoMsg(message: _91.CommitSig): _91.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _91.Proposal;
            isSDK(o: any): o is _91.ProposalSDKType;
            isAmino(o: any): o is _91.ProposalAmino;
            encode(message: _91.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.Proposal;
            fromJSON(object: any): _91.Proposal;
            toJSON(message: _91.Proposal): unknown;
            fromPartial(object: Partial<_91.Proposal>): _91.Proposal;
            fromAmino(object: _91.ProposalAmino): _91.Proposal;
            toAmino(message: _91.Proposal): _91.ProposalAmino;
            fromAminoMsg(object: _91.ProposalAminoMsg): _91.Proposal;
            fromProtoMsg(message: _91.ProposalProtoMsg): _91.Proposal;
            toProto(message: _91.Proposal): Uint8Array;
            toProtoMsg(message: _91.Proposal): _91.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _91.SignedHeader;
            isSDK(o: any): o is _91.SignedHeaderSDKType;
            isAmino(o: any): o is _91.SignedHeaderAmino;
            encode(message: _91.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.SignedHeader;
            fromJSON(object: any): _91.SignedHeader;
            toJSON(message: _91.SignedHeader): unknown;
            fromPartial(object: Partial<_91.SignedHeader>): _91.SignedHeader;
            fromAmino(object: _91.SignedHeaderAmino): _91.SignedHeader;
            toAmino(message: _91.SignedHeader): _91.SignedHeaderAmino;
            fromAminoMsg(object: _91.SignedHeaderAminoMsg): _91.SignedHeader;
            fromProtoMsg(message: _91.SignedHeaderProtoMsg): _91.SignedHeader;
            toProto(message: _91.SignedHeader): Uint8Array;
            toProtoMsg(message: _91.SignedHeader): _91.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _91.LightBlock;
            isSDK(o: any): o is _91.LightBlockSDKType;
            isAmino(o: any): o is _91.LightBlockAmino;
            encode(message: _91.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.LightBlock;
            fromJSON(object: any): _91.LightBlock;
            toJSON(message: _91.LightBlock): unknown;
            fromPartial(object: Partial<_91.LightBlock>): _91.LightBlock;
            fromAmino(object: _91.LightBlockAmino): _91.LightBlock;
            toAmino(message: _91.LightBlock): _91.LightBlockAmino;
            fromAminoMsg(object: _91.LightBlockAminoMsg): _91.LightBlock;
            fromProtoMsg(message: _91.LightBlockProtoMsg): _91.LightBlock;
            toProto(message: _91.LightBlock): Uint8Array;
            toProtoMsg(message: _91.LightBlock): _91.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _91.BlockMeta;
            isSDK(o: any): o is _91.BlockMetaSDKType;
            isAmino(o: any): o is _91.BlockMetaAmino;
            encode(message: _91.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.BlockMeta;
            fromJSON(object: any): _91.BlockMeta;
            toJSON(message: _91.BlockMeta): unknown;
            fromPartial(object: Partial<_91.BlockMeta>): _91.BlockMeta;
            fromAmino(object: _91.BlockMetaAmino): _91.BlockMeta;
            toAmino(message: _91.BlockMeta): _91.BlockMetaAmino;
            fromAminoMsg(object: _91.BlockMetaAminoMsg): _91.BlockMeta;
            fromProtoMsg(message: _91.BlockMetaProtoMsg): _91.BlockMeta;
            toProto(message: _91.BlockMeta): Uint8Array;
            toProtoMsg(message: _91.BlockMeta): _91.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _91.TxProof;
            isSDK(o: any): o is _91.TxProofSDKType;
            isAmino(o: any): o is _91.TxProofAmino;
            encode(message: _91.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.TxProof;
            fromJSON(object: any): _91.TxProof;
            toJSON(message: _91.TxProof): unknown;
            fromPartial(object: Partial<_91.TxProof>): _91.TxProof;
            fromAmino(object: _91.TxProofAmino): _91.TxProof;
            toAmino(message: _91.TxProof): _91.TxProofAmino;
            fromAminoMsg(object: _91.TxProofAminoMsg): _91.TxProof;
            fromProtoMsg(message: _91.TxProofProtoMsg): _91.TxProof;
            toProto(message: _91.TxProof): Uint8Array;
            toProtoMsg(message: _91.TxProof): _91.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _90.ConsensusParams;
            isSDK(o: any): o is _90.ConsensusParamsSDKType;
            isAmino(o: any): o is _90.ConsensusParamsAmino;
            encode(message: _90.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.ConsensusParams;
            fromJSON(object: any): _90.ConsensusParams;
            toJSON(message: _90.ConsensusParams): unknown;
            fromPartial(object: Partial<_90.ConsensusParams>): _90.ConsensusParams;
            fromAmino(object: _90.ConsensusParamsAmino): _90.ConsensusParams;
            toAmino(message: _90.ConsensusParams): _90.ConsensusParamsAmino;
            fromAminoMsg(object: _90.ConsensusParamsAminoMsg): _90.ConsensusParams;
            fromProtoMsg(message: _90.ConsensusParamsProtoMsg): _90.ConsensusParams;
            toProto(message: _90.ConsensusParams): Uint8Array;
            toProtoMsg(message: _90.ConsensusParams): _90.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _90.BlockParams;
            isSDK(o: any): o is _90.BlockParamsSDKType;
            isAmino(o: any): o is _90.BlockParamsAmino;
            encode(message: _90.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.BlockParams;
            fromJSON(object: any): _90.BlockParams;
            toJSON(message: _90.BlockParams): unknown;
            fromPartial(object: Partial<_90.BlockParams>): _90.BlockParams;
            fromAmino(object: _90.BlockParamsAmino): _90.BlockParams;
            toAmino(message: _90.BlockParams): _90.BlockParamsAmino;
            fromAminoMsg(object: _90.BlockParamsAminoMsg): _90.BlockParams;
            fromProtoMsg(message: _90.BlockParamsProtoMsg): _90.BlockParams;
            toProto(message: _90.BlockParams): Uint8Array;
            toProtoMsg(message: _90.BlockParams): _90.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _90.EvidenceParams;
            isSDK(o: any): o is _90.EvidenceParamsSDKType;
            isAmino(o: any): o is _90.EvidenceParamsAmino;
            encode(message: _90.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.EvidenceParams;
            fromJSON(object: any): _90.EvidenceParams;
            toJSON(message: _90.EvidenceParams): unknown;
            fromPartial(object: Partial<_90.EvidenceParams>): _90.EvidenceParams;
            fromAmino(object: _90.EvidenceParamsAmino): _90.EvidenceParams;
            toAmino(message: _90.EvidenceParams): _90.EvidenceParamsAmino;
            fromAminoMsg(object: _90.EvidenceParamsAminoMsg): _90.EvidenceParams;
            fromProtoMsg(message: _90.EvidenceParamsProtoMsg): _90.EvidenceParams;
            toProto(message: _90.EvidenceParams): Uint8Array;
            toProtoMsg(message: _90.EvidenceParams): _90.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _90.ValidatorParams;
            isSDK(o: any): o is _90.ValidatorParamsSDKType;
            isAmino(o: any): o is _90.ValidatorParamsAmino;
            encode(message: _90.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.ValidatorParams;
            fromJSON(object: any): _90.ValidatorParams;
            toJSON(message: _90.ValidatorParams): unknown;
            fromPartial(object: Partial<_90.ValidatorParams>): _90.ValidatorParams;
            fromAmino(object: _90.ValidatorParamsAmino): _90.ValidatorParams;
            toAmino(message: _90.ValidatorParams): _90.ValidatorParamsAmino;
            fromAminoMsg(object: _90.ValidatorParamsAminoMsg): _90.ValidatorParams;
            fromProtoMsg(message: _90.ValidatorParamsProtoMsg): _90.ValidatorParams;
            toProto(message: _90.ValidatorParams): Uint8Array;
            toProtoMsg(message: _90.ValidatorParams): _90.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _90.VersionParams;
            isSDK(o: any): o is _90.VersionParamsSDKType;
            isAmino(o: any): o is _90.VersionParamsAmino;
            encode(message: _90.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.VersionParams;
            fromJSON(object: any): _90.VersionParams;
            toJSON(message: _90.VersionParams): unknown;
            fromPartial(object: Partial<_90.VersionParams>): _90.VersionParams;
            fromAmino(object: _90.VersionParamsAmino): _90.VersionParams;
            toAmino(message: _90.VersionParams): _90.VersionParamsAmino;
            fromAminoMsg(object: _90.VersionParamsAminoMsg): _90.VersionParams;
            fromProtoMsg(message: _90.VersionParamsProtoMsg): _90.VersionParams;
            toProto(message: _90.VersionParams): Uint8Array;
            toProtoMsg(message: _90.VersionParams): _90.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _90.HashedParams;
            isSDK(o: any): o is _90.HashedParamsSDKType;
            isAmino(o: any): o is _90.HashedParamsAmino;
            encode(message: _90.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.HashedParams;
            fromJSON(object: any): _90.HashedParams;
            toJSON(message: _90.HashedParams): unknown;
            fromPartial(object: Partial<_90.HashedParams>): _90.HashedParams;
            fromAmino(object: _90.HashedParamsAmino): _90.HashedParams;
            toAmino(message: _90.HashedParams): _90.HashedParamsAmino;
            fromAminoMsg(object: _90.HashedParamsAminoMsg): _90.HashedParams;
            fromProtoMsg(message: _90.HashedParamsProtoMsg): _90.HashedParams;
            toProto(message: _90.HashedParams): Uint8Array;
            toProtoMsg(message: _90.HashedParams): _90.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _89.Evidence;
            isSDK(o: any): o is _89.EvidenceSDKType;
            isAmino(o: any): o is _89.EvidenceAmino;
            encode(message: _89.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.Evidence;
            fromJSON(object: any): _89.Evidence;
            toJSON(message: _89.Evidence): unknown;
            fromPartial(object: Partial<_89.Evidence>): _89.Evidence;
            fromAmino(object: _89.EvidenceAmino): _89.Evidence;
            toAmino(message: _89.Evidence): _89.EvidenceAmino;
            fromAminoMsg(object: _89.EvidenceAminoMsg): _89.Evidence;
            fromProtoMsg(message: _89.EvidenceProtoMsg): _89.Evidence;
            toProto(message: _89.Evidence): Uint8Array;
            toProtoMsg(message: _89.Evidence): _89.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _89.DuplicateVoteEvidence;
            isSDK(o: any): o is _89.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _89.DuplicateVoteEvidenceAmino;
            encode(message: _89.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.DuplicateVoteEvidence;
            fromJSON(object: any): _89.DuplicateVoteEvidence;
            toJSON(message: _89.DuplicateVoteEvidence): unknown;
            fromPartial(object: Partial<_89.DuplicateVoteEvidence>): _89.DuplicateVoteEvidence;
            fromAmino(object: _89.DuplicateVoteEvidenceAmino): _89.DuplicateVoteEvidence;
            toAmino(message: _89.DuplicateVoteEvidence): _89.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _89.DuplicateVoteEvidenceAminoMsg): _89.DuplicateVoteEvidence;
            fromProtoMsg(message: _89.DuplicateVoteEvidenceProtoMsg): _89.DuplicateVoteEvidence;
            toProto(message: _89.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _89.DuplicateVoteEvidence): _89.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _89.LightClientAttackEvidence;
            isSDK(o: any): o is _89.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _89.LightClientAttackEvidenceAmino;
            encode(message: _89.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.LightClientAttackEvidence;
            fromJSON(object: any): _89.LightClientAttackEvidence;
            toJSON(message: _89.LightClientAttackEvidence): unknown;
            fromPartial(object: Partial<_89.LightClientAttackEvidence>): _89.LightClientAttackEvidence;
            fromAmino(object: _89.LightClientAttackEvidenceAmino): _89.LightClientAttackEvidence;
            toAmino(message: _89.LightClientAttackEvidence): _89.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _89.LightClientAttackEvidenceAminoMsg): _89.LightClientAttackEvidence;
            fromProtoMsg(message: _89.LightClientAttackEvidenceProtoMsg): _89.LightClientAttackEvidence;
            toProto(message: _89.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _89.LightClientAttackEvidence): _89.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _89.EvidenceList;
            isSDK(o: any): o is _89.EvidenceListSDKType;
            isAmino(o: any): o is _89.EvidenceListAmino;
            encode(message: _89.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.EvidenceList;
            fromJSON(object: any): _89.EvidenceList;
            toJSON(message: _89.EvidenceList): unknown;
            fromPartial(object: Partial<_89.EvidenceList>): _89.EvidenceList;
            fromAmino(object: _89.EvidenceListAmino): _89.EvidenceList;
            toAmino(message: _89.EvidenceList): _89.EvidenceListAmino;
            fromAminoMsg(object: _89.EvidenceListAminoMsg): _89.EvidenceList;
            fromProtoMsg(message: _89.EvidenceListProtoMsg): _89.EvidenceList;
            toProto(message: _89.EvidenceList): Uint8Array;
            toProtoMsg(message: _89.EvidenceList): _89.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _88.Block;
            isSDK(o: any): o is _88.BlockSDKType;
            isAmino(o: any): o is _88.BlockAmino;
            encode(message: _88.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.Block;
            fromJSON(object: any): _88.Block;
            toJSON(message: _88.Block): unknown;
            fromPartial(object: Partial<_88.Block>): _88.Block;
            fromAmino(object: _88.BlockAmino): _88.Block;
            toAmino(message: _88.Block): _88.BlockAmino;
            fromAminoMsg(object: _88.BlockAminoMsg): _88.Block;
            fromProtoMsg(message: _88.BlockProtoMsg): _88.Block;
            toProto(message: _88.Block): Uint8Array;
            toProtoMsg(message: _88.Block): _88.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _93.App;
            isSDK(o: any): o is _93.AppSDKType;
            isAmino(o: any): o is _93.AppAmino;
            encode(message: _93.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.App;
            fromJSON(object: any): _93.App;
            toJSON(message: _93.App): unknown;
            fromPartial(object: Partial<_93.App>): _93.App;
            fromAmino(object: _93.AppAmino): _93.App;
            toAmino(message: _93.App): _93.AppAmino;
            fromAminoMsg(object: _93.AppAminoMsg): _93.App;
            fromProtoMsg(message: _93.AppProtoMsg): _93.App;
            toProto(message: _93.App): Uint8Array;
            toProtoMsg(message: _93.App): _93.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _93.Consensus;
            isSDK(o: any): o is _93.ConsensusSDKType;
            isAmino(o: any): o is _93.ConsensusAmino;
            encode(message: _93.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.Consensus;
            fromJSON(object: any): _93.Consensus;
            toJSON(message: _93.Consensus): unknown;
            fromPartial(object: Partial<_93.Consensus>): _93.Consensus;
            fromAmino(object: _93.ConsensusAmino): _93.Consensus;
            toAmino(message: _93.Consensus): _93.ConsensusAmino;
            fromAminoMsg(object: _93.ConsensusAminoMsg): _93.Consensus;
            fromProtoMsg(message: _93.ConsensusProtoMsg): _93.Consensus;
            toProto(message: _93.Consensus): Uint8Array;
            toProtoMsg(message: _93.Consensus): _93.ConsensusProtoMsg;
        };
    };
}
